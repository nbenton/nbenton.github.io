%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: polyphonypaged.dvi
%%CreationDate: Tue Dec 11 10:18:50 2001
%%Pages: 11
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips polyphonypaged.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2001.12.11:1018
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (polyphonypaged.dvi)
@start
%DVIPSBitmapFont: Fa cmtt9 9 20
/Fa 20 127 df<121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A728927>46
D<1538157C15FCA2140115F8140315F0140715E0140F15C0141F1580143F1500A25C147E
14FE5C13015C13035C13075C130F5CA2131F5C133F91C7FC5B137E13FE5B12015B12035B
A212075B120F5B121F5B123F90C8FC5A127E12FE5AA25A12781E3A7CB327>I<121EEA7F
80A2EAFFC0A4EA7F80A2EA1E00C7FCAC121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A2072
9F27>58 D<3803FFC0000F13F04813FC4813FF811380EC1FC0381F000F000480C71207A2
EB0FFF137F0003B5FC120F5A383FFC07EA7FC0130012FE5AA46C130F007F131FEBC0FF6C
B612806C15C07E000313F1C69038807F8022207C9F27>97 D<EB0FFF017F13C048B512E0
4814F05A380FF807EA1FE0393FC003E0903880008048C8FC127EA212FE5AA67E127EA200
7F14F0393F8001F813C0381FE003390FF80FF06CB5FC6C14E06C14C06C6C1300EB0FF81D
207B9F27>99 D<EB0FF8EB3FFE90B51280000314C04814E0390FFC0FF0391FE003F8EBC0
01D83F8013FC48C7FC127E157E12FEB612FEA415FC00FCC8FC7E127E127F6C143C6D137E
6C7E01F013FE390FFC07FC6CB5FC000114F86C14F0013F13C0903807FE001F207D9F27>
101 D<EC1FF0ECFFF84913FC4913FE5BEB0FF014C0011F137CEC8000A6007FB512F0B612
F8A36C14F039001F8000B3A4003FB512C04814E0A36C14C01F2E7EAD27>I<EA7FE0487E
A3127F1203A9147F9038F1FFC001F713F090B5FC8114C1EC01FCEBFE005B5BA25BB03A7F
FF83FFE0B500C713F0A36C018313E0242E7FAD27>104 D<130F497E497EA46D5A6DC7FC
90C8FCA7383FFF80487FA37EEA000FB3A4007FB512F0B6FC15F815F07E1D2F7BAE27>I<
143C147E14FFA4147E143C1400A73801FFFE4813FFA37EC7123FB3B0147E1238007C13FE
38FE01FC1303B512F814F06C13E06C13803807FE0018407CAE27>I<387FFF80B57EA37E
EA000FB3B2007FB512F8B612FCA36C14F81E2E7CAD27>108 D<397F07C01F3AFF9FF07F
C09039FFF9FFE091B57E7E3A0FFC7FF1F89038F03FC001E0138001C01300A3EB803EB03A
7FF0FFC3FF486C01E3138001F913E701F813E36C4801C313002920819F27>I<387FE07F
39FFF1FFC001F713F090B5FC6C80000313C1EC01FCEBFE005B5BA25BB03A7FFF83FFE0B5
00C713F0A36C018313E024207F9F27>I<EB1FE0EB7FF83801FFFE487F481480390FF03F
C0391FC00FE0393F8007F0EB00034814F8007E1301A248EB00FCA76C1301007E14F8A200
7F1303393F8007F0A2391FE01FE0390FF03FC06CB512806C14006C5B38007FF8EB1FE01E
207C9F27>I<387FE0FFD8FFF313C090B512F0816C800003EB81FE49C67E49EB3F804913
1F16C049130FA216E01507A6150F16C07F151F6DEB3F80157F6DEBFF009038FF83FEECFF
FC5D5D01F313C0D9F0FEC7FC91C8FCAC387FFF80B57EA36C5B23317F9F27>I<397FFC03
FC39FFFE0FFF023F13804A13C0007F90B5FC39007FFE1F14F89138F00F809138E002004A
C7FC5CA291C8FCA2137EAD007FB57EB67EA36C5C22207E9F27>114
D<9038FFF3800007EBFFC0121F5A5AEB803F38FC000F5AA2EC07806C90C7FCEA7F8013FC
383FFFF06C13FC000713FF00011480D8000F13C09038003FE014070078EB03F000FC1301
A27E14036CEB07E0EBE01F90B512C01580150000FB13FC38707FF01C207B9F27>I<133C
137EA8007FB512F0B612F8A36C14F0D8007EC7FCAE1518157EA415FE6D13FC1483ECFFF8
6D13F06D13E0010313C0010013001F297EA827>I<397FE01FF8486C487EA3007F131F00
031300B21401A21403EBFC0F6CB612E016F07EEB3FFE90390FF87FE024207F9F27>I<39
01F003803903FC07C0000F130F381FFE1F393FFF7F80397FBFFF0038FE1FFE486C5A00F8
13F0387003E01A0A7AAD27>126 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmmi5 5 1
/Fb 1 94 df<1330A31260A5133813F81267127FEAFFF0133012F812E01260AA133813F8
1267127FEAFFF0133012F812E01260A21300A30D277B9D19>93 D
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmbx7 7 11
/Fc 11 119 df<EBFFF0000713FE486D7E391FE03FE06E7E140F6E7EA2EA0780C7FCA2EB
3FFF0003B5FC380FFE07EA3FE0EA7F80EAFF005AA36C130F141F387FC07F3A3FFFFBFFC0
000F13E100011300221A7E9925>97 D<913807FF80A3EC007FABEB1FF890B5FC000314FF
380FF807381FE00148487E49137F127FA248C7FCA87E7F003F14FF6D5A6C6C5A380FF80F
0003B612F8C6EBFE7FEB1FF025287EA72A>100 D<EB3FF83801FFFE48EBFF80390FF83F
C0391FE007E0383FC003018013F0007F1301010013F85AA290B5FCA390C8FCA36C7EA200
3F14786C7E6C6C13F83907F807F06CB512E0C614C090381FFE001D1A7E9922>I<EB03FE
90381FFF80017F13C03901FF1FE0EA03FE13FCEA07F8A2EC0FC091C7FCA5B512F0A3D807
F8C7FCB3A2387FFFC0A31B287EA717>I<EA0780EA0FC0EA1FE0EA3FF0A4EA1FE0EA0FC0
EA0780C7FCA5EAFFF0A3120FB3A2EAFFFEA30F297DA815>105 D<EAFFF0A3120FB3B0B5
FCA310287DA715>108 D<EB1FFC90B57E000314E03907F80FF0390FE003F8391F8000FC
003F8048C7127FA3481580A76C15006D5B003F5CEBC0016C6C485A390FF80FF80003B512
E0C61480D91FFCC7FC211A7E9926>111 D<38FFE0FCEBE1FF01E71380000FEBBFC0EBEE
3F13FCA213F8EC0F0091C7FC5BADB57EA31A1A7E991F>114 D<1378A413F8A21201A212
031207121FB512FCA33807F800AD141EA5143E3803FC7C3801FFF86C13F0EB3FC017257F
A41D>116 D<3AFFF007FF80A3000FEB007FB015FFA25C3807F8076CB5EA7FF86C13FC38
003FF0251A7D992A>I<D8FFFEEBFFE0A3D80FF0EB3F006D133E0007143C6D137C000314
786D13F800015CEBFF016C5C1483017F5B14C7013F5B14EF011F90C7FC14FF6D5AA26D5A
A26D5AA26D5A231A7E9928>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmsy6 6 1
/Fd 1 4 df<136013701360A20040132000E0137038F861F0387E67E0381FFF803807FE
00EA00F0EA07FE381FFF80387E67E038F861F038E060700040132000001300A213701360
14157B9620>3 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmsl9 9 20
/Fe 20 122 df<ED1FE0913801FFF8913807F01E91381F80074A485A02FEEB3F80495A5C
4948140013074A131E93C7FCA3130F5CA5011F147C000FB612FCA339001F80031501133F
02005BA415035B017E5CA4150713FE495CA4150F1201495CA40003141F3A7FFFC3FFFEA2
B5FC29357EB42B>12 D<387FFFF8A4B512F015057D921A>45 D<EB07FCEB3FFF9038F80F
C03901C003E0D803F07F6D6C7EA248486C7E12035BC8FCA21401A2EC7FF8EB07FFEB3FE1
EBFF013803F803EA0FF0D81FE05BEA3FC01380007F1560EB000748ECE0C05A140FA2141F
007F90383BE180EC73E33A1F81E1FF00390FFF81FE3901FE007823237CA126>97
D<137EEA1FFE5B123F1201A2120012015BA512035BA50007137F9038E1FFC09038E781F0
9038FE00FC01F8137E49133E4848133FED1F805BA216C0A2121F5BA4153F003F158090C7
FCA3ED7F00A24814FE007E5C4A5A007F13035D397B8007C039F1C01F8026E0E07EC7FC38
C07FF838001FC0223578B32B>I<ECFF80010713E090381F807890383E001C01FC137C48
4813FE485A0007EB01FCEBE000484813F8001F1400A2485AA2127F90C8FCA45A5AA3127E
A2007F1430A26C147015E06C6C13C0380FC0033907E007003803F03E3800FFF8EB1FC01F
237CA122>I<167EED1FFE16FC153F1501A416F8A41503A216F0A4150714FE903907FFC7
E090381F81E790387E007749133F4848131F4848130F484814C0120F485AA24848131FA2
007F158090C7FCA3153F5A481500A3127E5DA2157E6C14FE14016C13036C6C487E2607C0
0E13F03803E07C3800FFF090393F80FC0027357BB32B>I<EB03FCEB0FFF90383E0FC090
38FC03E0D801F813F03803F001D807E013F8380FC000121F5B123F48C7FCA312FEB6FCA2
48C8FCA35AA51560127E15E0003EEB01C0003FEB03806CEB0700380F800E3807E07C3801
FFF038003F801D237BA122>I<EC01F8EC0FFEEC3F0F91387E1F80ECFC3FEB01F8EB03F0
D907E01300151E010F90C7FC5CA4131F5CA5133F000FB5FCA3D8003FC8FCA25B137EA513
FE5BA512015BA512035BA41207B512C0A321357EB417>I<EB01F8137F5C13FF1307A213
0313075CA5130F5CA5011F13FE913883FF8091388F07E0EC9C0302B813F014F0EB3FE014
C01480A2140015075B017E14E0A4150F13FE4914C0A4151F1201491480A40003143F3A7F
FFC7FFFCA2B5FC26347EB32B>104 D<EB0380EB0FC0EB1FE0A314C0A2EB070090C7FCAA
131FEA07FFA3C67EA3137EA513FE5BA512015BA512035BA41207B5FCA313337EB215>I<
EB03F013FF14E0A2130FA21307130F14C0A5131F1480A5133F1400A55B137EA513FE5BA5
12015BA512035BA41207B51280A2140014347EB315>108 D<90260F80FFEB07F82603FF
839038C01FFE48903A8F03E0781F913B9C01F0E00F8026007FB8D9F9C013C0D93FF0EBFB
8002E0EBFF0002C05B02805BA202005BA2490103141F017E4A1480A501FE0107143F494A
1400A50001020F5C494A137EA40003021F14FE3D7FFFC3FFFE1FFFF0A2B500C75C3C217E
A041>I<90380F80FE3A03FF83FF804890388F07E0EC9C0326007FB813F0EB3FF014E014
C01480A2140015075B017E14E0A4150F13FE4914C0A4151F1201491480A40003143F3A7F
FFC7FFFCA2B5FC26217EA02B>I<14FF010713C090381F81F090383E00F80178133C4848
133E48487FA248481480120F4848130FED1FC0123F90C7FCA25AA400FEEC3F80A3160000
7E5C157EA25D003E5C003F495A6C495A6C6C485A6C6C485A2603F03EC7FC3800FFF8EB3F
C022237CA126>I<903803E07F9039FFE1FFC0489038E781F09138FE00FC26001FF8137E
6D5A4A7F17805C161F17C0A2131F5CA4163F013F158091C7FCA2167F17005E495C017E49
5A5E017F13034B5A9039FF800FC06E485A9026FCE07EC7FCEC7FF8EC1FC091C9FC1201A2
5BA41203A25B487EB512C05CA22A3080A02B>I<90383E03E03907FE1FF8143C000FEB71
FC38007EE1EB7FC1EC81F815F091C7FCA2137EA213FE5BA512015BA512035BA41207B512
C0A31E217EA01E>114 D<903807F83890383FFF7890387C07F03801E0013803C0004848
1370A2120F90C712607FA26D130013F0EBFF806C13F86C13FE6C7F6C1480013F13C01301
9038001FE0140F003013071403A2007014C0A21278EC0780127CEC0F0000FE131E38F780
7C38E1FFF038C07F801D237EA11E>I<13065BA4131CA25BA2137813F812011203485A38
1FFFFEB5FCA23803F000A212075BA5120F5BA5121FEB8018A41438003F13301300A21470
6C1360EB80E0380F81C0EBC3803803FF00EA00FC172F7AAD1E>I<D801F0131F007FEB07
FF00FF5BA2000F1300000780A249137EA415FE120F495BA41401121F01805BA41403123F
49485AA2140F6C131F819039807FFF80380FC0E73803FFC7C6903807E000212279A02B>
I<90B5EB7FF8A248EDFFF026000FF0EB3F806D48EB1E00161C6E13180103143816305E80
01015C15015E6E48C7FC13001506150EECFE0CEC7E18A25D147F6E5A15E05D5D141F92C8
FCA2140E140CA25C143814305CA25CEA3C01007C5BD8FC03C9FC5B130EEA701CEA7878EA
3FE0EA0F802D30819F29>121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmbxti10 9 10
/Ff 10 118 df<14FE903807FF80011F13CE90393F83FF80EBFF0148487E485AA2484814
00120F5B001F5B5DEA3FE0A21403007F5C13C0A2140700FF5C1380163C020F137CEDF078
A2EA7F00021F13F01380003FEB3FE102FF13E03A1FC1F7F3C0390FFFE3FF000301811300
3900FE007E262379A12C>97 D<EB3F80380FFFC0A25CA2C6FCA291C7FCA25AA25BA21203
A25BA21207147F9038FBFFC090B512F048EB83F89038FE01FC01FC13FEEBF800485A15FF
5BA2003F5BA213C0A2007F5B15FE1380A2140700FF14FC1300A2EC0FF8A215F06CEB1FE0
A2EC3FC06CEB7F80903880FF00381FC3FC6CB45A000313E0C690C7FC203579B328>I<EC
7F80903807FFE0011F13F8EB7FC19038FF00FC4848137C485A485A485A121F4913FC003F
14F81403397FC007F0ECFFE090B51280B5EAFC0014800180C7FCA390C8FCA41518151C15
3E6C14FC90388001F8393FC007F0391FE03FC06CB51200000313FC38007FE01F2378A128
>101 D<EC1FE0EC7FF8903903FFFCE0903907F83FF890381FE01F90383FC00FEB7F80A2
EBFF004815F05B0003141FA2484814E0A2153F120F4914C0A2157FA2491480A215FFA216
00A25C00075B6D485A3803FC1F6CB5FC38007FFB90380FE3FCEB00031407A25D121E387F
800F5D12FF4A5A143F49485A48495AD903FEC7FC387FFFF8001F13E0000390C8FC25327C
A128>103 D<EB1FC03803FFE05A14C07EEA007FA21480A213FFA21400A25AA25BA21203
A25BA21207A25BA2120FA25BA2121FA25BA2123FA25BA2127FA25BEB8780EAFF8F140013
0FA25B131E12FE5BEA7F7C6C5A6C5AEA07C013357AB316>108 D<011FEB3F8090397FC0
FFE0D9FFF313F83A01E3F7E1FC3A03C3FF80FE4B7E260783FE7FEB87FC000F4914801307
A2D81F0F14FFA200005BA2011F5B170014E0A2013F5B5E14C0A2017F495AA202805B4B5A
13FF4B5A4B5A6E485A486D48C7FCECFFFC4913F0EC3F80000390C9FCA25BA21207A25BA2
120FA2B57EA429317EA12C>112 D<3901F003F83907FC0FFE3A0FFF3FFF803A1F3F7C0F
C0001EEBF807003EEBF01F003C9038E03FE0EB7FC0007CEC7FC000781380A2D8F8FFEB3F
80ED1E00C690C8FCA25AA25BA21203A25BA21207A25BA2120FA25BA35BA2EA078023237B
A125>114 D<EB01FE90380FFF804913E090387E03F0EBFC019038F803F83801F007A200
03EB0FF0A39038F807C001FFC7FC14F014FC6C13FF15806C14C0133F010F13E0EB007F00
0E131F383F800F007F130712FF15C0A2EC0F80130000FCEB1F00007C133E007F13FC6CB4
5A000F13E0000190C7FC1D237AA124>I<1307EB1FC0133FA3137FA21480A213FFA21400
A25AA2B512FC14FEA214FC3803FC00A21207A25BA2120FA25BA2121FA25BA2123FA25B14
1E007F133E143CEB807C147814F8EB81F0EB01E0EB07C0383F8F80381FFF00EA0FFCEA03
F0173179AF1D>I<137E48B46C13F0489038C003F83807CFE0D80F0F1307001F13F0121E
003C140F011F5C007813E0A2D8F83F131F02C05BEA007F1480153F01FF5C1400A2157F48
5D5BEE83C0EDFF87EE07805BA2EE0F005C6D48485A0207131E6C6C486C5A90397FFF3FFC
90391FFC1FF0903907F007E02A237BA12E>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmmi9 9 10
/Fg 10 118 df<171C177EEE01FEEE07FCEE1FF0EE7FC0923801FF00ED07FCED1FF0ED7F
C04A48C7FCEC07FCEC1FF0EC7FC04948C8FCEB07FCEB1FF0EB7FC04848C9FCEA07FCEA1F
F0EA7FC048CAFCA2EA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0EB07FCEB01FF903800
7FC0EC1FF0EC07FCEC01FF9138007FC0ED1FF0ED07FCED01FF9238007FC0EE1FF0EE07FC
EE01FEEE007E171C2F2E7AA93C>60 D<127012FCB4FCEA7FC0EA1FF0EA07FCEA01FF3800
7FC0EB1FF0EB07FCEB01FF9038007FC0EC1FF0EC07FCEC01FF9138007FC0ED1FF0ED07FC
ED01FF9238007FC0EE1FF0EE07FCEE01FEA2EE07FCEE1FF0EE7FC0923801FF00ED07FCED
1FF0ED7FC04A48C7FCEC07FCEC1FF0EC7FC04948C8FCEB07FCEB1FF0EB7FC04848C9FCEA
07FCEA1FF0EA7FC048CAFC12FC12702F2E7AA93C>62 D<14FE903807FF8090381F03C090
387C01E03801F800485A485A485A485A1401D83F0013C01403007EEB0F80ECFE00387FFF
F8B5128000FCC8FCA45AA415186C1438007C147015E0003CEB01C0003EEB07806CEB1E00
380F80FC3803FFE0C690C7FC1D227DA024>101 D<EC1F80EC7FE0903901F071C0903907
C03FE090380F801F90381F000F5B137E017C14C013FC4848131FA248481480A2153F1207
491400A25DA249137EA215FEA25DA214013803E0034A5A3801F01F3800F83BEB3FF39038
0FC3F0EB00031407A25DA2140F001C5C127F4A5A143F00FE91C7FC147E387801FC383C03
F0381FFFC0D803FEC8FC23317FA025>103 D<D801E001FEEB07F03C07F803FF801FFC3C
0E3E0F07E0783F001C903B3C03F1E01F803C181F7001F3800F003801E0EBF70026303FC0
01FE14C01270006001805B02005B0303141FD8E07F4A1480EA407E12000307143F01FE17
00495C60030F147E1201494A13FEF0FC04031F150E00030401130C49028013F8191C033F
01031318000717F04902001438050113704B15E0000F933800F1C049017EEC7F80D80380
011CEC1E003F227EA044>109 D<D801E013FE3A07F803FF803A0E3E0F07E0001C90383C
03F039181F7001003813E026303FC07F12700060138014001503D8E07F5CEA407E120015
0701FE5C5B150F5E120149131FEE8080EE81C00003023F13804914011603037F13000007
147E495CED3E0E5E000FEC1E3849EB0FF0D80380EB03C02A227EA02E>I<011F131F9039
7FC07FE09039E3E1E0F09039C3E380783A01C1F7007CD981FE133CD983FC133E00035BEB
03F0163FEA0707120600025B1200010F147F167E5CA2011F14FE16FC5CA2013FEB01F8A2
91380003F016E0491307ED0FC002801380ED1F009038FFC03E9038FEE0F89038FC7FE0EC
1F80000190C8FCA25BA21203A25BA21207A25BB57EA3283083A027>112
D<EB01FCEB0FFF90383E03C090387800E04913603901E001E014030003130713C013E0EC
03806DC7FC13FF14F014FC6C7F6C7F6D1380130F9038007FC0141F140F007E130700FE14
80A3EC0F005A00C0131E6C5B00705B383C01F0380FFFC0D803FEC7FC1B227CA024>115
D<EB0380EB0FC0A3131FA21480A2133FA21400A25BA2137E387FFFFEA2B5FC3800FC00A2
1201A25BA21203A25BA21207A25BA2120FA25B1408001F131C14181380143814701460EB
00E0EB01C0380F8380EB8700EA07FEEA01F817307FAE1C>I<13F8D803FEEB01C0D8070F
EB03E0000EEB8007121C001813C00038140FEA301F0070018013C01260013F131F00E013
0000401580C65A017E133F13FE491400A25D120149137E1602EDFE0716064913FCA2160E
0201130C9039F803F81C1618000090380F7C38D97C1C137090393FF81FE0903907E00780
28227EA02C>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmsy9 9 6
/Fh 6 107 df<007FB712FCB812FEA26C16FC2F047A943C>0 D<130E131FA639700E01C0
00F8EB03E000FE130F00FF131F397F8E3FC0391FEEFF003803FFF8C613E0EB3F80A2EBFF
E0000313F8381FEEFF397F8E3FC039FF0E1FE000FE130F00F813030070EB01C0D8001FC7
FCA6130E1B207BA226>3 D<EB1FC0EBFFF8487F000713FF4814804814C04814E0A24814
F0A2B612F8A96C14F0A26C14E0A26C14C06C14806C1400000113FC6C5BEB1FC01D1D7CA1
26>15 D<EC07E0143FECFE00EB03F8495A495A5C131F5CB3A5133F91C7FC137E5BEA03F8
EA7FE048C8FCEA7FE0EA03F8C67E137E7F80131FB3A580130F806D7E6D7EEB00FEEC3FE0
14071B4B7BB726>102 D<12FCEAFFC0EA07F0EA01FC6C7E137F7F80131FB3A580130F6D
7E6D7EEB01FC9038007FC0EC1FE0EC7FC0903801FC00EB03F0495A495A131F5CB3A5133F
91C7FC5B13FE485AEA07F0EAFFC000FCC8FC1B4B7BB726>I<126012F0B3B3B3B3126004
4B78B715>106 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmti9 9 65
/Fi 65 123 df<DB07F8133EDB1FFFEBFF80923A7E0783E3C0923AF803C7C1E0912601F0
0F1387DA03E013CFA2DA07C090389F07C09339071F0380040090C7FC4A5A173EA3141F92
C7127E177CA35C143E011FB712F8A3D9007EC700F8C7FC147C16015FA214FC5C16035FA2
13015C16075FA313034A130F5FA313074A131F94C8FCA2130FA24A5B163EA2131F91C712
7E167CA2133E5E0038131C267E3C3F5B15013AFE787F03E000FC017E5B3AF8F03C0780D8
78E0011FC9FC393FC01FFC390F0003F03B4582B42F>11 D<923803FF80031F13F092383F
00F803F8133C4A48133E4A48137E17FE4A5A17FC17384A481300A3141F92C8FCA55C143E
011FB612E0A217C09039007E0007147C160F1780A214FC4A131F1700A301015C4A133EA3
167E0103147C5C1718EEFC1CEEF83C010715385C1778177016F0010F15F04AEBF8E01679
EE3FC0011FEC0F0093C7FC91C9FCA3133EA21238EA7E3C137CEAFE7812FC485AEA79E0EA
3FC0000FCAFC2F4582B42B>I<EA0380EA0FE0121FA5EA0760120013E013C0A212011380
1203EA07001206120E5A5A5A5A5A0B176FB318>39 D<1560EC01E0EC03C0EC0700140E5C
143C5C5C495A495A13075C49C7FC5B131E5B137C137813F85B12015B12035B1207A25B12
0FA290C8FC5AA2121E123EA3123C127CA31278A212F8A35AAF12701278A21238A2123C12
1CA27EA27E6C7E12011B4A75B71F>I<14301438A28080A2140F801580A2140315C0A414
0115E0A81403A415C0A31407A31580140FA315005CA3141E143EA2143C147CA25CA25C13
015C13035C13075C130F91C7FC131E133E133C5B5B485AA2485A485A48C8FC121E5A1270
5A5A1B4A7EB71F>I<EA0380EA0FE0121FA5EA0760120013E013C0A2120113801203EA07
001206120E5A5A5A5A5A0B177A8718>44 D<B51280A46C1300110579911B>I<121C127F
12FFA412FE12380808778718>I<17E0EE01F0A2EE03E0A2EE07C0160F1780EE1F00A216
3EA25EA25E15015E4B5AA24B5AA24B5A151F93C7FC153EA25DA25DA24A5A14035D4A5AA2
4A5AA24AC8FCA2143E147E147C5CA2495AA2495A13075C495AA249C9FCA2133EA25B13FC
5B485AA2485AA2485AA2485A121F90CAFC123EA25AA25AA25A5A2C4B7EB727>I<EC1FC0
EC7FF0903801E0F8903807C03CEB0F00011E131E133E013C131F5B13F85B1201A2485AA2
0007143F5BA2120F153E49137E121FA348C712FCA4007EEB01F8A4007CEB03F012FCA2EC
07E0A24814C0A2EC0F80A2EC1F00A2141E5C0078137C5C387C01F0383C03E0381F0F80D8
0FFEC7FCEA03F8203477B127>I<EC01801403A21407140FEC1F005C14FF5BEB1FFEEB7F
BEEB7E7E1320EB007CA214FCA25CA21301A25CA21303A25CA21307A25CA2130FA25CA213
1FA291C7FCA25BA2133EA2137EA2137C13FCB512FCA3193277B127>I<EC0FE0EC3FF8EC
F03E903803C01F903907800F80EB0F00011EEB07C0131C5BD978C013E0EB70E0EBF06013
E0120113C0ECE00F000301C013C013801381EC801F01831480903887003F018E1400D801
FC137ED800F05B90380001F84A5A4A5A4A5A4AC7FC147E14F8EB03E0EB0FC049C8FC133E
13784848EB0380485A4913074848140048C75A121E001C141E003F143E01F85B397DFF80
F838781FFF486C5BD8E0035B6D1380D9007EC7FC23347AB127>I<EC07F0EC3FFCECF81E
903803E00F903907800780D90F0013C0011E13035B013814E0EB7980EB71C00170130701
F014C013E0A201E1130FD9E380138090387F001F013C140090C7123E5D5D4A5AEC1FE090
3807FF804AC7FC6D7E90380007C06E7EA26E7EA514031218127EA21407485C5A00E0495A
A26C495A007049C7FC147E00785B383C01F0381E07E03807FF80D801FCC8FC233479B127
>I<EC01F8EC0FFEEC3FFFECFE0F903901F80780903803E00F903807C01F90380F803FD9
1F001300133E49130E01FC90C7FC5B1201485AA2485AA2380FC1F8EBC7FF9038CE078039
1FBC03C001F07FEBE001003F8013C01380A2D87F007FA2127E4A5AA25AA214075DA25A4A
5AA25D141F4AC7FC0078133E007C5B5C6C485A381F07E0EBFFC0000790C8FCEA01F82134
77B127>54 D<EC07E0EC3FFC4A7E903801F81F903903E00F809038078007D90F0013C049
1303131E5BA21507017C1480A2150F1600017E131E017F133E6E5A6D6C5AECE1E090381F
FBC06DB4C7FC6D5A6D7E497F011E7F90387C7FE09038F01FF048486C7E3807C007EB8003
380F0001001E1300123E003C1478127C1278A215F800F85C5A6C495A007813035D007C49
5A003C011FC7FC003E133E381F81FC380FFFF0000313C0C648C8FC223479B127>56
D<EC0FC0EC7FF0ECFFFC903803F07E903807C03E49487EEB1F00013E7F017E14805BA248
5AA2485A151FA212075BA2ED3F00A2485A5DA2000714FEA21401140300035CEBE0070001
131E3900F039F8EB7FF1EB0FC190380003F0A24A5AA25D4A5A141F003891C7FC007E133E
00FE137E5C48485A48485A48485A38781F80D87FFFC8FCEA1FFCEA07E0213478B127>I<
1370EA01FC1203A413F8EA00E01300B0121C127F5AA45A12380E20779F18>I<161C163C
A2167C16FCA21501821503A2ED077E150F150E151CA21538A2157015F015E0EC01C0A291
3803807F82EC0700A2140E141E141C5CA25CA25C49B6FCA25B913880003F49C7EA1F80A2
130E131E131C133C13385B13F05B12011203D80FF0EC3FC0D8FFFE903807FFFEA32F367B
B539>65 D<0107B612C04915F017FC903A003F8000FE177FEF3F8092C7121FA24A15C0A2
147EA214FE18804A143FA20101ED7F00177E4A5C16010103EC03F04C5A4AEB1FC091B6C7
FC495C9139F0007F804AEB0FC0707E010F6E7E834A1301A2011F81A25CA2133F5F91C712
03A2494A5AA2017E4A5A4C5A01FE4A5A4CC7FC49EB01FE0001EC07FC007FB612F0B712C0
4BC8FC32337BB236>I<DB1FF013C09238FFFC010203EBFF03913A0FF00F878091393F80
03CF9139FE0001EF4948EB00FFD903F01500D90FE080495A49488091C8123E137E13FE48
5A4848153CA2485AA248481538A2485A94C7FC123F5BA3127F90CBFCA412FEA2EE03C0A2
5F127E160794C7FC5E160E007F151E6C5D5E6C6C147016F06C6C495A6C6CEB07C06C6C49
C8FC6C6C133E6CB413FC90387FFFF0011F13C0D903FEC9FC323775B437>I<0107B612C0
4915F017FC903A003F8001FEEE007FEF1F8092C7EA0FC0EF07E05CEF03F0147E170102FE
15F8A25CA21301A25CA2130317035CA2130718F04A1407A2130F18E04A140F18C0011F15
1F18805CEF3F00133F177E91C85AA2494A5A4C5A017E4A5A4C5A01FE4A5A047EC7FC4949
5A0001EC0FF8007FB612E0B7C8FC15F835337BB23A>I<0107B712F05B18E0903A003F80
001F1707170392C7FC17015C18C0147EA214FEA24A130EA20101EC1E03041C13804A91C7
FC163C13035E9138F001F891B5FC5B5EECE0011500130F5E5C1707011F01015BEEC00E02
80141E92C7121C133F173C91C812381778495DA2017E14014C5A01FE14074C5A49141F00
014AB45A007FB7FCB8FC94C7FC34337CB234>I<0107B712E05B18C0903A003F80003F17
0F170792C7FC17035C1880147EA214FEA25C161C0101EC3C07043813004A91C7FCA20103
147816704A13F0150349B5FCA25EECE003130F6F5A14C0A2011F13035E1480A2013F90C9
FCA291CAFCA25BA2137EA213FEA25B1201387FFFFCB5FCA233337CB232>I<92391FE001
809238FFF8030207EBFE07913A1FF01F0F0091393F80079F9139FE0003DFD901F86DB4FC
D907F05C49481300495A4948147E49C8127C137E13FE485A48481578A2485AA248481570
A2485A94C7FC123F5BA3127F90CBFCA400FE91383FFFFCA25F9238003F8094C7FCA2007E
5DA2167EA2007F15FE7E5E6C6C1301A26C6C495A6D13076C6CEB0F786C6C133E3A00FF01
FC3090387FFFF0011F01C0C8FCD903FEC9FC313775B43B>I<0107B548B512C0495CA290
3C003FC0000FF0004B5CA292C75BA24A141F60147EA202FE143F95C7FC5CA201015D177E
5CA2010315FE5F5C91B6FC5B5F9138E00001A2010F14035F5CA2011F14075F5CA2013F14
0F5F91C7FCA249141F5F137EA201FE143F94C8FC5B00015D3B7FFFF01FFFFCB55BA23A33
7BB239>I<010FB51280A216009038003FC05DA292C7FCA25CA2147EA214FEA25CA21301
A25CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA291C8FCA25BA2137EA213
FEA25B1201B512F8A25C21337BB21E>I<91381FFFFE5C16FC9138003F80A31600A25D15
7EA315FE5DA314015DA314035DA314075DA3140F5DA3141F5DA3143F92C7FCA2121C007E
5B00FE137EA214FE485BEAF80100E05B495A387007E038780FC06C48C8FCEA1FFCEA07F0
273579B228>I<0107B512C05BA29026003FC0C7FC5DA292C8FCA25CA2147EA214FEA25C
A21301A25CA21303A25CA21307A25CA2130FA25C17E0011F140117C05C1603013F158016
0791C7FCEE0F005B5E017E143EA201FE5CED01FC4913030001EC1FF8007FB6FCB7FC5E2B
337CB230>76 D<902607FFC0ED7FFC4917FF81D9003F4B1300611803023BED077CA2027B
ED0EFC610273151C1838DAF1F01439F071F014E118E10101ED01C36102C1EC0383EF0703
01031607050E5BEC80F8171C0107ED380F6102001470A249EDE01FDC01C090C7FC130EEE
0380011E017C5C933807003E011C140EA2013C4A137E187C01385C5E017816FC6F485B13
70ED3FC001F0EC80016000011500D807F81503277FFF803E90B512C0B5EB3C01151C4633
7BB245>I<902607FF8090383FFFC0496D5BA2D9001F913803F8004A6C6D5A6060EC3BF0
027B140360EC71F8A202F11407DAF0FC91C7FC14E0A20101017E5B170E14C0810103151E
EE801CEC801FA20107ECC03C030F1338140016E049010713781770010E14F01503011E15
F0705A011C1301A2013C14FD03005B133816FF0178147F5F0170143FA213F070C8FC1201
EA07F8267FFF807FB5140EA23A337BB239>I<ED1FE0913801FFFC913807E03F91391F80
0FC091393E0003E002F8EB01F0495A4948EB00F8494814FC4948147C49C8127E133E017E
153E49153F485AA2485A12075B120F5B121F177F5B123FA348C912FEA4EE01FC12FEEE03
F8A217F0160717E0160F007E16C0EE1F80A2EE3F006C157E5E5E6C6C495A000F4A5A6D49
5A0007EC1F806C6C013EC7FCD801F813FC39007E07F090383FFF80D907FCC8FC303775B4
3B>I<0107B612C04915F883903A003F8001FEEE003FEF1F8092C713C0170F5C18E0147E
A214FEEF1FC05CA201011680173F4A1500177E010315FE5F4AEB03F8EE07E00107EC3FC0
91B6C7FC16F802E0C9FC130FA25CA2131FA25CA2133FA291CAFCA25BA2137EA213FEA25B
1201387FFFF0B5FCA233337CB234>I<ED1FE0913801FFFC913807E03F91391F800FC091
393E0007E002F8EB03F0494813014948EB00F8494814FC4948147C49C8127E133E137E49
153F12015B485A12075B120FA2485A177FA2485AA348C912FEA4007EED01FC12FE17F816
0317F0160717E0160F007E16C0EE1F80A2023EEB3F00003E9038FF807E263F01C1137C90
390380C0F8001F903800C1F0D80F87EBC3E001C6EBE7C00007ECFF80D803E649C7FCD801
FE5B3B007F07F0018090383FFFE0D907FC130390C714005E1401160EEDF01EEDF87EEDFF
FC5EA26E5B5E6F5A031FC7FC304475B43B>I<0107B512FE49ECFFC017F0903A003F8007
F8EE01FCEE007E92C7127F835C1880147EA214FEEF7F005CA2010115FE5F4A13015F0103
4A5AEE0FC04A495A04FEC7FC49B512F016C09138E003E0ED01F8010F6D7E167C4A137EA2
131FA25CA2013F14FEA291C7FCA24913015E137EEF01C001FE150318805B00011607277F
FFF0001400B5ECFE0EEE7E1CC9EA1FF8EE07E032357BB238>I<913901FC018091380FFF
03023F13C791387E07EF903A01F801FF0049487E4A7F495A4948133E131F91C7FC5B013E
143CA3137E1638A293C7FC137FA26D7E14E014FE90381FFFC06D13F86D7F01017F6D6C7E
020F7F1400153F6F7E150FA4120EA2001E5D121CA2151F003C92C7FCA2003E143E5D127E
007F5C6D485A9038C007E039F3F80FC000F0B5C8FC38E03FFC38C00FF029377AB42B>I<
0003B812C05A1880903AF800FC003F260FC001141F0180150F01005B001EEE0700140312
1C003C4A5BA200380107140E127800705CA2020F141E00F0161CC74990C7FCA2141FA25D
A2143FA292C9FCA25CA2147EA214FEA25CA21301A25CA21303A25CA21307A25C497E001F
B512F05AA2323374B237>I<3B3FFFF801FFFE485CA2D801FEC7EA1FC049EC0F80170049
140EA2161E120349141CA2163C1207491438A21678120F491470A216F0121F495CA21501
123F90C75BA215035A007E5DA2150712FE4892C7FCA25D150E48141E151C153C15381578
6C5C5D007C1301007E495A003EEB0F806C011EC8FC380FC0FC6CB45A000113E06C6CC9FC
2F3570B239>I<B53CC03FFFF003FFF8601480280FF00001FCC7EA7F806C484AEC3E0019
3CA219386115036115074E5A030F140361031D4AC7FCA2DB38FC130EA203705C15F06C6C
01E05C140103C05CDA038014F060DA0700130160020E4A5AA24A4AC8FCA24A140E147802
705C5C5FD9F1C014781770D9F3805CA201F7C7EA7FC0A201FE5DA26C4892C9FCA249147E
5B167C5B1678491470453570B24D>87 D<902607FFFE90387FFFC0A39026001FF090380F
F80003C014C0020F5D6F91C7FC0207141E6F5B5F02035C6F485A02015C6F485A4CC8FC02
00130EEDFE1EED7E3C5EED7FF06F5A5E5E151F82A24B7E157F1577EDE7F0EC01C7EC0383
02077FEC0F01021E7F143CEC38004A7F4A137E495A0103147F49487F49C77F131E49141F
017C8113FC00074B7EB5D88003B57EA295C7FC3A337CB239>I<EB03F0EB0FF890383E1C
6090387C0FF0EBF807EA01F0EA03E00007EB03E0EA0FC0A2381F800715C0EA3F00A2140F
481480127EA2141F00FE14005A1506EC3F07EC3E0F150E147E007C141EECFE1CEB01FCD8
3C03133C393E07BE38391F0E1E783907FC0FF03901F003C0202278A027>97
D<137EEA0FFE121F5B1200A35BA21201A25BA21203A25BA21207A2EBC3E0EBCFF8380FDC
3EEBF81F497E01E01380EA1FC0138015C013005AA2123EA2007E131F1580127CA2143F00
FC14005AA2147EA25CA2387801F85C495A6C485A495A6C48C7FCEA0FFCEA03F01A3578B3
23>I<14FCEB07FF90381F078090383E03C0EBFC013801F8033803F0073807E00F13C012
0F391F80070091C7FC48C8FCA35A127EA312FE5AA4007C14C0EC01E0A2EC03C06CEB0F80
EC1F006C137C380F81F03803FFC0C648C7FC1B2278A023>I<ED0FC0EC03FFA21680EC00
1FA31600A25DA2153EA2157EA2157CA215FCA2903803F0F8EB0FF8EB3E1DEB7C0F496C5A
EA01F0EA03E000071303D80FC05BA2381F8007A2D83F005BA2140F5A007E5CA2141F12FE
4891C7FC1506EC3F075DEC3E0E147E007C141EECFE1CEB01FCD83C03133C393E07BE3839
1F0E1E783907FC0FF03901F003C0223578B327>I<EB03F8EB0FFEEB3E0F9038F8078038
01F003EA03E0EA07C0120FEA1F801407D83F0013005C007E133EEB03F8387FFFE04848C7
FC00FCC8FCA45AA4EC0180EC03C0A2007CEB0780EC1F00003C133E6C13F8380F03E03807
FF80D801FCC7FC1A2277A023>I<151FED7FC0EDF0E0020113F0EC03E3A2EC07C316E0ED
C1C091380FC0005DA4141F92C7FCA45C143E90381FFFFEA3D9007EC7FC147CA414FC5CA5
13015CA413035CA413075CA3130FA25CA3131F91C8FCA35B133E1238EA7E3CA2EAFE7812
FC485AEA78E0EA3FC0000FC9FC244582B418>I<143FECFF80903803E1E6903807C0FF90
380F807FEB1F00133E017E133F49133EA24848137EA24848137CA215FC12074913F8A214
01A2D80FC013F0A21403120715E01407140F141F3903E03FC00001137FEBF0FF38007FCF
90381F0F801300141FA21500A25C143E1238007E137E5C00FE5B48485A387803E0387C0F
80D81FFFC7FCEA07F820317CA023>I<EB0FC0EA03FFA25CEA001FA391C8FCA25BA2133E
A2137EA2137CA213FCA29038F83F80ECFFE03901FBE0F09038FF80F8EC007849137C485A
5B5BA2484813FC5D5BA2000F13015D1380A2001F13035DEB0007EDC0C048ECC1E0020F13
C0003E1481A2007E1483ED0380007C1407160000FC140E151E48EB07F80070EB01F02335
7BB327>I<EB0180EB07E0A2130FEB07C0EB038090C7FCABEA01F0EA03FCEA0F1E120E12
1C123C1238EA783E1270A2137EEAF07CEA60FCC65AA212015BA212035BA2000713C0EBC1
E0000F13C01381A21383EB038013071400130E131EEA07F8EA01F013337AB118>I<1538
157C15FCA315701500AB143EECFF80903801E3C090380383E0EB0701130FEB0E03131C13
3C133814071378013013C01300140FA21580A2141FA21500A25CA2143EA2147EA2147CA2
14FCA25CA21301A25CA213035C1238387E07C0A238FE0F804848C7FCEAF83EEA787CEA3F
F0EA0F801E4283B118>I<EB0FC0EA01FF5A5CEA001FA391C7FCA25BA2133EA2137EA213
7CA213FCA2491378EC01FE0001EB078FEC0E0F9038F01C3F143800031370ECE03E9038E1
C01C9038E38000D807E7C7FC13EE5B13F8120F13FFEB9FC0EB83F0EA1F81EB80F8130015
0C48141E151C123EA2007E143C1538127C157800FCEB787015E048EB3FC00070EB0F8020
357BB323>I<133FEA07FF5A13FEEA007EA3137CA213FCA213F8A21201A213F0A21203A2
13E0A21207A213C0A2120FA21380A2121FA21300A25AA2123EA2127EA2127C1318EAFC1C
133CEAF838A21378137012F013F0EAF8E01279EA3FC0EA0F00103579B314>I<2703C003
F8137F3C0FF00FFE01FFC03C1E783C1F07C1E03C1C7CF00F8F01F03B3C3DE0079E002638
3FC001FC7FD97F805B007001005B5E137ED8F0FC90380FC00100E05FD860F81480120000
01021F130360491400A200034A13076049013E130FF081800007027EEC83C0051F138049
017C1403A2000F02FC1407053E130049495CEF1E0E001F01015D183C010049EB0FF0000E
6D48EB03E03A227AA03F>I<3903C007F0390FF01FFC391E787C1E391C7CF01F393C3DE0
0F26383FC01380EB7F8000781300EA707EA2D8F0FC131F00E01500EA60F8120000015C15
3E5BA20003147E157C4913FCEDF8180007153C0201133801C013F0A2000F1578EDE07001
8014F016E0001FECE1C015E390C7EAFF00000E143E26227AA02B>I<14FCEB07FF90381F
07C090383E03E09038FC01F0EA01F83903F000F8485A5B120F484813FCA248C7FCA21401
4814F8127EA2140300FE14F05AA2EC07E0A2007CEB0FC01580141FEC3F006C137E5C381F
01F0380F83E03803FF80D800FCC7FC1E2278A027>I<011E137C90387F81FF9039F3C387
C09039E3EF03E03901E1FE01D9C1FC13F0EBC3F8000313F0018314F814E0EA0787130700
0313C01200010F130316F01480A2011F130716E01400A249EB0FC0A2013EEB1F80A2017E
EB3F00017F133E5D5D9038FF81F09038FDC3E09038F8FF80027EC7FC000190C8FCA25BA2
1203A25BA21207A25BB5FCA325307FA027>I<903803F01890380FF83890383E1C789038
7C0EF89038F807F0EA01F0EA03E000071303D80FC013E0A2EA1F801407D83F0013C0A348
130F007E1480A300FE131F481400A35C143E147E127C14FE495AEA3C03EA3E07EA1F0E38
07FCF8EA01F0C7FC13015CA313035CA21307A25C48B5FCA25C1D3078A023>I<3903C00F
C0390FF03FF0391E78F078391C7DE03C393C3FC0FC00381380EB7F00007814F8D8707E13
701500EAF0FC12E0EA60F812001201A25BA21203A25BA21207A25BA2120FA25BA2121FA2
90C8FC120E1E227AA020>I<EB03F0EB1FFCEB3C1EEB780FEBF007EA01E0140F0003131F
13C0A2EBE00414007FEBFF8014E06C13F06C13F8EB7FFC1307EB00FE147E143E123800FC
133CA3147C00F013784813F0EAF001387803E0383C0F80381FFE00EA03F818227AA01F>
I<1303EB0F80A3131FA21400A25BA2133EA2137EA2137C387FFFF8A2B5FC3800F800A212
01A25BA21203A25BA21207A25BA2120FA25B1460001F13F014E01300130114C01303001E
1380EB07005BEA0F1EEA07F8EA01E015307AAE19>I<EA01F0D803FC1307D80F1E5B000E
5C121C123C00385CD8783E133E1270A2017E137ED8F07C137CEA60FCC65A15FC00015C5B
A2140100035C13E0166002031370EDE0F0D807C014E0A20003EB07E116C09038E00FC1EC
1FC3000190383FE3809038F071E73A007FE0FF0090381F803C24227AA029>I<01F01338
D803FC13FCEA0F1E120E121C123C0038147CEA783E0070143CA2137ED8F07C1338EA60FC
C65A1578000114705BA215F0000314E05BA2EC01C0A2EBC003158014071500EBE00EA26C
6C5A3800F878EB7FE0EB1F801E227AA023>I<D801F01538D803FC010E13FCD80F1E131E
000E143E121C123C0038027E137CD8783E137C0070163CA2017E13FCD8F07C491338EA60
FCC65A0201147800014A137013F0A2020314F0000316E001E05BA2160117C001C013C002
07EB0380A29039E00FE0071700021F130E3A01F03DF01E3A00F878F83C90393FF03FF090
390FC00FC02E227AA033>I<011F137C90387FC1FF3A01E1E787803A03C0F703C0903880
FE0FEA07004813FC000E1580001E9038F80700001C91C7FC1301003C5B1218120013035C
A31307A25C1506010F130F150E14800038141ED87C1F131C00FC143C1538013F5B39F07F
C0E03970F3C3C0393FE1FF80260F807EC7FC22227CA023>I<13F0D803FC1307D80F1E13
0F000E141F121C123C0038143FD8783E133E1270A2017E137ED8F07C137CEA60FCC65A15
FC000114F85BA21401000314F013E0A2140315E0EA07C0A20003130715C0EBE00F141F00
01133F9038F07F8038007FEFEB1F8FEB001F1500A25C003E133E007E137E147C5C007C5B
EA7001495A38380780D83C1FC7FCEA0FFCEA07F020317AA025>I<903807801C90381FE0
3C90383FF038017F13789038FFF8F03901F07CE0EBE01F3903C003C09038800780EC0F00
C7121E141C143C5C5C495AEB07C0495A011EC7FC5B5B4913704913F0000114E0485A3807
8001390FC003C0381FF80790383E0F80393C1FFF00127838700FFE38F007F838E001E01E
227CA01F>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmr7 7 50
/Fj 50 123 df<903901FE01F890390FFF8FFC90393F03DF1E0178EBFC3F3901F007F813
E00003ECF01E2607C003130C02011300A8B712E0A23A07C001F000B3A2486C487E3A7FFC
1FFF80A228297FA827>11 D<14FF010F13C090383F01E090387C00F0EBF001EA01E01203
EA07C06E5A92C7FCA6EC0FF8B6FCA23807C000B3A2486C487E3A7FFC0FFF80A221297FA8
26>I<02FFEB3FC0010F9038C1FFF0903A3F01E7E078903A7C00FF803C903AF001FE007C
4848485A120348486C5A1738020091C7FCA6EE03FEB8FCA23B07C000F8003EB3A2486C48
6C137F3C7FFC0FFF83FFE0A233297FA838>14 D<1306130C13181330136013E0EA01C0EA
0380A2EA07005A120E121EA2121C123CA35AA512F85AAB7E1278A57EA3121C121EA2120E
120F7EEA0380A2EA01C0EA00E0136013301318130C13060F3B7AAB1A>40
D<12C012607E7E7E120E7EEA0380A2EA01C013E0120013F0A213701378A3133CA5133E13
1EAB133E133CA51378A3137013F0A213E0120113C0EA0380A2EA0700120E120C5A5A5A5A
0F3B7DAB1A>I<1238127C12FE12FFA2127F123B1203A31206A3120C1218123812701220
08127B8613>44 D<B5FCA410047F8E16>I<1238127C12FEA3127C123807077B8613>I<EB
3F803801FFF03803E0F83807803C48487E001E7F003E1480A2003C1307007C14C0A400FC
14E0AE007C14C0A36CEB0F80A36CEB1F006C131E6C6C5A3803E0F86CB45A38003F801B27
7EA521>48 D<13381378EA01F8121F12FE12E01200B3AB487EB512F8A215267BA521>I<
13FF000313E0380E03F0381800F848137C48137E00787F12FC6CEB1F80A4127CC7FC1500
5C143E147E147C5C495A495A5C495A010EC7FC5B5B903870018013E0EA01803903000300
12065A001FB5FC5A485BB5FCA219267DA521>I<140EA2141FA34A7EA3EC6FC0A2ECEFE0
14C7A290380183F0A390380301F8A201067F1400A249137EA2011C137F01187FA2498001
3FB5FCA2903960000FC0A201E080491307A248486D7EA200038115011207D81FC0497ED8
FFF890383FFFE0A22B2A7EA931>65 D<91387FC002903903FFF80690390FE01E0E90383F
0007017CEB019ED801F0EB00FE4848147E4848143E5B000F151E48C8FC48150E123EA200
7E1506A2127C00FC1500A8127C007E1506A2123EA2003F150C7E6C7E000715186D14386C
6C14306C6C1460D8007CEB01C0013FEB038090390FE01E00903803FFF89038007FC0272A
7DA82F>67 D<B612F015FE3A07F0003F800003EC07C0ED01F06F7E167C82A282EE0F80A3
EE07C0A317E0A917C0A2160F1780A2EE1F00A2163E5E5E4B5AED07E00007EC3F80B600FE
C7FC15F02B287EA732>I<B712F0A23907F000070003EC00F816781638A21618A3160C15
60A21600A215E0A2140390B5FCA2EBF0031400A21560A21606A2ED000CA4161C16181638
A21678ED01F80007EC07F0B7FCA227287EA72D>I<B539C07FFFE0A23B07F80003FC006C
486D5AAF90B6FCA29038F00001B1486C497EB539C07FFFE0A22B287EA731>72
D<B512C0A23807F8006C5AB3B0487EB512C0A212287EA718>I<D8FFF0EDFFF06D5C0007
EEFE0000035E017CEC037CA26D1406A26D140CA36D6C1318A26D6C1330A36D6C1360A26D
6C13C0A3903900F80180A291387C0300A2EC3E06A36E5AA2EC0F98A3EC07F0A26E5AEA07
80D80FC015FE3CFFFC01C01FFFF0A234287DA73C>77 D<D8FFF0903807FFE07FD803FC90
38007E006D143C1618137F6D7E6D7EA26D7E6D7E6D7EA26D7E6D7E147FA2EC3F80EC1FC0
EC0FE015F01407EC03F8EC01FCEC00FEA2157FED3F98ED1FD8A2ED0FF815071503A21501
1500486C1478487ED8FFFC143816182B287EA731>I<EC7FC0903803FFF890381FC07F90
393E000F8001F8EB03E048486D7E48486D7E4848147C484880A248C87E481680003E150F
007E16C0A2007C1507A200FC16E0A9007EED0FC0A36CED1F80A26C16006D5C6C6C147E00
07157C6C6C5C6C6C495AD800FCEB07E0013EEB0F8090261FC07FC7FC903807FFFC903800
7FC02B2A7DA833>I<B612E015FC3907F0003F0003EC0FC0ED03E0ED01F016F8150016FC
A616F8150116F0ED03E0ED0FC0ED3F0090B512FC15E001F0C8FCAF487EB512C0A226287E
A72D>I<B67E15F03907F000FC0003143FED0F806F7E82150382A55E15075E4B5A033FC7
FC15FC90B512F0A29038F001FCEC007F6F7E151F82150FA71730A3923807E070486C1560
B539C003F0E0923800FFC0C9EA3F002C297EA730>82 D<90387F80203903FFF060390780
78E0380E000E481307481303007813010070130012F0A21560A27E1500127C127FEA3FE0
13FF6C13F06C13FC000313FFC61480010F13C0010013E0EC0FF014031401EC00F8A200C0
1478A46C1470A26C14F06C14E06CEB01C000EFEB078039E3E01F0038C0FFFC38801FF01D
2A7DA825>I<007FB7FCA23A7E003F003F0078150F007081006081A200E01680481501A5
C791C7FCB3A64A7E013FB5FCA229287EA72F>I<B590B5EB3FFEA2D80FF8D90FF8EB07F0
6C486D48EB03E00003EF01C003031580A26C6C6EEB0300A36C6CD906FC1306A26D160E01
7ED90C7E130CA2017F027F131C6D496C1318A290261F80386D5AED301FA290260FC0706D
5AED600FA26D6C486C6C5AA214F0903B03F18003F180A202F914F3902801FB0001FBC7FC
A202FF14FF6D486D5AA2027E5C027C147CA202381438A33F297FA743>87
D<13FE3807FFC0380F03E0381C00F0003E1378003F137C143C143E121EC7FCA3EB3FFEEA
01FF3807F03EEA1FC0EA3F00127EA2481418A3147E127EECDF38393F838FF0390FFE0FE0
3903F807C01D1C7E9A21>97 D<EA0F8012FFA2121F120FAAEB81FCEB8FFF9038BC0FC090
38F003E09038C001F0EB800015F815FC157CA2157EA7157CA215FC15F89038C001F015E0
90387003C0390E3C0F80390C0FFF00380003F81F297EA725>I<EB3FC0EBFFF83803E03C
3807C00E380F801F381F003F123EA2007E131E007C1300A212FCA7127C127E1403123E6C
1306EA0F803807C00C3803F0383800FFE0EB3F80181C7E9A1E>I<EC03E0143FA2140714
03AAEB3F833801FFE33803E03B3807800F380F0007481303123E127E127CA212FCA7127C
A2127E123E001E1307001F130F390F801FF03903E073FE3801FFE339007F03E01F297EA7
25>I<133F3801FFE03803E1F0380F80F8381F007C143E123E007E131E141F127C12FCA2
B6FCA200FCC7FCA4127C127E1403123E6C1307380F800E3807C01C3803E0783800FFE0EB
3F80181C7E9A1E>I<EB07E0EB3FF0EB7C78EBF0FCEA01E01203EBC078000713301400A8
B51280A23807C000B3A2487EEA7FFEA216297FA815>I<90387E03E03901FF9FF03807C3
FC380F00F048EBF800001E1378003E137CA6001E1378001F13F86C5BEBC3E0380DFF80D8
1C7EC7FC90C8FCA3121E380FFFF014FC6C13FF001F1480393E001FC000781307EC03E048
1301A40078EB03C0007C13076CEB0F80390FC07E003803FFF838007FC01C277E9921>I<
EA0F8012FFA2121F120FAAEB81FCEB8FFF90389C0F809038B007C013E09038C003E0A313
80AF391FC007F039FFF83FFEA21F287EA725>I<120EEA3F80A5EA0E00C7FCA7EA078012
FFA2121F120FB3121FEAFFF8A20D287EA713>I<130EEB3F80A5EB0E0090C7FCA7EB0F80
EA01FFA2EA001F130FB3A8127812FCEB1F00A2133EEA707CEA3FF8EA0FE0113483A715>
I<EA0F8012FFA2121F120FABEC3FF8A2EC1FC01500143C5C14E0EB81C0EB8380018FC7FC
EB9F8013BFEBF7C0EBC3E0EB81F0801380147C80143FEC1F80EC0FC0D81FC013E039FFF8
3FFCA21E287EA723>I<EA0F8012FFA2121F120FB3AFEA1FC0EAFFF8A20D287EA713>I<26
0F81FC137F3BFF8FFF03FFC0903A9C0F8703E03B1FB007CC01F0D80FE013D8903AC003F0
00F8A301805BAF486C486C487E3CFFF83FFE0FFF80A2311A7E9937>I<380F81FC38FF8F
FF90389C0F80391FB007C0EA0FE09038C003E0A31380AF391FC007F039FFF83FFEA21F1A
7E9925>I<EB3F80EBFFE03803E0F83807803C48487E001E7F003E1480A248EB07C0A300
FC14E0A7007C14C0A2007E130F003E1480001E1400001F5B380F803E3803E0F86CB45A38
003F801B1C7E9A21>I<380F81FC38FF8FFF9038BC0FC0391FF007E0390FC003F0EB8001
15F8EC00FCA2157C157EA7157C15FCA2EC01F801C013F0EC03E09038F007C09038BC1F80
90388FFF00EB83F80180C7FCA7487EEAFFF8A21F257E9925>I<380F07C038FF1FF0EB38
F8EA1F71EA0F6113C1EBC0F014005BAF487EEAFFFCA2151A7E991A>114
D<3803F840380FFEC0EA3C07EA7803EA7001EAF000A37E6C1300EA7FC013FC6CB4FC6C13
80000713C0C613E0130738C003F0130113007EA26C13E0130100F813C038EE078038C7FF
00EA81FC141C7E9A1A>I<13C0A41201A312031207120F121FB512E0A23807C000AC1430
A73803E060A23801F0C03800FF80EB3F0014257FA31A>I<390F8003E000FF133FA2001F
1307000F1303B01407A20007130F9038C01BF03903E073FE3801FFE339007F83E01F1B7E
9925>I<39FFF807FEA2390FE001F001C013E0000714C013E000031480EBF00300011400
A23800F806A2EB7C0CA2EB7E1CEB3E18A26D5AA2EB0FE0A36D5AA26D5AA21F1A7F9823>
I<3BFFF8FFF07FE0A23B1FC01FC01F80000F90390F800E00A20007150CEC1FC02603E01B
5B15E0143B2601F0315B15F0D9F86013700000156015F89039FCC078E0017CEB7CC0137D
90393F803D80153FEC001F6D91C7FCA2011E7F010E130EA22B1A7F982F>I<39FFF81FFC
A2390FF00FE0D807E01380D803F013003801F80E00005BEB7C386D5AEB3FE06D5A130F13
0780497EEB1DF8EB38FCEB707EEBE03E48487E0003EB0F80000714C0001F14E039FFE01F
FEA21F197F9823>I<39FFF807FEA2390FE001F001C013E0000714C0EA03E01580EBF003
000114006D5A0000130613FCEB7C0CA26D5AA26D5AA214F06D5AA26D5AA26D5AA291C7FC
A213061230EA780EEAFC0C131C1318485AEA70E0EA3FC06CC8FC1F257F9823>I<383FFF
FEA2383E00FCEA3801003013F8387003F0EB07E0EA600F14C0EB1F8038003F00137E13FE
5B3801F806EA03F0EA07E0120FEBC00E381F800C383F001C5A007E137CB512FCA217197E
981E>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk cmti7 7 7
/Fk 7 122 df<017FB512C016F0903903F000FC4A133E8201071580160F5CA2130F161F
5CA2011FEC3F00A291C7127E167C495CED03E0013EEB1FC0013FB5C7FC15F8017EC9FC13
7CA313FC5BA312015BA312035BA21207B5FCA229287AA72E>80 D<133EEA07FEA2EA007C
A213FCA25BA21201A25BA21203EBF1FCEBE7FEEBEE0FD807F81380EBF00713E015C0D80F
C01380140F1380A2121FEC1F001300A248133EA2003E141C147C127EECF838127C157000
FCEB786015C048EB3F800070EB1F001E297BA723>104 D<137CEA0FFCA2EA00F8A21201
A213F0A21203A213E0A21207A213C0A2120FA21380A2121FA21300A25AA2123EA2127EA2
EA7C38A3EAF870A21360EA78E013C0EA3F80EA0F000E297BA712>108
D<3907803F80390FE0FFC0391CF1C1E03938F301F0EBFE00485A81495B00E1130113F012
01A24848485AA34A5AEA07C0EDC380EC0F83A23A0F801F0700A2150EEC0F0CD81F005BEC
07F0000E6D5A211B7B9926>110 D<EB0FC0EB3FF0EBF87C3801E01C3803801E00077FEA
0F00121E123E003C1480127C1500485BA3141E48133EA2143C5C14F800785B495A383803
C0D81E0FC7FCEA0FFEEA03F0191B789923>I<9038F00F803901FC3FE039039E70703907
1EE07890381FC03C000E1380140049133E121C133E1200137E157C137CA213FC15F85B15
F00001130115E0EC03C0EC07803903FC0F00EBFE1EEBE7F8EBE3E0D807E0C7FCA25BA212
0FA25B121FEAFFF8A21F257E9923>I<EA03E0486C1370D80E7813F8EA187C0038EB01F0
1230127013F800E0EB03E0A2EA01F0A2EC07C0EA03E0A33907C00F80A4EC1F00A25C0003
5B3801E0FE3800FFBEEB3F3E13005C120E001F5B5C383E01E0383C03C0381C0780D81E1F
C7FCEA0FFCEA03F01D267B9921>121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl cmr5 5 7
/Fl 7 56 df<1360EA01E0120F12FF12F11201B3A3387FFF80A2111C7B9B1C>49
D<EA03FCEA0FFF383C0FC0387003E0387801F0EAFC0014F8A214781278C712F814F0A2EB
01E0EB03C0EB0780EB0F00131C5B13E03801C018EA0380EA0600481338383FFFF05AB5FC
A2151C7D9B1C>I<EA01FC380FFF80381E07C0383001E0007C13F01300127EEA7C010038
13E0EA0003EB07C0EB1F803803FE005B38000780EB03C0EB01E0EB00F014F81230127812
FCA214F0EA7801387003E0383C07C0380FFF00EA03FC151D7D9B1C>I<EB01C013031307
130FA2131B1333137313E3EA01C3EA038313031206120C121C1238127012E0B512FEA238
0003C0A6EB7FFEA2171C7E9B1C>I<001C13E0EA1FFF14C0140013FC0018C7FCA513FCEA
1BFF381F07C0381C01E01218EB00F0C7FC14F8A2127012F8A214F01301006013E0387003
C0383C0F80380FFF00EA03F8151D7D9B1C>I<EB3F80EBFFC03803C0E0380700F0EA0E01
121C383800E014001278127013FF00F3138038F601C038F400E000F813F01470481378A4
1270A200781370123814E0381C01C0380F03803807FF00EA01FC151D7D9B1C>I<126038
7FFFF8A214F014E038E000C05AEB0180EB0300EA00065B5BA25B1370A213F05B1201A412
03A66C5A151D7C9B1C>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm cmr6 6 7
/Fm 7 56 df<13E01201120712FF12F91201B3A7487EB512C0A212217AA01E>49
D<EA01FC3807FF80381C0FC0383003E0386001F0EB00F812F86C13FCA2147C1278003013
FCC7FC14F8A2EB01F0EB03E014C0EB0780EB0F00131E13385B5B3801C00CEA0380380600
185A5A383FFFF85AB512F0A216217CA01E>I<13FF000313C0380F03E0381C00F014F800
3E13FC147CA2001E13FC120CC712F8A2EB01F0EB03E0EB0FC03801FF00A2380003E0EB00
F01478147C143E143F1230127812FCA2143E48137E0060137C003813F8381E03F0380FFF
C00001130018227DA01E>I<14E01301A213031307A2130D131D13391331136113E113C1
EA01811203EA07011206120C121C12181230127012E0B6FCA2380001E0A6EB03F0EB3FFF
A218227DA11E>I<00101330381E01F0381FFFE014C01480EBFE00EA1BF00018C7FCA513
FE381BFF80381F03C0381C01E0381800F014F8C71278A2147CA21230127812F8A2147848
13F8006013F0387001E01238381E07803807FF00EA01F816227CA01E>I<EB0FC0EB7FF0
3801F0383803C0183807803C380F007C121E001C1338003C1300A2127C1278EB7FC038F9
FFE038FB80F038FE0038143C48131EA248131FA41278A36C131EA2001C133C001E13386C
1370380781E03801FFC038007F0018227DA01E>I<1230123C003FB5FCA24813FE14FC38
60001C143814704813E014C0EA0001EB0380EB07001306130E5BA25BA21378A35BA41201
A76C5A18237CA11E>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fn cmmi6 6 1
/Fn 1 94 df<1318A31230A7131E133EEA31FE1237123FEAFFF813D8131812F812F01230
AB131E133EEA31FE1237123FEAFFF813D8131812F812F01230A31300A30F2F7CA319>93
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fo cmr9 9 87
/Fo 87 127 df<91393FE00FE0903A01FFF83FF8903A07E01EF83C903A1F800FF07E903A
3F001FE0FE017E133F4914C0485A1738484890381F8000ACB812C0A33B03F0001F8000B3
A7486C497EB50083B5FCA32F357FB42D>11 D<EC1FE0ECFFFC903803F01E90390FC00780
EB1F8090393F000FC0017E131F5BA2485AED0F8092C7FCA9ED0FC0B7FCA33901F8001F15
0FB3A6486CEB1FE0267FFFC1B5FCA328357FB42B>I<EC1FF891B512C0903803F00F9038
0FC01FEB1F80EB3F00137E5B150F485AACB7FCA33901F8000FB3A7486CEB1FE0267FFFE3
B5FCA328357FB42B>I<DA1FE013FF9126FFFC0713E0903B03F01E1F80F0903B0FC0077E
003CD91F805B90273F001FF8137E017E4A13FE495CA248485C030F147C95C7FCA9187EB9
12FEA33B01F8000FC000187EB3A6486C496C13FF297FFFC1FFFE0F13F8A33D357FB440>
I<137813FCA212011203EA07F813E0EA0FC0EA1F801300123C5A5A12400E0E71B326>19
D<123C127E12FFA8127EAB123E123CAB1218A61200A7123C127E12FFA4127E123C08367A
B515>33 D<003C13F0387E01F838FF03FCA2EB83FEA2EA7F81383D80F600011306A40003
130EEB000CA248131C00061318000E1338000C1330001C13704813E0387001C000601380
17177EB326>I<147CEB01FEEB07C790380F8380EB1F0181EB3E00A2137EA2137C137EA2
14015D140392C9FC5C140E6D5A1418143802F090380FFFF05C6D5A04011300EE00FC6D6C
1470011F1560013F15E0D977F0495AD9E3F85CD801C31403260381FC91C7FC00075D48C6
6C130E486D130C486D131C003E6D6C5A007EECC03091381FE07000FE010F5B6F5AEC07F9
6EB45A6C6D90C712306E5A157F6C6C6D6C13604B6C13E03A3FC001EFE03C1FE003C7F803
C03C0FF01F83FE0F802707FFFE00B51200000101F8EB3FFE26003FC0EB07F034387DB53C
>38 D<123C127EB4FCA21380A2127F123D1201A412031300A25A1206120E120C121C5A5A
126009177AB315>I<14C01301EB0380EB0F00130E5B133C5B5BA2485A485AA212075B12
0F90C7FC5AA2121E123EA3123C127CA55AB0127CA5123C123EA3121E121FA27E7F12077F
1203A26C7E6C7EA213787F131C7F130FEB0380EB01C01300124A79B71E>I<12C07E1270
123C121C7E120F6C7E6C7EA26C7E6C7EA27F1378137C133C133EA2131E131FA37F1480A5
EB07C0B0EB0F80A514005BA3131E133EA2133C137C137813F85BA2485A485AA2485A48C7
FC120E5A123C12705A5A124A7CB71E>I<156015F0B3A4007FB812C0B912E0A26C17C0C8
00F0C8FCB3A4156033327CAB3C>43 D<123C127EB4FCA21380A2127F123D1201A4120313
00A25A1206120E120C121C5A5A126009177A8715>I<B512F0A514057F921A>I<123C127E
12FFA4127E123C08087A8715>I<1530157815F8A215F01401A215E01403A215C01407A2
1580140FA215005CA2143EA2143C147CA2147814F8A25C1301A25C1303A25C1307A2495A
A291C7FC5BA2131E133EA2133C137CA2137813F8A25B1201A25B1203A2485AA25B120FA2
90C8FC5AA2121E123EA2123C127CA2127812F8A25A12601D4B7CB726>I<EB0FE0EB7FFC
EBF83E3903E00F803907C007C0EB8003000F14E0391F0001F0A24814F8A2003E1300007E
14FCA500FE14FEB2007E14FCA56CEB01F8A36C14F0A2390F8003E03907C007C0A23903E0
0F803900F83E00EB7FFCEB0FE01F347DB126>I<13075B5B137FEA07FFB5FC13BFEAF83F
1200B3B3A2497E007FB51280A319327AB126>I<EB3FC0EBFFF0000313FC380F80FF391E
007F80001CEB3FC048EB1FE048130F15F00060130712FC6C14F87E1403A3007E1307123C
C7FC15F0A2140F15E0EC1FC0A2EC3F801500147E5C495A5C495A495A495A49C7FC133E13
3C4913185B485A48481330485A48C7FC001C1470001FB512F05A5AB612E0A31D327CB126
>I<EB1FE0EBFFFC4813FF3907E03F80390F001FC0001EEB0FE0001CEB07F0123F018013
F8140313C01380A2381F0007C7FC15F0A2EC0FE015C0141FEC3F80EC7E00EB01F8EB7FE0
14FCEB003FEC1FC0EC0FE0EC07F015F8140315FC140115FEA3127EB4FCA415FC48130312
780070EB07F86C14F0003C130F001FEB1FE0390FE03F800003B51200C613FCEB1FE01F34
7DB126>I<EC01C0A214031407A2140F141FA2143F147F146F14CF1301EB038F140F1307
130E130C131C13381330137013E013C0EA0180120313001206120E120C5A123812305A12
E0B71280A3C7380FC000A94A7E0107B51280A321337EB226>I<000C14C0380FC00F90B5
128015005C5C14F014C0D80C18C7FC90C8FCA9EB0FC0EB7FF8EBF07C380FC03F9038001F
80EC0FC0120E000CEB07E0A2C713F01403A215F8A41218127E12FEA315F0140712F80060
14E01270EC0FC06C131F003C14806CEB7F00380F80FE3807FFF8000113E038003F801D34
7CB126>I<14FE903807FF80011F13E090383F00F0017C13703901F801F8EBF003EA03E0
1207EA0FC0EC01F04848C7FCA248C8FCA35A127EEB07F0EB1FFC38FE381F9038700F8090
38E007C039FFC003E0018013F0EC01F8130015FC1400A24814FEA5127EA4127F6C14FCA2
6C1301018013F8000F14F0EBC0030007EB07E03903E00FC03901F81F806CB51200EB3FFC
EB0FE01F347DB126>I<1230123C003FB6FCA34814FEA215FC0070C71238006014301570
15E04814C01401EC0380C7EA07001406140E5C141814385CA25CA2495A1303A3495AA213
0FA3131F91C7FCA25BA55BA9131C20347CB126>I<EB0FE0EB7FFC90B5FC3903F01F8039
07C007C0390F0003E0000EEB01F0001E1300001C14F8003C1478A3123EA2003F14F86D13
F0EBC001D81FF013E09038F803C0390FFE07803907FF0F006C13DE6C13F87EEB3FFE8001
F713C0D803E313E0D8078013F0390F007FF8001E131F003EEB07FC003C1303481301EC00
7E12F848143EA2151EA37E153C1278007C14787E6C14F0390F8003E03907F01FC00001B5
120038007FFCEB1FE01F347DB126>I<EB0FE0EB7FF8EBFFFE3803F83F3907E00F80390F
C007C0D81F8013E0EC03F0EA3F0048EB01F8127EA200FE14FC1400A415FEA5007E1301A2
127F7E1403EA1F80000F13073807C00E3803E01C3801F03838007FF090381FC0FC90C7FC
1401A215F8A215F01403001F14E0383F800715C0140FEC1F809038003F00001C137E381F
01FC380FFFF0000313C0C690C7FC1F347DB126>I<123C127E12FFA4127E123C1200B012
3C127E12FFA4127E123C08207A9F15>I<123C127E12FFA4127E123C1200B0123C127E12
FE12FFA3127F123F1203A412071206A3120E120C121C1238123012701260082F7A9F15>
I<007FB812C0B912E0A26C17C0CCFCAC007FB812C0B912E0A26C17C033147C9C3C>61
D<EBFFC0000313F8380F00FE001C133F48EB1F804814C0140F00FC14E07EA4127CC7EA1F
C0A2EC3F80EC7F0014FE14F8495A495A5C495AA249C7FC130EA2130C131CA21318A890C8
FCA7133C137E13FFA4137E133C1B357CB424>63 D<15E0A34A7EA24A7EA34A7EA3EC0DFE
140CA2EC187FA34A6C7EA202707FEC601FA202E07FECC00FA2D901807F1507A249486C7E
A301066D7EA2010E80010FB5FCA249800118C77EA24981163FA2496E7EA3496E7EA20001
821607487ED81FF04A7ED8FFFE49B512E0A333367DB53A>65 D<B7FC16E016F83A03FC00
03FE0001EC00FFEE7F80EE3FC0161F17E0160F17F0A617E0161F17C0EE3F80EE7F0016FE
ED03FC90B612F05E9039FC0007FCED00FEEE3F80EE1FC0EE0FE017F0160717F8160317FC
A617F81607A2EE0FF0EE1FE0163FEE7FC00003913803FF00B75A16F816C02E337DB236>
I<DA03FE130C91393FFF801C91B512E0903A03FE01F83C903A0FF0003C7CD91FC0EB0EFC
D97F80130701FEC7120348481401000315005B4848157C485A173C485A171C123F5B007F
160CA390C9FC481600AB7E6D150CA3123F7F001F161C17186C7E17386C6C15306C6C1570
6D15E012016C6CEC01C0D97F80EB0380D91FC0EB0F00D90FF0131ED903FE13FC0100B512
F0023F13C0DA03FEC7FC2E377CB437>I<B77E16F016FE3A01FE0001FF00009138003FC0
EE0FE0707E707E707E707E177E177FEF3F80A2EF1FC0A3EF0FE0A418F0AA18E0A3171F18
C0A21880173F18005F17FE5F4C5AEE07F04C5AEE3FC000014AB45AB748C7FC16F8168034
337EB23B>I<B812C0A3D803FCC7127F0001150FEE03E01601A21600A21760A403061330
A41700150EA2151E157E90B512FEA39038FC007E151E150EA21506170CA3171892C7FCA4
1738A21770A217F01601160316070003157FB812E0A32E337DB234>I<B81280A3D803FC
C7FC0001151FEE07C01603A21601A21600A41760150CA31700A2151CA2153C15FC90B5FC
A3EBFC00153C151CA2150CA592C8FCAB487EB512FEA32B337DB232>I<DA03FE130C9139
3FFF801C91B512E0903A03FE01F83C903A0FF0003C7CD91FC0EB0EFCD97F80130701FEC7
120348481401000315005B4848157C485A173C485A171C123F5B007F160CA390C9FC4893
C7FCAA0303B512E07E7F92390003FE00705A123F7F121FA26C7E7F12076C7E7F6C6C1403
6C7E6D6C1307D91FC0EB0E7CD90FF0EB1C3CD903FEEBF81C0100B5EAF00C023F01C0C7FC
DA03FEC8FC33377CB43C>I<B5D8FE03B512F8A3000190C73807FC006C486E5AB390B7FC
A349C71203B3A3486C4A7EB5D8FE03B512F8A335337EB23A>I<B512FEA3000113006C5A
B3B3A7487EB512FEA317337EB21C>I<017FB5FCA39038003FE0EC1FC0B3B1127EB4FCA4
EC3F805A0060140000705B6C13FE6C485A380F03F03803FFC0C690C7FC20357DB227>I<
B500FE903807FFF8A3000190C7000113006C48EC00FC17F04C5A4C5A4CC7FC160E5E5E5E
5E4B5A4B5A4BC8FC150E5D5D15F84A7E14034A7EEC0EFF5C4A6C7E4A6C7EECE01FD9FFC0
7F4A6C7E4A6C7E5B6F7E6F7EA26F7E707EA2707E707E160F83707E707EA283486C913807
FF80B500FE013F13FCA336337EB23C>I<B512FEA3D803FEC9FC6C5AB3A9EE0180A41603
1700A45EA25E5E5E5E16FE00031407B7FCA329337DB230>I<D8FFFC923801FFF86D5DA2
0003EFFE00D801BFED06FCA3D99F80140CA2D98FC01418A3D987E01430A2D983F01460A3
D981F814C0A3D980FCEB0180A2027EEB0300A36E1306A26E6C5AA36E6C5AA36E6C5AA26E
6C5AA36E6C5AA3913800FD80A2037FC7FCA3486C133ED80FF04B7EB5011C90387FFFF8A3
3D337CB246>I<D8FFFE91381FFFF87F80C6030013006E143CD9DFE01418EBCFF0A2EBC7
F8EBC3FCA2EBC1FEEBC0FF6E7EA26E7E6E7EA26E7E6E7E6E7EA26E7E6E7EA2ED7F80ED3F
C0ED1FE0A2ED0FF0ED07F8A2ED03FCED01FEED00FFA2EE7F98EE3FD8A2EE1FF8160F1607
A216031601A2486C1400D807F81578B500C01438A2171835337EB23A>I<EC07FC91387F
FFC0903901FC07F0903907E000FCD90F80133E013FC76C7E017E6E7E496E7E48486E7E48
486E7EA248486E7E000F8249157E001F167FA24848ED3F80A2007F17C0A290C9121FA248
17E0AB6C17C06D153FA3003F17806D157FA2001F17006D5D000F5E6C6C4A5AA26C6C4A5A
00015E6C6C4A5A017E4A5A6D4A5AD91FC0017FC7FCD907E013FC903901FC07F09039007F
FFC0DA07FCC8FC33377CB43C>I<B612FEEDFFC016F03A03FC0007FC0001EC00FE167FEE
3F80EE1FC017E0160FA217F0A617E0A2EE1FC0A2EE3F80EE7F0016FEED07F890B65A1680
01FCC9FCB3A2487EB512F8A32C337DB234>I<EC07FC91387FFFC0903901FC07F0903907
E000FC4948137E013FC7EA1F80017E6E7E496E7E48486E7E00038249140148486E7E000F
8249157E001F167FA24848ED3F80A2007F17C0A390C9121F4817E0AB6C17C0A26D153FA2
003F1780A26D157F001F1700A2270FE001F013FE0007D907FC5B9039F00E0E013B03F80C
0703F8000190391C0383F03B00FC180187E0017EECCFC0013FECDF8090271F9C00FFC7FC
D907EC13FC902701FE07F013609038007FFF913807FC7091C7007813E0A2EE7C01EE7E03
93387F07C0EE3FFFA21880821800705A705AEE01F033447CB43C>I<B612FCEDFF8016F0
3A01FE0007FC0000EC01FEED007F707E707E83160F83A65FA24C5AA24C5A047EC7FC4B5A
ED0FF090B612C093C8FC9039FE001FC0ED07F06F7E6F7E150082167E167FA583A5180C17
C0A2043F131C486C1618B500FEEB1FE0040F1338933807F070C93801FFE09338003F8036
357EB239>I<90381FE00390387FFC0748B5FC3907F01FCF390F8003FF48C7FC003E8081
4880A200788000F880A46C80A27E92C7FC127F13C0EA3FF013FF6C13F06C13FF6C14C06C
14F0C680013F7F01037F9038003FFF140302001380157F153FED1FC0150F12C0A21507A3
7EA26CEC0F80A26C15006C5C6C143E6C147E01C05B39F1FC03F800E0B512E0011F138026
C003FEC7FC22377CB42B>I<007FB712FEA390398007F001D87C00EC003E0078161E0070
160EA20060160600E01607A3481603A6C71500B3AB4A7E011FB512FCA330337DB237>I<
B500FE90381FFFF8A3000190C813006C48153C1718B3AF1738017F1530A217706D6C1460
011F15E06E495A010F14036D6C495A6D6C49C7FCD901FC131E6DB413FC91383FFFF0020F
13C0020190C8FC35357EB23A>I<B500F0903803FFF8A3D807FEC8EA7FC06C48ED1F0000
01161E6D151C00001618A26D15386D1530A26D6C5CA26E14E0011F5DA26D6C495AA28001
074AC7FCA26D6C1306A28001015CA26E131C01001418806E5BA2ED8070023F1360A26E6C
5AA215E1020F5BA2DA07F3C8FCA215FBEC03FEA36E5AA26E5AA31570A235357EB23A>I<
B5D8F007B539800FFFF0A3000390C7273FF000011300D801FC6E48EB007C1A386D140F00
001930836D020715706D1860A26E496C14E0013F60A26ED919FC1301011F60A26ED930FE
1303010F95C7FCA26ED9607F5B01071706A26E9039C03F800E0103170CA2913BFC01801F
C01C01011718A2913BFE03000FE03801001730A2DAFF06EB07F0027F5EA2038CEB03F802
3F5EA203D8EB01FC021FEDFD80A203F0EB00FF020F93C8FCA24B800207157EA24B143E02
03153CA24B141C020115184C357FB24F>I<B500F8ECFFFEA300030180EC3FE06C90C8EA
1F806CEE0E006D6C5C6D6C141817386D6C14305F6D6C14E06D6C5C16016D6C5C6D6C49C7
FC5E6D6C13065E91387F801C91383FC018163891381FE0306E6C5A16E06E6C5AEDF980EC
03FF6E90C8FC5D1400B14A7E91B512FCA337337FB23A>89 D<EAFFF0A4EAF000B3B3B3AD
EAFFF0A40C4B79B715>91 D<0003130C48131C000E133848137000181360003813E00030
13C0EA700100601380A2EAE00300C01300A400DE137800FF13FCEB83FEA2EA7F81A2383F
00FC001E1378171774B326>I<EAFFF0A41200B3B3B3AD12FFA40C4B7FB715>I<12035A12
0E5A12181238123012701260A212E05AA412DEB4FC1380A2127FA2EA3F00121E09177BB3
15>96 D<EB7F803803FFF0380F80FC381C003E003F133F6D6C7E6E7EA26E7EEA1F00C7FC
A4EB01FF131FEBFF873803FC07EA0FF0EA1FC0EA3F80127F13004815C05AA3140FA26C13
1F6C133B3A3F8071F180391FC1E1FF2607FFC013003900FE003C22237DA126>I<EA03F0
12FFA312071203AEEC3F80ECFFE09038F3C0F89038F7007E01FE7F49EB1F8049EB0FC05B
ED07E016F0A2150316F8AA16F0150716E0A2ED0FC07F6DEB1F8001ECEB3F0001CF137C90
388381F8903801FFE0C76CC7FC25357EB32B>I<EB07F8EB3FFF9038FC07C03901F000E0
3903E003F03807C007120FEA1F80123F90380003E04890C7FCA2127E12FEAA127FA26C14
187F001F14386D1330000F14706C6C13E03903F001C03900FC0F8090383FFE00EB07F01D
237EA122>I<153FEC0FFFA3EC007F81AEEB07F0EB3FFCEBFC0F3901F003BF3907E001FF
48487E48487F8148C7FCA25A127E12FEAA127E127FA27E6C6C5BA26C6C5B6C6C4813803A
03F007BFFC3900F81E3FEB3FFCD90FE0130026357DB32B>I<EB0FE0EB7FFCEBF83F3903
F00F80D807E013C0390FC007E0381F800315F0EA3F0014014814F8127EA212FEA2B6FCA2
48C8FCA5127E127FA26C1418A26C6C1338000F14306D13706C6C13E03901F003C03900FC
0F00EB3FFEEB07F01D237EA122>I<EB01FCEB07FF90381F078090383E0FC0EB7C1F13FC
EA01F8A20003EB070049C7FCACB512F0A3D803F0C7FCB3A7487E387FFFE0A31A357FB417
>I<151F90391FC07F809039FFF8E3C03901F07FC73907E03F033A0FC01F83809039800F
8000001F80EB00074880A66C5CEB800F000F5CEBC01F6C6C48C7FCEBF07C380EFFF8380C
1FC0001CC9FCA3121EA2121F380FFFFEECFFC06C14F06C14FC4880381F0001003EEB007F
4880ED1F8048140FA56C141F007C15006C143E6C5C390FC001F83903F007E0C6B51280D9
1FFCC7FC22337EA126>I<EA03F012FFA312071203AEEC1FC0EC7FF09038F1E0FC9038F3
807C9038F7007E13FE497FA25BA25BB3486CEB7F80B538C7FFFCA326347EB32B>I<EA07
80EA0FC0EA1FE0A4EA0FC0EA0780C7FCAAEA07E012FFA3120F1207B3A6EA0FF0B5FCA310
337EB215>I<EB03C0EB07E0EB0FF0A4EB07E0EB03C090C7FCAAEB03F013FFA313071303
B3B01238127C00FE13E0130714C0130F007C138038381F00EA1FFCEA07F0144384B217>
I<EA03F012FFA312071203AF913803FFE0A36E1300EC00F8EC01E05D4A5A020FC7FC141C
5C5C14F0EBF3F8EBF7FC13FEEBFC7EEBF87F496C7E141F6E7E8114076E7E8114016E7E81
486CEBFF80B500C313F0A324347EB329>I<EA07E012FFA3120F1207B3B3A7EA0FF0B5FC
A310347EB315>I<2703F01FE013FF00FF90267FF80313C0903BF1E07C0F03E0903BF380
3E1C01F02807F7003F387FD803FE1470496D486C7EA2495CA2495CB3486C496C487EB53B
C7FFFE3FFFF0A33C217EA041>I<3903F01FC000FFEB7FF09038F1E0FC9038F3807C3907
F7007EEA03FE497FA25BA25BB3486CEB7F80B538C7FFFCA326217EA02B>I<EB07F0EB3F
FE9038FC1F803901F007C03903C001E000078048486C7E48C7127CA248147E003E143E00
7E143FA300FE1580A8007E1500A36C147EA26C147C6D13FC6C6C485A00075C3903F007E0
3900FC1F80D93FFEC7FCEB07F021237EA126>I<3903F03F8000FFEBFFE09038F3C0F890
38F7007ED807FE7F6C48EB1F804914C049130F16E0ED07F0A3ED03F8A9150716F0A216E0
150F16C06D131F6DEB3F80160001FF13FC9038F381F89038F1FFE0D9F07FC7FC91C8FCAA
487EB512C0A325307EA02B>I<903807F00390383FFC07EBFC0F3901F8038F3807E00100
0F14DF48486CB4FC497F123F90C77E5AA25A5AA9127FA36C6C5B121F6D5B000F5B3907E0
03BF3903F0073F3800F81EEB3FF8EB0FE090C7FCAAED7F8091380FFFFCA326307DA029>
I<3803E07C38FFE1FF9038E38F809038E71FC0EA07EEEA03ECA29038FC0F8049C7FCA35B
B2487EB512E0A31A217FA01E>I<EBFF06000713CE381F00FE003C133E48131E140E5A14
06A27EA200FE90C7FC6C7EEA7FFC383FFFC014F0000F7F6C7FC67FEB0FFF1300EC3F8000
C0131F140F6C1307A37E15006C5B6C130E6C5B38F7807838E1FFE038C07F8019237EA11E
>I<1330A51370A313F0A21201A212031207381FFFFEB5FCA23803F000AF1403A8140738
01F806A23800FC0EEB7E1CEB1FF8EB07E0182F7FAD1E>I<D803F0133F00FFEB0FFFA300
07EB007F000380B35DA35D12016D4813800000903803BFFC90387E073FEB1FFED907F813
0026227EA02B>I<B5EBFFF0A3D80FF0EB3F800007EC1F000003140E150C6D131C000114
18A26C6C5BA26D1370017E1360137F6D5BA290381F8180A214C3010F90C7FCA2EB07E6A2
14FE6D5AA26D5AA36D5AA2146024217E9F29>I<B53A1FFF81FFF0A33C07F801FC003F80
01F049EB1E0000030100141C816C6C017C1318A26D017E1338000002FE1330A290267E01
FF5B159F168090263F030F5BA216C0903A1F8607C180A202C613E390260FCC0390C7FCA2
D907FC13F6ECF80116FE6D486C5AA36D481378A36D48133034217F9F37>I<B53801FFF8
A32603FE0013806C48EB7C0000001478017E1370017F5B90383F81C090381F8380D90FC3
C7FCEB07E614FE6D5A6D5A6D7E80805B9038039F809038071FC09038060FE0EB0C079038
1C03F0496C7E01707FEBF000000180000FECFF8026FFFC0313FCA326207F9F29>I<3A7F
FF807FF8A33A07F8001FC00003EC0F800001EC070015066C6C5BA26D131C017E1318A26D
5BA2EC8070011F1360ECC0E0010F5BA2903807E180A214F3010390C7FC14FBEB01FEA26D
5AA31478A21430A25CA214E05CA2495A1278D8FC03C8FCA21306130EEA701CEA7838EA1F
F0EA0FC025307F9F29>I<003FB512F0A2EB000F003C14E00038EB1FC00030EB3F800070
137F1500006013FE495A13035CC6485A495AA2495A495A49C7FC153013FE485A12035B48
481370485A001F14604913E0485A387F000348130F90B5FCA21C207E9F22>I<B712F8A2
2502809426>I<BC12F0A24C0280944D>I<3807C001390FF80380391FFE0F00383FFFFE38
783FFC38E00FF8384001F019077AB126>126 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fp cmbx9 9 55
/Fp 55 123 df<EC07FF91B512E001078090391FFC01FC90383FE0009039FFC001FE48EB
80031400484A7E496D5AA36F5AED007093C7FCA4ED3FFFB8FCA43903FE0001B3A7277FFF
F03F13F8A42D347FB331>12 D<B512FCA816087F931D>45 D<120FEA3FC0EA7FE0EAFFF0
A6EA7FE0EA3FC0EA0F000C0C7A8B19>I<EB03FE90383FFFE090B512F848EB07FC3903FC
01FE48486C7E4848EB7F8049133F001F15C0A2003F15E049131F007F15F0A500FF15F8B1
007F15F0A4003F15E06D133FA2001F15C0A26C6CEB7F806C6CEBFF006C6C485A3901FF07
FC6CEBFFF8013F13E0D903FEC7FC25327DB02C>48 D<147814F81303131FEA03FFB5FCA3
EAFC1F1200B3B2007FB512FEA41F317AB02C>I<EB1FFC90B57E000314E0000F14F8391F
E03FFC393F800FFF48487E6D6C1380D8FFC014C06D7E16E080A36C5A6C5A6CC7FCC8FC16
C05C16805C16004A5A4A5A5D4A5AEC3FC04A5A02FEC7FC495A495A903907E001E0EB0FC0
EB1F8090383E00034914C05B4848130748B6FC5A5A5A5A5AB71280A423317CB02C>I<EB
0FFC90387FFF8048B512F03903F01FF83907C00FFE380F8007486C6C7E01F01480123F13
F8A5D81FF014006C485AD803805BC7FC4A5A4A5A4A5AECFFC0013F90C7FC14FCECFFC090
38001FF0EC0FFC6E7E6E7E16806E13C0A2000F15E0EA3FC0EA7FE0EAFFF0A416C0A2495A
D87FC0148049481300003F5B391FF01FFE6CB512F8000314E0C61480D91FFCC7FC23327C
B02C>I<151F5D5DA25D5C5C5C5CA25C143D147D14F9EB01F114E1EB03C1EB0781130FEB
1F01133E133C137813F01201EA03E0EA07C01380EA0F00121E123E5A5AB712FEA4C70003
1300A80103B512FEA427317EB02C>I<000C140ED80FE013FE90B5FC5D5D5D5D5D92C7FC
14FC14F091C8FC1380A6EB87FE9038BFFFC090B512F09038FC0FF89038E003FE01C07F49
7E01001480000E6D13C0C8FCA216E0A3121FEA7F807F487EA316C05B5CD87F801480D87C
0014006C5B393F8007FE391FE01FFC0007B512F06C14C0C691C7FCEB1FF823327CB02C>
I<EC7FC0903803FFF0010F13FC90383FE07E90387F801F4848485A4848EBFF8048485A13
F8120FEA1FF0A2123F6E13004848133C92C7FCA2142039FFE1FF8001E713E001EF13F890
38FE03FC496C7E01F87F6E13805B16C0A24914E0A5127FA5123F16C0121F6D1480000F5B
01F814006C6C485A6C6C485A6CB55A6C6C5B011F13C0D907FEC7FC23327CB02C>I<123C
123F90B612F8A44815F016E016C0168016005D007CC7127E00785C4A5A00F8495A48495A
4A5A4A5AC7FC4AC7FC147E14FE5C13015C1303A2495AA2130FA2131FA25C133FA4137FA9
6D5AA2010FC8FC25337BB12C>I<EB07FE90383FFFC090B512F03903F807FC3907C000FE
4848137F8148C71380151F5A7FA27F7F01F8133F01FE14006D6C5A6CEBE0FEECF1FC6CEB
FFF815E06C5C6C14F06C806C6C7F48B57E4880D80FF31480D81FE014C0383FC03FEB800F
48486C13E0140148EB007F48143F151FA2150FA216C07E6C141F6D14806C6C133F6DEB7F
00391FF803FE0007B512F86C5CC66C13C0D90FFCC7FC23327CB02C>I<120FEA3FC0EA7F
E0EAFFF0A6EA7FE0EA3FC0EA0F00C7FCA9120FEA3FC0EA7FE0EAFFF0A6EA7FE0EA3FC0EA
0F000C217AA019>58 D<EB7FF80003B51280000F14E0391FC03FF0393E000FF8007FEB07
FCD8FF8013FE13C0A5397F800FFCEA3F00C7EA1FF8EC3FF0EC7FC0ECFF80903801FE005C
495A5C495A5CA2495AA291C7FCA790C8FCA6EB1F80497E497E497EA66D5A6D5A6D5A1F34
7BB32A>63 D<ED1F80A24B7EA24B7EA34B7EA24A7FA34A7FA24A7F15CFA2020F7F158702
1F801503023F80EC3E01A2027E80EC7C0002FC804A137FA20101814A133F0103814A131F
A249B67EA24981A290271F8000077F91C77EA24982013E80017E82017C80A201FC824915
7FB500F0013FB512F0A43C347DB343>65 D<B712FEEEFFC017F817FEC69039C0001FFF04
071380040113C0A27013E0A2EF7FF0A6EFFFE0A24C13C0A24C138093380FFE00EE3FFC91
B612F017C017F89139C00007FE933803FF80040013C018E0EF7FF018F8173FA218FCA618
F8A2177FEFFFF04C13E05E040F13C0B912005F17F0178036337DB23F>I<DBFFE0133802
1F01FE137891B6EA80F8010315E1010F9038E00FF7903A1FFE0001FFD97FF8EB007FD9FF
E0143F4849141F4849140F4890C81207485A1703485A1701123F5B007F1600A349160012
FFAB127F7F1878A2123F7F001F17F818F06C7E6D15016CEE03E06C7F6C6DEC07C06C6DEC
0F80D97FF8EC3F00D91FFE14FE903A0FFFE007FC010390B512F0010015C0021F49C7FC02
0013F035357BB340>I<B712FCEEFFC017F817FEC69039E0003FFF040313C004007F717E
EF1FF8717E841707848319808319C0A419E0AB19C0A419805FA219004D5A170F604D5A4D
5AEFFFE004035B041F5BB848C7FC17F817C004FCC8FC3B337DB244>I<B812FEA4C69038
E0000FEE01FF82838383A283A3DB01E013801707A4030390C7FCA21507151F91B5FCA4EC
E01F1507150318F01501A2EF01E0A392C7FCA21703A2EF07C0A2170F171F173F17FF1607
B91280A434337DB23A>I<B812FCA4C69038E0001FEE03FE16011600177E173EA2171EA3
923803C01F170FA403071300A2150F153F91B5FCA4ECE03F150F1507A21503A592C8FCAB
B612F8A430337DB238>I<912601FFE01370021F01FC13F091B61201010315C3010F9038
C00FFF90393FFE0003D97FF81300D9FFE0147F4849143F4849141F4890C8120F485A1707
485A1703485AA2007F1601A25B94C8FC12FFA90303B612C0A2127F7F92C7387FF000A212
3FA26C7EA26C7EA26C7E6C7F6C7F6C6D14FFEB7FF8D93FFE130390390FFFE00F010390B5
12E301001580021F9038FE0030020101F090C7FC3A357BB345>I<B612E0A4C6EBE000B3
B3A7B612E0A41B337DB221>73 D<B612F8A4C601E0C8FCB3A81778A417F817F0A31601A2
1603A21607160F161F167F923803FFE0B8FCA42D337DB235>76 D<B500E093387FFFF86E
93B5FCA26E5DC6F1F800D9F7FCED03DFA3D9F3FEED079FA2D9F1FFED0F1FA201F06D141E
A26E6C143CA26E6C1478A26E6C14F0A36E6CEB01E0A26E6CEB03C0A26E6CEB0780A26E6C
EB0F00A26EEB801EA26F6C5AA36F6C5AA26F6C5AA292380FF9E0A26FB45AA26F5BA26F90
C7FCA3B526F000FE011FB512F8A2167C16384D337DB254>I<B500E091383FFFFC808080
C66D9138003C00808101F77F13F301F17F8101F07F6E7E6E7E6E7E6E7F806E7F826E7F6E
7F6F7E6F7E6F7E816F138017C06F13E06F13F06F13F8EE7FFCEE3FFE161FEE0FFF18BC70
13FC828282177F173F171FA2170F170717031701B500F01400187C183CA23E337DB245>
I<913803FF80027F13FC49B6FC0107010113C0903A1FF8003FF0D93FE0EB0FF8D9FFC0EB
07FE48496D7E4890C76C13804980000717C04848ED7FE0A24848ED3FF0A2003F17F8A200
7F17FC49151FA300FF17FEAB007F17FCA26D153FA2003F17F8A36C6CED7FF0A26C6CEDFF
E0000717C06D5C6C17806C6D4913006C6D495AD97FF0EB1FFCD91FF8EB3FF0903A07FF01
FFC0010190B5C7FC6D6C13FC020713C037357BB342>I<B712F8EEFF8017E017F8C69039
E0007FFCEE0FFE707E701380A27013C0A218E0A718C0A24C1380A24C13004C5AEE7FFC91
B612F017C04CC7FC02E0C9FCB3B612E0A433337DB23C>I<B712E016FEEEFFC017F0C6D9
E00013FCEE1FFEEE07FF707FA2707FA284A660A24C5B95C7FC4C5AEE1FFCEEFFF891B612
C094C8FC83DAE0037F03007FEE3FF083707EA2707EA583A4193CA2188082F0C07CB6D8E0
03147870EBE1F070EBFFE0053F13C0CA000313803E347DB242>82
D<D90FFC137090397FFF80F048B512E1000714FB390FF803FF391FE0007F4848133F4913
0F007F140790C7FC1503481401A36D1300A27F6D140013F8387FFFC014FCECFFE06C14F8
6C14FE816C1580000315C06C15E06C6C14F0131F010014F8140F9138007FFC153F151F15
0F00F01407A21503A27EA216F86C14076C15F07E6DEB0FE001E0131F01FEEB7FC000FDB6
1200D8F87F5BD8F01F13F8D8E00113C026357BB331>I<003FB812F8A4D9F003EB801FD8
7F80ED03FC01001501007E1600007C177CA20078173CA400F8173E48171EA4C71600B3A9
011FB612F0A437327DB13E>I<B66CB639800FFFFCA400019026C0000101C0C7EA1F001B
1E6E6F143E6C6F163CA26E6E6C147C017F19786E4A6C14F8013F61A26E496D1301011F61
6E497F010F03CF4A5AA26E01076D13076D03875DA29226800F03EB800F6D96C7FCDBC01F
6E5A6DDA1E01141EA2DBE03EECE03E6DDA3C00143CDBF07C14F0027F0178017F5BA2DBF8
F8ECF8F8023F49013F5BA2DBFDE0EB1FFD021F5F03FF15FF6E496D5BA36E496D5BA26E90
C76C90C8FCA36E486E5AA24B140002005EA20378157856347EB25B>87
D<EB7FFE0003B512E04814F8390FF00FFC391FF803FF806E138016C0157F6C5A6C5AEA01
80C8FCEC7FFF010FB5FC90B6FC0003EBF07F000F1300EA1FF8485A485A485A5BA315FF7F
007F5B6D4813E03A3FF80FBFFF000FB5121F0003EBFC0F39007FE00728217EA02B>97
D<EA01FC12FFA4120F1207ADEC07FC91387FFF8001FDB512E09039FFF00FF89138C007FC
91380003FE496D7E496D1380A217C0167FA217E0A917C0A216FF1780A26D4913006D495A
9138C007FC9039F3F01FF801E1B512E0D9C07F13809026800FF8C7FC2B347EB331>I<90
3807FF80013F13F090B512FC3903FE01FE4848487EEA0FF8EA1FF0EA3FE0A2007F6D5A49
6C5A153000FF91C7FCA9127F7FA2003FEC07807F6C6C130F000FEC1F00D807FE133E3903
FF80FCC6EBFFF8013F13E0010790C7FC21217DA027>I<ED01FC15FFA4150F1507ADEB07
FE90383FFFC790B512F70003EB01FF3907FC003F4848131F4848130F48481307A2127F5B
A212FFA9127FA27F123F150F6C6C131F6C6C133F6C6C497E2603FE03B512E0C6B512E701
3F1387903807FC072B347DB331>I<903803FF80013F13F090B512FC48EB03FE3907FC00
7F4848EB3F804848EB1FC05B003FEC0FE0127F5B16F012FF150790B6FCA301C0C8FCA412
7F7F123F16F06C7E000F14016C6CEB03E0D803FEEB0FC03A01FF807F806C6CB51200011F
13FC010313E024217EA029>I<EC3FE0903803FFF8010F13FC90383FF1FE90387FC3FFEB
FF83481303A2EA03FEEC01FEA2EC00781500A7B512FEA4D803FEC7FCB3A7387FFFF8A420
347EB31B>I<16F890390FFC07FE90387FFF9F48B6127F3907FC0FFC380FF003001F14FE
D9E001133E003FECFF1C1600A6001F5CEBF003000F5C3907FC0FF890B512E0486C1380D9
0FFCC7FC48C9FCA37F7F90B512F015FE6CECFF8016E06C15F06C15F84815FC121F393F80
001F48C7EA03FE481401481400A46C14016C6CEB03FC6C6CEB07F86C6CEB0FF0D80FFCEB
7FE00003B61280C6ECFE00010F13E028327EA12C>I<EA01FC12FFA4120F1207ADEC03FF
020F13C0023F13F09138FC0FF89039FDE007FCEBFFC04A6C7E1400A25BA25BB2B539E07F
FFF0A42C347DB331>I<EA03F0487E487E487EA66C5A6C5A6C5AC8FCA8EA01FC12FFA412
0F1207B3A5B512C0A412357DB418>I<147E14FF4913804913C0A66D13806D1300147E91
C7FCA8EC1FC0EB0FFFA41300147FB3AC121E123FEA7F80EAFFC0ECFF80A201C113005C38
7F87FC6CB45A6C13E0000390C7FC1A4485B41B>I<EA01FC12FFA4120F1207ADED7FFFA4
ED1FC04B5A037EC7FC5DEC03F8EC07E04A5AEC3F804AC8FC4A7E90B5FC8181ECBFF0EC3F
F89038FC1FFCEBF80F6E7E6E7E6E7F82806F7E6F7E6F7EB539C07FFFC0A42A347DB32F>
I<EA01FC12FFA4120F1207B3B3A6B512E0A413347DB318>I<2703F803FEEB03FE00FF90
3B1FFFC01FFFC0027FD9E07F7F913BF81FF0F81FF0903CF9E00FF9E00FF8260FFBC0EBFB
C06CB4486CB4486C7E02001400495CA3495CB2B500E0B500E0B512E0A443217CA04A>I<
3901F803FF00FF010F13C0023F13F09138FC0FF89039F9E007FC380FFBC06CB4486C7E14
00A25BA25BB2B539E07FFFF0A42C217DA031>I<903803FF80011F13F090B512FE48EB01
FF3A07FC007FC0D80FF0EB1FE0001F15F049130F003F15F8491307007F15FCA300FF15FE
A8007F15FCA26D130F003F15F8001F15F06D131F6C6CEB3FE06C6CEB7FC03A01FF01FF00
6CEBFFFE013F13F80103138027217EA02C>I<3901FC07FC00FF90387FFF8001FDB512E0
9039FFF01FF89138C007FC000F90380003FE6C4880496D1380A26F13C0A3EE7FE0A9EEFF
C0A34B1380A26D4913006D495A9138C00FFC9138F03FF801FDB512E0D9FC7F1380DA0FF8
C7FC91C9FCABB512E0A42B307EA031>I<3901F81F8000FFEB7FF0ECFFF89038F9E3FC90
38FBC7FE380FFF876C1307A213FEEC03FCEC01F8EC0060491300B1B512F0A41F217EA024
>114 D<9038FFE1C0000713FF5A383F803F387E000F14075A14037EA26C6CC7FC13FCEB
FFE06C13FC806CEBFF80000F14C06C14E0C6FC010F13F0EB007F140F00F0130714037EA2
6C14E06C13076CEB0FC09038C01F8090B5120000F913FC38E03FE01C217DA023>I<133C
A5137CA313FCA21201A212031207001FB51280B6FCA3D807FCC7FCB0EC03C0A79038FE07
8012033901FF0F006C13FEEB3FFCEB0FF01A2F7EAE22>I<D801FC14FE00FF147FA4000F
140700071403B21507A2150F151F6C6C497E6C6C01FB13F06CEBFFF3013F13C3903807FE
032C217DA031>I<B539C007FFC0A4D807FEC7EAF80000035D6D13016C5D14806C4A5AA2
ECC007017F5CECE00F013F91C7FC6E5A011F131EECF83E010F133CECFC7C01071378ECFE
F801035B14FF6D5BA26D5BA26E5AA26EC8FCA2141E2A217EA02F>I<B53B83FFFC03FFE0
A43D07FC001FE0003E00183C6D167C00036F1378033F14F86C6C6E5B157F9139807BFC01
6C5FDAC0FB1303017FD9F1FE5B14C19139E1E0FF07013F5E9139F3C07F0F011F038FC7FC
14F7903A0FFF803FDEA29238001FFE6D5DA26D486D5AA24A130701015DA26D486D5A4A13
013B217EA040>I<B539C007FFC0A4D807FEC7EAF80000035D6D13016C5D14806C4A5AA2
ECC007017F5CECE00F013F91C7FC6E5A011F131EECF83E010F133CECFC7C01071378ECFE
F801035B14FF6D5BA26D5BA26E5AA26EC8FCA2141EA25CA2147C003E1378007F13F8486C
5A1381EB83E0EB87C0495AD87F3FC9FCEA3FFEEA1FF8EA07E02A307EA02F>121
D<001FB6FCA39038E007FE9038800FFCEB001F001EEB3FF8003E14F0EC7FE0003C13FF49
13C01580491300C65A495A495A5C133F90387FF00FEBFFE014C04813805A48EB001F5B48
48131E001F143E4848137E4913FE387FE003B6FCA320217EA027>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fq cmtt10 10.95 17
/Fq 17 118 df<EA03E0EA0FF0EA1FF813FCEA3FFEA213FFA27EA27E1203EA007FA2137E
13FEEA01FC1203EA07F8EA3FF0127FEAFFE0EA7F801300123C1019708B30>44
D<120FEA3FC0EA7FE0A2EAFFF0A4EA7FE0A2EA3FC0EA0F000C0C6E8B30>46
D<EC1FE0ECFFF8010313FE010F7F4914804914C090397FF03FE09038FF800F4890380007
F0D803FC13033A07F801FBF89038F007FF380FE01F4A13FCEA1FC0495A003FEBFF0F9038
00FE07903901FC03FE007FEBF801EA7E03ECF000A2EAFE0700FC49137EAA00FE6D13FED8
7E0314FCA2ECF801D87F0114F8003FEBFC03903900FE07F0903880FF0F001F90387FFFE0
6D6C13C0EA0FE06E13803A07F007FE009038F801F86C6CC7127C6CB414FE6CEB80039038
7FF01F6DB512FC6D14F86D14E0010314C00100EBFE00EC1FF0273A7CB830>64
D<EB3FFC48B57E4814E04880488048809038F00FFE9038E001FF806F7E6C48133F6C4880
C8121FA491B5FC130F137F48B6FC12075A48EBC01F383FFC00EA7FE0138048C7FC5AA46C
143FA26C6C137F9038C001FF263FF80FEBFFC06CB712E0A2000714F76C14C3C6020013C0
D93FF090C7FC2B2A7CA830>97 D<ECFFE0010713FC011F7F017F7F90B612804815C048EB
807F3907FC003F485A485A49EB1F804848EB0F004990C7FC127F90C9FCA25A5AA87E7EA2
7F003FEC07C06DEB0FE06C7E6D131F6C6C14C0D807FE133F9039FFC0FF806C90B5FCC615
006D5B011F13F801075B01011380232A7AA830>99 D<49B4FC010713E0011F13F8017F7F
90B57E488048018113803A07FC007FC04848133FD81FE0EB1FE0150F484814F049130712
7F90C7FCED03F85A5AB7FCA516F048C9FC7E7EA27F003FEC01F06DEB03F86C7E6C7E6D13
07D807FEEB1FF03A03FFC07FE06C90B5FC6C15C0013F14806DEBFE00010713F8010013C0
252A7CA830>101 D<EDFF80020713E0021F13F05C4A13F891B5FC491387903803FE0791
38FC03F0903907F800C04A1300A8003FB612C04815E0B7FCA36C15C0260007F0C7FCB3A9
003FB512FE4880B71280A26C15006C5C25397DB830>I<14E0EB03F8A2497EA36D5AA2EB
00E091C8FCA9381FFFF8487F5AA27E7EEA0001B3A9003FB612C04815E0B7FCA27E6C15C0
23397AB830>105 D<EA7FF8487EA4127F1200AB0203B512804A14C017E0A217C06E1480
9139001FE0004B5A4B5A4BC7FC4A5A4A5AEC0FF84A5A4A5A4A5A4A5A01FD7F90B57E8114
F7ECE3F8ECC1FCEC81FEEC00FF497F496D7E6F7E826F7E15076F7E6F7E3B7FFFF81FFFE0
B56C4813F017F8A217F06C496C13E02D387FB730>107 D<387FFFF8B57EA47EEA0001B3
B3A8007FB612F0B712F8A46C15F025387BB730>I<02FC137E3B7FC3FF01FF80D8FFEF01
877F90B500CF7F15DF92B57E6C010F13872607FE07EB03F801FC13FE9039F803FC01A201
F013F8A301E013F0B3A23C7FFE0FFF07FF80B548018F13C0A46C486C01071380322881A7
30>I<EC01FE3A3FFC0FFF80267FFE3F13E000FF90B57E90B67E7E6C9038FE07FCC6EBF8
039138E001FE14C0EC8000A291C7FCA25BB3A23B3FFFF81FFFF8486D4813FCB500FE14FE
A26C01FC14FC6C496C13F82F2880A730>I<49B4FC010F13E0013F13F8497F90B57E0003
ECFF8014013A07FC007FC04848EB3FE0D81FE0EB0FF0A24848EB07F8491303007F15FC90
C71201A300FEEC00FEA86C14016C15FCA26D1303003F15F86D13076D130F6C6CEB1FF06C
6CEB3FE06D137F3A07FF01FFC06C90B512806C15006C6C13FC6D5B010F13E0010190C7FC
272A7CA830>I<ED07F83A3FFF803FFF486DB51280B512C302CF14C06C13DF6C9038FFFC
3FD8001F13E09238801F809238000F004A90C7FC5C5C5CA25CA45CAF003FB512FC4880B7
FCA26C5C6C5C2A287EA730>114 D<90381FFC1E48B5129F000714FF5A5A5A387FF007EB
800100FEC7FC4880A46C143E007F91C7FC13E06CB4FC6C13FC6CEBFF806C14E0000114F8
6C6C7F01037F9038000FFF02001380007C147F00FEEC1FC0A2150F7EA27F151F6DEB3F80
6D137F9039FC03FF0090B6FC5D5D00FC14F0D8F83F13C026780FFEC7FC222A79A830>I<
EB0780497E131FA9003FB612E04815F0B7FCA36C15E026001FC0C7FCB216F8ED01FCA5EC
E003010FEB07F814F09138FC1FF06DB512E06D14C016806D14009038007FFCEC1FF02633
7EB130>I<D83FFCEB3FFC486C497E00FF14FFA2007F147F003F143F00001400B3A41501
A2150315076D130F903A7FC07FFFF891B612FC6D15FE7F6D4913FC6D9038F87FF8010001
C0C7FC2F2880A630>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fr cmsy10 10.95 2
/Fr 2 104 df<153FEC03FFEC0FE0EC3F80EC7E00495A5C495AA2495AB3AA130F5C131F
495A91C7FC13FEEA03F8EA7FE048C8FCEA7FE0EA03F8EA00FE133F806D7E130F801307B3
AA6D7EA26D7E80EB007EEC3F80EC0FE0EC03FFEC003F205B7AC32D>102
D<12FCEAFFC0EA07F0EA01FCEA007E6D7E131F6D7EA26D7EB3AA801303806D7E1300147F
EC1FC0EC07FEEC00FFEC07FEEC1FC0EC7F0014FC1301495A5C13075CB3AA495AA2495A13
3F017EC7FC485AEA07F0EAFFC000FCC8FC205B7AC32D>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fs cmr10 10.95 29
/Fs 29 118 df<133E133F137F13FFA2EA01FEEA03FCEA07F813F0EA0FE0EA1FC01380EA
3E005A5A1270122010116EBE2D>19 D<121EEA7F8012FF13C0A213E0A3127FEA1E601200
A413E013C0A312011380120313005A120E5A1218123812300B1C798919>44
D<B712FCEEFF8017F00001903980000FF86C6CC7EA03FE707E701380EF7FC0EF3FE0A2EF
1FF0A218F8A3170F171FA318F0A2EF3FE0177F18C0EFFF804C1300EE03FCEE0FF8EE7FE0
91B6C7FC17E091C7EA07FCEE01FE933800FF80EF7FC0EF3FE0EF1FF018F8170F18FC1707
A218FEA718FC170FA2EF1FF818F0173FEF7FE0EFFFC00403138048486C90380FFE00B85A
17E094C7FC373E7DBD40>66 D<DB3FF01306912603FFFE130E020F9038FF801E913A3FF0
07E03E9139FF8000F8D903FEC7EA7C7ED907F8EC1EFE4948140FD93FE014074948140349
5A91C812014848150012034848167E5B000F173EA24848161EA2123F5B180E127FA34916
0012FFAC127F7F180EA2123FA27F001F171E181C6C7EA20007173C6D16386C6C16780001
17706C6C16F06EEC01E06D6C15C06D6C1403D90FF0EC07806D6CEC1F00D903FE143E9026
00FF8013F891393FF007F0020FB512C0020391C7FC9138003FF037427BBF42>I<B91280
A300019038C000036C6C48EB007FEF1FC0170F1707A21703A31701A4EF00E0A21638A318
00A31678A216F81501150791B5FCA3EC8007150115001678A21638A693C8FCAF3801FFE0
B612F0A3333E7DBD3B>70 D<B600C090387FFFFCA3000101E0C7000F138026007F809138
07FE0018F818E0604D5A4DC7FC173E5F5F4C5A4C5A4C5A4C5A4CC8FC163E5E5E4B5A4B5A
ED07804B7E151F4B7E4B7E15FF913881EFF8913883C7FCEC878791388F03FE91389E01FF
14BCDAF8007F4A6D7E5C4A6D7E4A6D7EA2707E707EA2707E707EA2707F717E84173F717E
717EA2717E848419802601FFE04A13C0B600C090B6FCA3403E7DBD47>75
D<B612F8A3000101E0C9FC38007F80B3B0EF0380A517071800A45FA35FA25F5F5F4C5A16
0748486C133FB8FCA3313E7DBD39>I<B500C093383FFFF0A300016D93387FF800D8007F
18E0D977F016EFA3D973F8ED01CFA2D971FCED038FA3D970FEED070FA26E150E80A26E6C
141CA36E6C1438A26E6C1470A36E6C14E0A26E6CEB01C0A36E6CEB0380A36E6CEB0700A2
037F130EA36F6C5AA26F6C5AA36F6C5AA25FED07F0A2923803F9C0A36FB45AA26F90C7FC
A213F8486C147ED807FFEF3FF8B500F8013C011FB512F0A34C3E7DBD53>I<B56C91B512
F88080D8007F030713006EEC01FC6E6E5A1870EB77FCEB73FEA2EB71FF01707FA26E7E6E
7EA26E7E6E7EA26E7E6E7EA26E7E6E7FA26F7E6F7EA26F7E6F7EA26F7E6F7EA26F7E6F13
80A2EE7FC0EE3FE0A2EE1FF0EE0FF8A2EE07FCEE03FEA2EE01FF7013F0A2177F173FA217
1F170FA2170701F81503487ED807FF1501B500F81400A218703D3E7DBD44>I<B712C016
FCEEFF800001D9C00013E06C6C48EB1FF0EE07FCEE01FE707E84717EA2717EA284A76017
7F606017FF95C7FCEE01FCEE07F8EE1FE0EEFF8091B500FCC8FC16F091388001FCED003F
EE1FC0707E707E83160383160183A383A484A4F0C004190EA28218E0057F131E2601FFE0
161CB600C0EB3FF094381FF83805071370CA3801FFE09438003F803F407DBD43>82
D<B600C090B512F8A3000101E0C70007130026007F80EC01FC715A1870B3B3A4013F16F0
6E5DA21701011F5E80010F15036E4A5A010793C7FC6D6C5C6D6C141E6D6C5C027F14F86E
6C485A91390FF00FE00203B51280020049C8FCED1FF03D407DBD44>85
D<EB0FF8EBFFFE3903F01F8039078007E0000F6D7E9038E001F8D81FF07F6E7EA3157F6C
5AEA0380C8FCA4EC1FFF0103B5FC90381FF87FEB7F803801FC00EA07F8EA0FE0485A485A
A248C7FCEE038012FEA315FFA3007F5BEC03BF3B3F80071F8700261FC00E13CF3A07F03C
0FFE3A01FFF807FC3A003FC001F0292A7DA82D>97 D<EA01FC12FFA3120712031201B1EC
03FC91381FFF8091387C07E09039FDE001F09039FFC000FC4A137E91C77E49158049141F
17C0EE0FE0A217F0A2160717F8AA17F0A2160FA217E0161F17C06D1580EE3F006D5C6E13
FE9039F3C001F89039F1E003F09039E0780FC09026C03FFFC7FCC7EA07F82D407EBE33>
I<49B4FC010F13E090383F00F8017C131E4848131F4848137F0007ECFF80485A5B121FA2
4848EB7F00151C007F91C7FCA290C9FC5AAB6C7EA3003FEC01C07F001F140316806C6C13
076C6C14000003140E6C6C131E6C6C137890383F01F090380FFFC0D901FEC7FC222A7DA8
28>I<ED01FC15FFA3150715031501B114FF010713E190381F80F990387E003D49131FD8
03F81307485A49130348481301121F123F5B127FA290C7FCA25AAA7E7FA2123FA26C7E00
0F14037F000714076C6C497E6C6C497ED8007C017913F890383F01F190380FFFC1903A01
FE01FC002D407DBE33>I<EB01FE90380FFFC090383F03F09038FC01F848486C7E484813
7E48487F000F158049131F001F15C04848130FA2127F16E090C7FCA25AA290B6FCA290C9
FCA67EA27F123F16E06C7E1501000F15C06C6C13036DEB07806C6C1400C66C131E017E5B
90381F80F8903807FFE0010090C7FC232A7EA828>I<EC1FC0EC7FF8903801F83C903807
E07E90380FC0FFEB1FC1EB3F811401137FEC00FE01FE137C1500AEB6FCA3C648C7FCB3AE
487E007F13FFA320407EBF1C>I<167C903903F801FF903A1FFF078F8090397E0FDE1F90
38F803F83803F001A23B07E000FC0600000F6EC7FC49137E001F147FA8000F147E6D13FE
00075C6C6C485AA23901F803E03903FE0FC026071FFFC8FCEB03F80006CAFC120EA3120F
A27F7F6CB512E015FE6C6E7E6C15E06C810003813A0FC0001FFC48C7EA01FE003E140048
157E825A82A46C5D007C153E007E157E6C5D6C6C495A6C6C495AD803F0EB0FC0D800FE01
7FC7FC90383FFFFC010313C0293D7EA82D>I<EA01FC12FFA3120712031201B1EC01FE91
3807FFC091381E07E091387803F09138E001F8D9FDC07F148001FF6D7E91C7FCA25BA25B
B3A6486C497EB5D8F87F13FCA32E3F7DBE33>I<EA01E0EA07F8A2487EA46C5AA2EA01E0
C8FCACEA01FC127FA3120712031201B3AC487EB512F0A3143E7DBD1A>I<EA01FC12FFA3
120712031201B292B51280A392383FFC0016E0168093C7FC153C5D5D4A5AEC07C04A5A4A
C8FC143E147F4A7E13FD9038FFDFC0EC9FE0140F496C7E01FC7F496C7E1401816E7E8182
6F7E151F826F7EA282486C14FEB539F07FFFE0A32B3F7EBE30>107
D<EA01FC12FFA3120712031201B3B3B1487EB512F8A3153F7DBE1A>I<2701F801FE14FF
00FF902707FFC00313E0913B1E07E00F03F0913B7803F03C01F80007903BE001F87000FC
2603F9C06D487F000101805C01FBD900FF147F91C75B13FF4992C7FCA2495CB3A6486C49
6CECFF80B5D8F87FD9FC3F13FEA347287DA74C>I<3901F801FE00FF903807FFC091381E
07E091387803F000079038E001F82603F9C07F0001138001FB6D7E91C7FC13FF5BA25BB3
A6486C497EB5D8F87F13FCA32E287DA733>I<14FF010713E090381F81F890387E007E01
F8131F4848EB0F804848EB07C04848EB03E0000F15F04848EB01F8A2003F15FCA248C812
FEA44815FFA96C15FEA36C6CEB01FCA3001F15F86C6CEB03F0A26C6CEB07E06C6CEB0FC0
6C6CEB1F80D8007EEB7E0090383F81FC90380FFFF0010090C7FC282A7EA82D>I<3901F8
07E000FFEB1FF8EC787CECE1FE3807F9C100031381EA01FB1401EC00FC01FF1330491300
A35BB3A5487EB512FEA31F287EA724>114 D<90383FC0603901FFF8E03807C03F381F00
0F003E1307003C1303127C0078130112F81400A27E7E7E6D1300EA7FF8EBFFC06C13F86C
13FE6C7F6C1480000114C0D8003F13E0010313F0EB001FEC0FF800E01303A214017E1400
A27E15F07E14016C14E06CEB03C0903880078039F3E01F0038E0FFFC38C01FE01D2A7DA8
24>I<131CA6133CA4137CA213FCA2120112031207001FB512C0B6FCA2D801FCC7FCB3A2
15E0A912009038FE01C0A2EB7F03013F138090381F8700EB07FEEB01F81B397EB723>I<
D801FC14FE00FF147FA3000714030003140100011400B3A51501A31503120015076DEB06
FF017E010E13806D4913FC90381FC078903807FFE00100903880FE002E297DA733>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ft cmmi10 10 1
/Ft 1 94 df<1460A5120CAC146E147EEB03FE131F13FF120F123FB512F814E0EBFE6013
F01380EAFC0012EC120CB3A4146E147EEB03FE131F13FF120F123FB512F814E0EBFE6013
F01380EAFC0012EC120CA61400A5174E7CBB20>93 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fu cmr12 14.4 17
/Fu 17 122 df<EE03804C7EA34C7EA34C7EA34C7EA34C7EA24C7E16E7A203017F16C3A2
0303801681A2DB07017F82A2030E80177FA24B80173FA24B6D7EA20378800370130FA203
F0804B1307A20201814B7FA24A488183A24AC78083A2020E82187FA24A6F7E021FB7FC4A
82A30278C8EA1FFC0270150FA202F0824A1507A249488284A249488384A249CA7FA24984
010E177FA2011E84193F133E017F8448486C4C7E000F01E04B487EB500FE037FEBFFFEA4
4F557CD458>65 D<DC1FFC14034BB500C01307030F02F0130F037F14FC912801FFF800FF
131F02070180EB1FC04A48C73807E03FDA3FF8913801F07FDA7FE0EC00F8902601FF80ED
3CFF4990C97E494882494882495A4948824948825C01FF834849177F91CBFC48193F485A
A24848181FA2121F49180FA2123FA2491807127FA31A005B12FFAE127F7FA31A07123F7F
A2121FA26D180F000F190EA26C7E1A1E6C6C181C6C193C806C6D1778137F6E17F06D6CEE
01E06D7E6D6CEE03C06D6CEE07806D6CEE0F006D6D151E9026007FE0157CDA3FF85DDA0F
FEEC03F06E6C6CEB0FE0020101F8EBFF806E6CB548C7FC030F14F8030114E09226001FFE
C8FC48567AD355>67 D<B500FC95B512FCA36E5FD8007FF2F800D93DFF943803BFF0011D
62A2011C6DEE073FA36E6C160EA36E6C161CA26E6C1638A36E6C1670A36E6C16E0A36E6C
ED01C0A26E6CED0380A36E6DEC0700A36F6C140EA36F6C5CA26F6C5CA36F6C5CA36F6C5C
A26F6C495AA36F6C495AA36F6D48C7FCA393387FC00EA2706C5AA3706C5AA3706C5AA370
6C5AA270B45AA3705BA3013E6E90C8FC137F496C4E7E000701F0027E4B7EB66C4BB612FC
173CA35E527AD16B>77 D<ECFFC0010F13F8013F13FE9039FF00FF80D801F0EB3FE0D803
C0EB0FF0486C6D7E01F86D7E000F816D13016F7EA3707E6C5AEA01E0C9FCA6ED3FFF020F
B5FC9138FFFC7F01071300EB1FF0EB7FC04848C7FCEA03FC485A485A485A123F5B485A18
7012FF90C8FCA216FFA35D6D14BF007F14036DEB073F6C6C90390F1FC0E06C6C131E6C6C
90393C0FE1C02707FE01F013FF0001B5486C13806C6C90398003FE00D907FCC712F83436
7BB43B>97 D<EB7F80B5FCA41203C6FC137FB3A6ED07FC92387FFF800281B512E0913987
F00FF891398F8001FC029EC7B4FC02BC6E7E02F86E7E4A6E7E4A6E7E4A1407844A6E7EA2
841701A284A283A21980AB19005FA360A24D5AA24D5A804D5A6E5D6E4A5AD97E784A5A6E
4AC7FCD97C1EEB01FE6E495A903A7807E01FF00201B512C0902670007F90C8FC90C7EA0F
F839547DD241>I<EC0FFE91387FFFE049B512F8903907F801FE90391FE0001FD93F80EB
078049C7EA0FC001FE143F484815E00003157F485A485AA2485AEE3FC0003FED0F004991
C7FCA2127FA35B12FFAB127F7FA3123F6D1570121F6D15F0000F16E06D140112076C6CEC
03C06D15806C6C14076C6DEB0F00D93FC0131E6D6C137C903907FC03F06DB55AD9007F13
80DA0FF8C7FC2C367CB434>I<17FF4BB5FCA4ED0007160182B3A6EC0FF8EC7FFF49B512
E0903907FC03F090391FE0007C49487F49C7120F01FE80484880485A000781484880A248
5AA2485AA2127FA35B12FFAB127FA27FA2123FA27F121FA26C6C5C00075D7F6C6C5C6C6C
5C6C6C021E7F6D6C017C13E0D91FC049EBFF8090390FF807E00103B512800100495ADA1F
F091C7FC39547CD241>I<EC0FF891B5FC010314C090390FF80FF090391FC003FC90397F
8001FE49C77E4848EC7F804848143F49EC1FC0485A000FED0FE05B001F16F01607485AA2
007F16F8A25B160312FF90B7FCA30180C9FCA8127F7FA2123FA26D1538121F17786C6C15
70000716F06D15E06C6C14016C6CEC03C06C6C15806D6C130F6D6CEB1F00D90FF0133C90
3907FE01F80101B512E06D6C1380DA07FCC7FC2D367DB434>I<157F913803FFE0020F13
F091383FC0F891387F01FC903901FE03FE903803FC0714F81307EB0FF0A290391FE003FC
ED01F892C7FC495AB3B612FEA426003FC0C7FCB3B3A580EBFFF0007FEBFFF8A427547DD3
24>I<1378EA01FE487E487FA66C90C7FC6C5AEA007890C8FCB0EB7F80B5FCA41203C6FC
137FB3B3A43801FFE0B61280A419507CCF21>105 D<01FFEB07FCB590383FFF8092B512
E0913901F00FF8913903C007FC000349C66C7EC6010E13016D486D7E5C143002706E7E14
6014E05CA35CB3AD2601FFE0903801FFE0B600C0B612C0A43A347CB341>110
D<EC0FFC91387FFF8049B512E0903907F807F890391FE001FE90393F80007F017EC7EA1F
80496E7E48486E7E00038248486E7EA248486E7EA248486E7EA2003F82A24848ED7F80A4
00FF17C0AB007F1780A26D15FFA2003F1700A2001F5E6D1401000F5E6D140300075E6C6C
4A5A6C6C4A5AA2D8007FEC3F806D6C49C7FC90391FE001FE903907F807F86DB55AD9007F
1380DA0FFCC8FC32367CB43B>I<01FFEB1F80B5EB7FF0913801FFF8913803E1FC913807
83FE0003EB0F07C6131EEB7F1C1438143091387003FC91386000F0160014E05CA45CB3AA
8048487EB612F0A427347DB32E>114 D<D907FE13C090387FFF8148B512E33907F803FF
390FC0007F4848133F48C7121F003E140F007E1407127C00FC1403A315017EA27E7F6C6C
90C7FC13F013FF6C13F86CEBFF806C14E06C14F86C14FEC680013F1480010714C0D9003F
13E014039138007FF0151F00E0140FED07F8A26C1403A215017EA36C15F0A26C14036C15
E015076DEB0FC06DEB1F80D8FDF0EB3F0039F8FC01FE39F07FFFF8D8E01F13E0D8C00390
C7FC25367CB42E>I<EB01C0A71303A41307A3130FA2131FA2133F137F13FF5A5A001F90
B512E0B7FCA326003FC0C7FCB3A71638AC6E1378011F1470A26D6C13F016E0903807F801
903903FC03C0903901FE07806DB51200EC3FFCEC07F0254B7EC92E>I<D97F80EC7F80B5
91B5FCA400031503C61500017F157FB3AC17FFA35EA3013F5C6EEB077FA2011F020E7F6D
6C011C13F06E0178EBFFC0903903FC01F06DB512E06D6C1380912607FC00EB80003A357C
B341>I<B60103B51280A4000301F09039007FF800C601C0EC3FE0017FED1F8095C7FC13
3F6E141E131F171C6E143C010F15388001075DA26E14F001035D8001014A5AA26E13036D
5D1580027F49C8FCA26F5A023F130E15E0021F5BA2EDF03C020F133815F802075BA2EDFC
F002035B15FE6E6C5AA36E5BA26FC9FCA3153EA2151CA2153C153815781570A215F05D14
015DA2003E495A127F486C48CAFCA2140E141E495A6C5B007C5B383F03E06CB45A00075B
D801FCCBFC394B7EB23E>121 D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize

%%EndSetup
%%Page: 1 1
1 0 bop Black Black Black Black Black 886 103 a Fu(Mo)s(dern)39
b(Concurrency)e(Abstractions)f(for)i(C)2959 60 y Ft(])793
331 y Fs(Nic)m(k)30 b(Ben)m(ton)335 b(Luca)31 b(Cardelli)330
b(C)m(\023)-43 b(edric)31 b(F)-8 b(ournet)p Black Black
1562 521 a(Microsoft)30 b(Researc)m(h)1627 634 y(Cam)m(bridge,)g(UK)
1155 728 y Fr(f)p Fq(nick,luca,fournet)p Fr(g)p Fq(@microsoft.c)o(om)p
Black -152 1276 a Fp(Abstract)-152 1433 y Fo(P)n(olyphonic)c(C)301
1402 y Fn(])357 1433 y Fo(is)h(an)f(extension)g(of)h(the)e(C)1157
1402 y Fn(])1213 1433 y Fo(language)i(with)g(new)-152
1516 y(async)n(hronous)43 b(concurrency)f(constructs,)47
b(based)42 b(on)h(the)f(Join)-152 1599 y(Calculus.)68
b(W)-6 b(e)35 b(describ)r(e)i(the)f(design)g(and)g(implemen)n(tation)f
(of)-152 1682 y(the)e(language)h(and)e(giv)n(e)h(examples)f(of)i(its)f
(use)f(in)h(addressing)g(a)-152 1765 y(range)27 b(of)f(concurren)n(t)f
(programming)g(problems.)-152 2084 y Fp(1)89 b(In)n(tro)r(duction)-152
2241 y(1.1)g(Languages)29 b(and)h(Concurrency)-152 2373
y Fo(Concurrency)21 b(is)g(an)g(imp)r(ortan)n(t)f(factor)i(in)f(the)f
(b)r(eha)n(vior)h(and)f(p)r(er-)-152 2456 y(formance)k(of)g(mo)r(dern)e
(co)r(de:)33 b(concurren)n(t)23 b(programs)g(are)h(di\016cult)-152
2539 y(to)33 b(design,)i(write,)g(reason)e(ab)r(out,)h(debug,)g(and)e
(tune.)54 b(Concur-)-152 2622 y(rency)25 b(can)g(signi\014can)n(tly)g
(a\013ect)h(the)e(meaning)h(of)h(virtually)f(ev)n(ery)-152
2705 y(other)k(construct)g(in)g(the)g(language)h(\(b)r(eginning)g(with)
f(the)g(atom-)-152 2788 y(icit)n(y)38 b(of)h(assignmen)n(t\),)i(and)d
(can)g(a\013ect)g(the)g(abilit)n(y)g(to)h(in)n(v)n(ok)n(e)-152
2871 y(libraries.)53 b(Y)-6 b(et,)33 b(most)d(p)r(opular)i(programming)
f(languages)i(treat)-152 2954 y(concurrency)22 b(not)g(as)h(a)g
(language)g(feature,)h(but)e(as)g(a)h(collection)h(of)-152
3037 y(external)i(libraries)h(that)f(are)g(often)g(undersp)r
(eci\014ed.)-40 3120 y(Considerable)h(atten)n(tion)f(has)f(b)r(een)g
(giv)n(en,)h(after)g(the)f(fact,)i(to)-152 3203 y(the)32
b(sp)r(eci\014cation)h(of)f(imp)r(ortan)n(t)f(concurrency)h(libraries)h
([4)q(,)f(12)q(,)-152 3286 y(11)q(,)h(7])f(to)h(the)f(p)r(oin)n(t)g
(where)g(one)h(can)f(usually)g(determine)f(what)-152
3369 y(their)j(b)r(eha)n(vior)f(should)g(b)r(e)h(under)e(an)n(y)h
(implemen)n(tation.)56 b(Y)-6 b(et,)-152 3452 y(ev)n(en)24
b(when)g(the)f(concurrency)h(libraries)h(are)g(satisfactorily)i(sp)r
(eci-)-152 3535 y(\014ed,)c(the)f(simple)h(fact)g(that)f(they)g(are)h
(libraries,)i(and)d(not)h(features)-152 3618 y(of)k(the)e(language,)i
(has)f(undesirable)g(consequences.)-40 3701 y(Man)n(y)17
b(features)h(can)g(b)r(e)f(pro)n(vided,)h(in)f(principle,)j(either)d
(as)h(lan-)-152 3784 y(guage)26 b(features)f(or)g(as)g(libraries:)35
b(t)n(ypical)25 b(examples)f(are)h(memory)-152 3867 y(managemen)n(t)d
(and)h(exceptions.)34 b(The)24 b(adv)l(an)n(tage)g(of)g(ha)n(ving)f
(suc)n(h)-152 3950 y(features)28 b(\\in)f(the)f(language")i(is)f(that)f
(the)g(compiler)h(can)f(analyze)-152 4033 y(them,)e(and)g(can)g
(therefore)h(pro)r(duce)g(b)r(etter)f(co)r(de)g(and)g(w)n(arn)h(pro-)
-152 4116 y(grammers)30 b(of)h(p)r(oten)n(tial)g(and)f(actual)g
(problems.)48 b(In)30 b(particular,)-152 4199 y(the)18
b(compiler)g(can)g(c)n(hec)n(k)g(for)h(syn)n(tactically)g(em)n(b)r
(edded)d(in)n(v)l(arian)n(ts)-152 4282 y(whic)n(h)32
b(w)n(ould)h(b)r(e)f(di\016cult)g(to)g(extract)g(from)g(a)g(collection)
i(of)f(li-)-152 4365 y(brary)24 b(calls.)35 b(Moreo)n(v)n(er,)25
b(programmers)e(can)h(more)g(reliably)g(state)-152 4448
y(their)d(in)n(ten)n(tions)g(through)g(a)g(clear)i(syn)n(tax,)e(and)g
(to)r(ols)h(other)f(than)-152 4531 y(the)d(compiler)f(can)h(more)f
(easily)i(determine)e(the)g(programmers')g(in-)-152 4614
y(ten)n(tions.)33 b(Domain)19 b(Sp)r(eci\014c)g(Languages)h([25)r(,)f
(16)q(])h(are)g(an)f(extreme)-152 4697 y(example)29 b(of)i(this)f
(linguistic)h(approac)n(h:)43 b(new)29 b(ad-ho)r(c)h(languages)-152
4780 y(are)i(routinely)f(prop)r(osed)h(not)f(to)g(replace)h
(general-purp)r(ose)g(lan-)-152 4863 y(guage,)25 b(but)e(to)g
(facilitate)j(domain-sp)r(eci\014c)d(co)r(de)g(analysis)i(b)n(y)d(the)
-152 4946 y(simple)30 b(fact)g(of)g(expressing)g(domain-related)f
(features)i(as)f(primi-)-152 5029 y(tiv)n(e)c(language)h(constructs.)
-40 5112 y(W)-6 b(e)31 b(b)r(eliev)n(e)h(that)f(concurrency)g(should)g
(b)r(e)g(a)h(language)g(fea-)-152 5195 y(ture)23 b(and)g(a)g(part)g(of)
h(language)g(sp)r(eci\014cations.)35 b(Serious)24 b(attempts)p
Black Black 2040 1276 a(in)e(this)g(direction)h(w)n(ere)g(made)e(b)r
(eginning)h(in)h(the)e(1970's)k(with)d(the)2040 1359
y(concept)d(of)g(monitors)g([14)q(])g(and)f(the)g(Occam)g(language)j
([21)q(])e(\(based)2040 1442 y(on)26 b(Hoare's)h(Comm)n(unicating)f
(Sequen)n(tial)f(Pro)r(cesses)j([15)q(]\).)36 b(The)2040
1525 y(general)e(notion)f(of)g(monitors)g(has)g(b)r(ecome)f(v)n(ery)g
(p)r(opular,)j(par-)2040 1608 y(ticularly)30 b(in)f(its)g(curren)n(t)g
(ob)t(ject-orien)n(ted)h(form)f(of)h(threads)f(and)2040
1691 y(ob)t(ject-b)r(ound)c(m)n(utexes,)g(but)g(it)h(has)g(b)r(een)f
(pro)n(vided)g(at)h(most)f(as)2040 1774 y(a)g(v)n(eneer)f(of)h(syn)n
(tactic)f(sugar)h(for)g(optionally)g(lo)r(c)n(king)g(ob)t(jects)h(on)
2040 1857 y(metho)r(d)f(calls.)2152 1940 y(Man)n(y)37
b(things)h(ha)n(v)n(e)f(c)n(hanged)g(in)h(concurrency)f(since)h(mon-)
2040 2023 y(itors)g(w)n(ere)f(in)n(tro)r(duced.)68 b(Comm)n(unication)
36 b(has)i(b)r(ecome)e(more)2040 2107 y(async)n(hronous,)24
b(and)e(concurren)n(t)g(computations)g(ha)n(v)n(e)g(to)h(b)r(e)f(\\or-)
2040 2190 y(c)n(hestrated")31 b(on)f(a)h(larger)g(scale.)50
b(The)30 b(concern)h(is)f(not)h(as)f(m)n(uc)n(h)2040
2273 y(in)35 b(the)f(e\016cien)n(t)g(implemen)n(tation)f(and)h(use)h
(of)g(lo)r(c)n(ks)g(on)g(a)g(sin-)2040 2356 y(gle)24
b(pro)r(cessor)g(or)f(m)n(ultipro)r(cessor,)h(but)e(on)h(the)f(abilit)n
(y)h(to)g(handle)2040 2439 y(async)n(hronous)29 b(ev)n(en)n(ts)e
(without)i(unnecessarily)g(blo)r(c)n(king)g(clien)n(ts)2040
2522 y(for)g(long)f(p)r(erio)r(ds,)h(and)e(without)h(deadlo)r(c)n
(king.)41 b(In)27 b(other)h(w)n(ords,)2040 2605 y(the)e(concern)h(is)g
(shifting)h(from)e(shared-memory)e(concurrency)i(to)2040
2688 y(message/ev)n(en)n(t-orien)n(ted)g(concurrency)-6
b(.)2152 2771 y(These)58 b(new)g(requiremen)n(ts)e(deserv)n(e)h
(programming)g(con-)2040 2854 y(structs)28 b(that)g(can)g(handle)g(w)n
(ell)h(async)n(hronous)g(comm)n(unications)2040 2937
y(and)e(that)g(are)g(not)g(shac)n(kled)g(to)g(the)g(shared-memory)e
(approac)n(h.)2040 3020 y(Despite)h(the)f(dev)n(elopmen)n(t)e(of)k(a)e
(large)i(collection)g(of)f(design)g(pat-)2040 3103 y(terns)f([20)q(])h
(and)f(of)h(man)n(y)e(concurren)n(t)h(languages)i([2,)f(24)q(,)f(1)q
(],)h(only)2040 3186 y(monitors)36 b(ha)n(v)n(e)g(gained)h(widespread)g
(acceptance)g(as)g(program-)2040 3269 y(ming)25 b(constructs.)2152
3352 y(An)k(in)n(teresting)h(new)g(linguistic)i(approac)n(h)d(has)i
(emerged)e(re-)2040 3435 y(cen)n(tly)i(with)g(F)-6 b(ournet)30
b(and)h(Gon)n(thier's)h(Join)g(Calculus)g([9)q(,)f(8],)i(a)2040
3518 y(pro)r(cess)j(calculus)g(w)n(ell-suited)f(to)g(direct)g(implemen)
n(tation)e(in)i(a)2040 3601 y(distributed)g(setting.)65
b(Other)35 b(languages,)40 b(suc)n(h)c(as)g(JoCaml)h([6])2040
3684 y(and)30 b(F)-6 b(unnel)29 b([23)q(],)j(com)n(bine)d(similar)i
(ideas)g(with)f(the)g(functional)2040 3767 y(programming)19
b(mo)r(del.)32 b(Here)20 b(w)n(e)g(prop)r(ose)h(an)f(adaptation)g(of)h
(Join)2040 3850 y(Calculus)31 b(ideas)f(to)g(an)f(ob)t(ject-orien)n
(ted)h(language)h(that)e(already)2040 3933 y(has)d(an)g(existing)g
(threads-and-lo)r(c)n(ks)f(concurrency)g(mo)r(del.)2040
4121 y Fp(1.2)88 b(Async)n(hronous)30 b(Programming)2040
4252 y Fo(Async)n(hronous)g(ev)n(en)n(ts)f(and)h(message)h(passing)g
(are)g(increasingly)2040 4335 y(used)g(at)g(all)h(lev)n(els)f(of)h
(soft)n(w)n(are)h(systems.)49 b(A)n(t)30 b(the)h(lo)n(w)n(est)h(lev)n
(el,)2040 4418 y(device)k(driv)n(ers)f(ha)n(v)n(e)g(to)h(resp)r(ond)g
(promptly)e(to)i(async)n(hronous)2040 4501 y(device)23
b(ev)n(en)n(ts,)f(while)i(b)r(eing)f(parsimonious)g(on)f(resource)i
(use.)33 b(A)n(t)2040 4584 y(the)e(Graphical)h(User)f(In)n(terface)g
(lev)n(el,)i(co)r(de)f(and)e(programming)2040 4667 y(mo)r(dels)19
b(are)g(notoriously)h(complex)e(b)r(ecause)h(of)h(the)f(async)n
(hronous)2040 4750 y(nature)33 b(of)i(user)e(ev)n(en)n(ts;)k(at)d(the)f
(same)h(time,)h(users)f(hate)f(b)r(eing)2040 4833 y(blo)r(c)n(k)n(ed)c
(unnecessarily)-6 b(.)44 b(A)n(t)29 b(the)f(wide-area)i(net)n(w)n(ork)f
(lev)n(el,)h(e.g.)2040 4916 y(in)35 b(collab)r(orativ)n(e)j
(applications,)h(distributed)c(w)n(ork\015o)n(w)h(or)f(w)n(eb)2040
4999 y(services,)22 b(w)n(e)e(are)g(no)n(w)g(exp)r(eriencing)g(similar)
g(problems)f(and)h(com-)2040 5082 y(plexit)n(y)k(b)r(ecause)i(of)f(the)
g(async)n(hronous)g(nature)f(and)h(latencies)h(of)2040
5165 y(global)h(comm)n(unication.)p Black Black eop
%%Page: 2 2
2 1 bop Black Black -40 -69 a Fo(All)30 b(these)g(areas)g(naturally)g
(lead)g(to)g(situations)g(where)g(there)-152 14 y(are)44
b(man)n(y)d(async)n(hronous)h(messages)i(to)f(b)r(e)f(handled)g
(concur-)-152 97 y(ren)n(tly)-6 b(,)34 b(and)e(where)h(man)n(y)e
(threads)i(are)g(used)g(to)f(handle)h(them.)-152 180
y(Threads)38 b(are)f(still)g(an)g(exp)r(ensiv)n(e)f(resource)h(on)g
(most)f(systems.)-152 263 y(Ho)n(w)n(ev)n(er,)27 b(if)h(w)n(e)f(can)g
(somewhat)g(hide)f(the)g(use)h(of)h(messages)f(and)-152
346 y(threads)k(b)r(ehind)f(a)h(language)h(mec)n(hanism,)f(then)f(man)n
(y)f(options)-152 429 y(b)r(ecome)e(p)r(ossible.)41 b(A)26
b(compiler)i(ma)n(y)e(transform)h(some)g(patterns)-152
512 y(of)44 b(concurrency)e(in)n(to)h(state)g(mac)n(hines,)k(optimize)c
(the)f(use)h(of)-152 596 y(queues,)34 b(use)f(ligh)n(t)n(w)n(eigh)n(t)g
(threads)f(when)h(p)r(ossible,)i(a)n(v)n(oid)e(fork-)-152
679 y(ing)d(threads)f(when)h(not)f(necessary)-6 b(,)31
b(and)e(use)g(thread)h(p)r(o)r(ols.)47 b(All)-152 762
y(this)29 b(is)f(really)h(p)r(ossible)g(only)f(if)h(one)f(has)h(a)f
(handle)g(on)g(the)g(sp)r(ec-)-152 845 y(trum)22 b(of)j(\\things)f
(that)f(can)h(happ)r(en":)33 b(this)23 b(handle)h(can)f(b)r(e)h(giv)n
(en)-152 928 y(b)n(y)33 b(a)h(syn)n(tax)f(for)i(concurren)n(t)e(op)r
(erations)i(that)f(can)g(b)r(oth)f(hide)-152 1011 y(and)26
b(enable)g(m)n(ultiple)e(implemen)n(tation)h(tec)n(hniques.)-40
1094 y(Therefore,)49 b(w)n(e)44 b(aim)e(to)h(promote)g(abstractions)h
(for)f(asyn-)-152 1177 y(c)n(hronous)35 b(programming)f(that)g(are)h(b)
r(oth)g(high-lev)n(el,)i(from)d(the)-152 1260 y(p)r(oin)n(t)h(of)i
(view)e(of)h(a)g(programmer,)h(and)e(that)g(enable)h(m)n(ultiple)-152
1343 y(lo)n(w-lev)n(el)g(optimizations,)j(from)c(the)f(p)r(oin)n(t)h
(of)h(view)f(of)h(a)g(com-)-152 1426 y(piler)24 b(and)f(run-time)f
(systems.)33 b(W)-6 b(e)23 b(prop)r(ose)h(an)f(extension)g(of)h(the)
-152 1509 y(C)-97 1477 y Fn(])-44 1509 y Fo(language)h(with)e(mo)r
(dern)f(concurrency)g(abstraction)i(for)g(asyn-)-152
1592 y(c)n(hronous)31 b(programming.)49 b(In)29 b(tune)h(with)h(the)f
(m)n(usical)h(spirit)g(of)-152 1675 y(C)-97 1643 y Fn(])-44
1675 y Fo(and)23 b(with)g(the)g(\\orc)n(hestration")i(of)f(concurren)n
(t)e(activities,)j(w)n(e)-152 1758 y(call)i(this)f(language)h(P)n
(olyphonic)f(C)912 1726 y Fn(])942 1758 y Fo(.)963 1726
y Fm(1)-152 1945 y Fp(1.3)89 b(C)114 1914 y Fn(])173
1945 y Fp(and)29 b(.NET)-152 2077 y Fo(C)-97 2045 y Fn(])-47
2077 y Fo(is)21 b(a)f(mo)r(dern,)h(t)n(yp)r(e-safe,)g(ob)t(ject-orien)n
(ted)g(programming)e(lan-)-152 2160 y(guage)g(recen)n(tly)e(in)n(tro)r
(duced)g(b)n(y)f(Microsoft)k(as)e(part)f(of)h(Visual)g(Stu-)-152
2243 y(dio.NET)27 b([13)q(].)36 b(C)394 2211 y Fn(])450
2243 y Fo(programs)26 b(run)f(on)h(top)f(of)i(the)e(.NET)i(F)-6
b(rame-)-152 2326 y(w)n(ork,)27 b(whic)n(h)f(includes)g(a)g(m)n
(ultilanguage)g(execution)g(engine)g(and)-152 2409 y(a)g(ric)n(h)g
(collection)h(of)g(class)g(libraries.)-40 2492 y(The)21
b(.NET)g(execution)f(engine)h(pro)n(vides)f(a)h(m)n(ultithreaded)e(ex-)
-152 2575 y(ecution)38 b(en)n(vironmen)n(t)e(with)h(sync)n(hronization)
h(based)g(on)f(lo)r(c)n(ks)-152 2658 y(attac)n(hed)d(to)h(eac)n(h)f
(heap-allo)r(cated)i(ob)t(ject.)61 b(The)34 b(C)1482
2626 y Fn(])1546 2658 y Fo(language)-152 2741 y(includes)f(a)g
Fp(lo)r(c)n(k)g Fo(statemen)n(t,)h(whic)n(h)e(obtains)h(the)f(m)n(utex)
f(asso-)-152 2824 y(ciated)e(with)f(a)h(giv)n(en)f(ob)t(ject)h(during)f
(the)g(execution)g(of)h(a)f(blo)r(c)n(k.)-152 2907 y(In)c(addition,)h
(the)f(.NET)h(libraries)h(implemen)n(t)d(man)n(y)g(traditional)-152
2990 y(concurrency)e(con)n(trol)g(primitiv)n(es)g(suc)n(h)f(as)i
(semaphores,)g(m)n(utexes)-152 3073 y(and)37 b(reader/writer)i(lo)r(c)n
(ks,)i(as)d(w)n(ell)g(as)g(an)f(async)n(hronous)g(pro-)-152
3156 y(gramming)d(mo)r(del)h(based)f(on)h(delegates.)1119
3124 y Fm(2)1217 3156 y Fo(The)g(.NET)g(F)-6 b(rame-)-152
3239 y(w)n(ork)36 b(also)i(pro)n(vides)e(higher-lev)n(el)g
(infrastructure)g(for)h(building)-152 3322 y(distributed)30
b(applications)i(and)e(services,)j(suc)n(h)d(as)h(SO)n(AP-based)-152
3405 y(messaging)c(and)e(remote)g(metho)r(d)g(call.)-40
3488 y(The)44 b(concurrency)f(and)g(distribution)g(mec)n(hanisms)f(of)i
(the)-152 3571 y(.NET)35 b(F)-6 b(ramew)n(ork)35 b(are)g(p)r(o)n(w)n
(erful,)j(but)33 b(they)h(are)h(also)h(undeni-)-152 3654
y(ably)e(complex.)60 b(Quite)34 b(apart)h(from)f(the)g(b)r(ewildering)h
(arra)n(y)g(of)-152 3737 y(primitiv)n(es)18 b(whic)n(h)h(are)g(more)f
(or)h(less)g(`bak)n(ed)g(in')f(to)h(the)f(infrastruc-)-152
3820 y(ture,)33 b(there)f(is)g(something)g(of)g(a)g(mismatc)n(h)e(b)r
(et)n(w)n(een)i(the)f(1970s)-152 3903 y(mo)r(del)26 b(of)h(concurrency)
e(on)h(a)h(single)g(mac)n(hine)e(\(shared)h(memory)-6
b(,)-152 3986 y(threads,)20 b(sync)n(hronization)e(based)g(on)g(m)n
(utual)f(exclusion\))h(and)f(the)-152 4069 y(async)n(hronous,)31
b(message-based)g(st)n(yle)e(whic)n(h)h(one)g(uses)g(for)h(pro-)-152
4152 y(gramming)19 b(w)n(eb-based)g(applications)i(and)d(services.)34
b(C)1495 4120 y Fn(])1544 4152 y Fo(therefore)-152 4235
y(seems)22 b(an)g(ideal)h(testb)r(ed)f(for)g(our)g(ideas)h(on)f
(language)h(supp)r(ort)f(for)-152 4318 y(concurrency)j(in)h(mainstream)
f(languages.)-152 4514 y Fp(2)89 b(P)n(olyphonic)31 b(C)503
4482 y Fn(])562 4514 y Fp(Language)f(Ov)n(erview)-152
4671 y Fo(This)21 b(section)h(in)n(tro)r(duces)e(the)g(new)h
(constructs)g(in)f(P)n(olyphonic)h(C)1811 4639 y Fn(])-152
4754 y Fo(and)26 b(their)f(use)h(in)g(basic)g(concurren)n(t)f
(programming.)p Black -152 4814 797 4 v -65 4862 a Fl(1)-33
4888 y Fk(Polyphony)f Fj(is)17 b(m)n(usical)g(comp)r(osition)e(that)i
(uses)g(sim)n(ultaneous,)g(largely)-152 4954 y(indep)r(enden)n(t,)23
b(melo)r(dic)g(parts,)j(lines,)f(or)h(v)n(oices)f(\(Encarta)f(W)-5
b(orld)25 b(English)-152 5020 y(Dictionary)-5 b(,)21
b(Microsoft)g(Corp)r(oration,)h(2001\).)-65 5067 y Fl(2)-33
5092 y Fj(An)35 b(instance)d(of)j(a)f(delegate)f(class)h(encapsulates)e
(an)j(ob)t(ject)d(and)i(a)-152 5158 y(metho)r(d)24 b(on)h(that)f(ob)t
(ject)f(with)i(a)g(particular)f(signature.)36 b(So)25
b(a)g(delegate)f(is)-152 5225 y(more)c(than)f(a)h(C-st)n(yle)h
(function)d(p)r(oin)n(ter,)h(but)g(sligh)n(tly)h(less)g(than)f(a)h
(closure.)p Black Black Black 2040 -69 a Fp(2.1)88 b(The)29
b(Basic)h(Idea)2040 63 y Fo(T)-6 b(o)45 b(C)2227 31 y
Fn(])2257 63 y Fo('s)g(fairly)h(con)n(v)n(en)n(tional)f(ob)t
(ject-orien)n(ted)g(programming)2040 146 y(mo)r(del,)34
b(P)n(olyphonic)f(C)2758 114 y Fn(])2820 146 y Fo(adds)f(just)h(t)n(w)n
(o)g(new)f(concepts:)48 b Fi(Asyn-)2040 229 y(chr)l(onous)30
b(metho)l(ds)j Fo(and)25 b Fi(Chor)l(ds)p Fo(.)2040 416
y Fp(2.1.1)88 b(Async)n(hronous)30 b(Metho)r(ds)2040
548 y Fo(Con)n(v)n(en)n(tional)36 b(metho)r(ds)f(are)h(sync)n(hronous,)
i(in)d(the)h(sense)g(that)2040 631 y(the)29 b(caller)i(mak)n(es)d(no)i
(progress)g(un)n(til)f(the)g(callee)i(completes.)45 b(In)2040
714 y(P)n(olyphonic)31 b(C)2498 682 y Fn(])2528 714 y
Fo(,)h(if)f(a)g(metho)r(d)e(is)i(declared)g Fi(asynchr)l(onous)39
b Fo(then)2040 797 y(an)n(y)29 b(call)i(to)e(it)h(is)g(guaran)n(teed)g
(to)f(return)g(\(essen)n(tially\))i(immedi-)2040 880
y(ately)-6 b(.)36 b(Async)n(hronous)26 b(metho)r(ds)f(nev)n(er)g
(return)h(a)h(result)f(and)g(are)2040 963 y(declared)d(b)n(y)f(using)h
(the)f Fp(async)h Fo(k)n(eyw)n(ord)f(instead)h(of)h Fp(v)n(oid)p
Fo(.)34 b(Call-)2040 1046 y(ing)20 b(an)g(async)n(hronous)g(metho)r(d)f
(is)h(m)n(uc)n(h)e(lik)n(e)i(sending)g(a)h(message,)2040
1129 y(or)26 b(p)r(osting)g(an)g(ev)n(en)n(t.)2152 1212
y(Since)20 b(async)n(hronous)f(metho)r(ds)g(ha)n(v)n(e)f(to)i(return)f
(immediately)-6 b(,)2040 1295 y(the)25 b(b)r(eha)n(vior)h(of)h(a)f
(metho)r(d)e(suc)n(h)h(as)2132 1428 y Fp(async)h Fi(p)l(ostEvent)9
b Fo(\()p Fi(EventInfo)31 b(data)7 b Fo(\))26 b Fh(f)2202
1511 y Fo(//)32 b(large)41 b(metho)r(d)25 b(b)r(o)r(dy)2132
1594 y Fh(g)2040 1726 y Fo(is)30 b(prett)n(y)f(m)n(uc)n(h)f(the)i(only)
f(thing)h(it)g(could)g(b)r(e:)43 b(the)29 b(call)i(returns)2040
1809 y(immediately)c(and)i(`large)h(metho)r(d)e(b)r(o)r(dy')g(is)h(sc)n
(heduled)g(for)g(exe-)2040 1892 y(cution)k(in)f(a)h(di\013eren)n(t)f
(thread)h(\(either)f(a)h(new)g(one)g(spa)n(wned)f(to)2040
1975 y(service)22 b(this)g(call,)i(or)e(a)f(w)n(ork)n(er)h(from)g(some)
f(p)r(o)r(ol\).)34 b(Ho)n(w)n(ev)n(er,)22 b(this)2040
2069 y(kind)29 b(of)i(de\014nition)f(is)g(actually)h(rather)f(rare)g
(in)g(P)n(olyphonic)g(C)3981 2037 y Fn(])4011 2069 y
Fo(.)2040 2152 y(More)36 b(commonly)-6 b(,)35 b(async)n(hronous)g
(metho)r(ds)f(are)i(de\014ned)d(using)2040 2235 y(c)n(hords,)g(as)f
(describ)r(ed)g(b)r(elo)n(w,)i(and)d(do)g(not)g(necessarily)i(require)
2040 2318 y(new)26 b(threads.)2040 2505 y Fp(2.1.2)88
b(Chords)2040 2637 y Fo(A)37 b Fi(chor)l(d)47 b Fo(\(also)39
b(called)g(a)f(`sync)n(hronization)g(pattern',)j(or)d(`join)2040
2720 y(pattern'\))c(consists)h(of)f(a)h(header)e(and)h(a)g(b)r(o)r(dy)
-6 b(.)58 b(The)34 b(header)g(is)2040 2803 y(a)c(set)f(of)h(metho)r(d)e
(declarations)j(separated)f(b)n(y)e(&.)45 b(The)29 b(b)r(o)r(dy)g(is)
2040 2886 y(only)23 b(executed)f(once)h Fi(al)t(l)30
b Fo(the)22 b(metho)r(ds)g(in)g(the)h(header)g(ha)n(v)n(e)f(b)r(een)
2040 2969 y(called.)51 b(Metho)r(d)32 b(calls)g(are)f(implicitly)g
(queued)f(up)g(un)n(til/unless)2040 3052 y(there)c(is)g(a)g(matc)n
(hing)f(c)n(hord.)34 b(Consider)27 b(for)f(example)2132
3185 y Fp(class)32 b Fi(Bu\013er)i Fh(f)2201 3268 y Fp(string)28
b Fi(get)8 b Fo(\(\))25 b(&)g Fp(async)h Fi(put)8 b Fo(\()p
Fp(string)27 b Fi(s)6 b Fo(\))26 b Fh(f)2270 3351 y Fp(return)h
Fi(s)7 b Fo(;)2201 3434 y Fh(g)2132 3517 y(g)2040 3650
y Fo(The)21 b(co)r(de)g(ab)r(o)n(v)n(e)f(de\014nes)g(a)h(class)h
Fi(Bu\013er)29 b Fo(declaring)21 b(t)n(w)n(o)g(instance)2040
3733 y(metho)r(ds)27 b(whic)n(h)h(are)h(de\014ned)e(together)h(in)g(a)h
(single)g(c)n(hord.)41 b(The)2040 3816 y(\014rst)32 b(metho)r(d)g
Fp(string)27 b Fi(get)9 b Fo(\(\))32 b(is)h(a)g(sync)n(hronous)f(metho)
r(d)f(taking)2040 3899 y(no)d(argumen)n(ts)f(and)h(returning)f(a)i
Fp(string)q Fo(.)41 b(The)29 b(second)f(metho)r(d)2040
3982 y Fp(async)e Fi(put)8 b Fo(\()o Fp(string)28 b Fi(s)6
b Fo(\))26 b(is)h(async)n(hronous)f(\(so)g(returns)g(no)g(result\))2040
4065 y(and)f(tak)n(es)h(a)g Fp(string)h Fo(argumen)n(t.)2152
4148 y(If)38 b Fi(bu\013)54 b Fo(is)39 b(a)f(instance)h(of)f
Fi(Bu\013er)47 b Fo(and)38 b(one)g(calls)h(the)f(syn-)2040
4231 y(c)n(hronous)22 b(metho)r(d)e Fi(bu\013)i Fo(.)7
b Fi(get)13 b Fo(\(\))21 b(then)g(there)g(are)h(t)n(w)n(o)g(p)r
(ossibilities:)p Black 2126 4374 a Fh(\017)p Black 42
w Fo(If)46 b(there)f(has)g(previously)g(b)r(een)g(an)h(unmatc)n(hed)d
(call)j(to)2206 4457 y Fi(bu\013)23 b Fo(.)6 b Fi(put)i
Fo(\()p Fi(s)e Fo(\))39 b(\(for)h(some)e(string)i Fi(s)6
b Fo(\))39 b(then)g(there)f(is)i(no)n(w)f(a)2206 4540
y(matc)n(h,)18 b(so)g(the)f(p)r(ending)g Fi(put)8 b Fo(\()p
Fi(s)e Fo(\))17 b(is)h(de-queued)d(and)i(the)g(b)r(o)r(dy)2206
4623 y(of)i(the)e(c)n(hord)g(runs,)i(returning)f Fi(s)24
b Fo(to)18 b(the)f(caller)i(of)f Fi(bu\013)23 b Fo(.)6
b Fi(get)14 b Fo(\(\))o(.)p Black 2126 4765 a Fh(\017)p
Black 42 w Fo(If)23 b(there)f(are)h(no)g(previous)f(unmatc)n(hed)f
(calls)j(to)f Fi(bu\013)f Fo(.)7 b Fi(put)h Fo(\()p 3976
4765 24 4 v 32 w(\))2206 4848 y(then)26 b(the)f(call)j(to)e
Fi(bu\013)d Fo(.)6 b Fi(get)13 b Fo(\(\))26 b(blo)r(c)n(ks)h(un)n(til)f
(another)g(thread)2206 4931 y(supplies)g(a)g(matc)n(hing)f
Fi(put)8 b Fo(\()p 3044 4931 V 32 w(\).)2040 5074 y(Con)n(v)n(ersely)-6
b(,)82 b(on)70 b(a)g(call)i(to)e(the)g(async)n(hronous)g(metho)r(d)2040
5157 y Fi(bu\013)23 b Fo(.)6 b Fi(put)i Fo(\()p Fi(s)e
Fo(\),)22 b(the)f(caller)i(will)g(nev)n(er)d(w)n(ait)i(but)f(there)g
(are)h(t)n(w)n(o)g(p)r(os-)2040 5240 y(sible)k(b)r(eha)n(viours)g(with)
g(regard)g(to)g(other)g(threads:)p Black 1921 5494 a(2)p
Black eop
%%Page: 3 3
3 2 bop Black Black Black -66 -69 a Fh(\017)p Black 42
w Fo(If)46 b(there)f(has)g(previously)h(b)r(een)f(an)g(unmatc)n(hed)e
(call)k(to)14 14 y Fi(bu\013)23 b Fo(.)6 b Fi(get)14
b Fo(\(\))29 b(then)g(there)h(is)h(no)n(w)f(a)h(matc)n(h,)f(so)h(the)e
(p)r(ending)14 97 y(call)k(is)g(de-queued)d(and)h(its)h(asso)r(ciated)i
(blo)r(c)n(k)n(ed)e(thread)f(is)14 180 y(rea)n(w)n(ak)n(ened)i(to)g
(run)f(the)g(b)r(o)r(dy)g(of)h(the)f(c)n(hord,)j(whic)n(h)d(will)14
263 y(return)25 b Fg(s)p Fo(.)p Black -66 394 a Fh(\017)p
Black 42 w Fo(If)e(there)g(are)g(no)g(p)r(ending)g(calls)h(to)f
Fi(bu\013)g Fo(.)6 b Fi(get)13 b Fo(\(\))23 b(then)f(the)h(call)14
477 y(to)j Fi(bu\013)d Fo(.)6 b Fi(put)i Fo(\()p Fi(s)e
Fo(\))26 b(is)g(simply)f(queued)f(up)h(un)n(til)g(one)h(arriv)n(es.)
-152 594 y(Exactly)i Fi(which)34 b Fo(pairs)28 b(of)h(calls)g(will)g(b)
r(e)f(matc)n(hed)e(up)h(is)h(unsp)r(eci-)-152 677 y(\014ed,)e(so)g(ev)n
(en)f(a)h(single-threaded)g(program)g(suc)n(h)f(as)-60
798 y Fi(Bu\013er)35 b(bu\013)42 b Fo(=)25 b Fp(new)g
Fi(Bu\013er)9 b Fo(\(\);)-60 881 y Fi(bu\013)23 b Fo(.)6
b Fi(put)i Fo(\("blue")r(\);)-60 964 y Fi(bu\013)23 b
Fo(.)6 b Fi(put)i Fo(\("sky"\);)-60 1047 y Fi(Console)f
Fo(.)p Fi(Write)f Fo(\()p Fi(bu\013)16 b Fo(.)q Fi(get)8
b Fo(\(\))25 b(+)g Fi(bu\013)17 b Fo(.)p Fi(get)h Fo(\(\)\);)-152
1167 y(is)95 b(non-deterministic)e(\(prin)n(ting)g(either)i("bluesky)o
(")f(or)-152 1250 y(")q(skyblue)o("\).)228 1218 y Fm(3)-40
1333 y Fo(Note)32 b(that)f(the)h(implemen)n(tation)e(of)i(a)g
Fi(Bu\013er)41 b Fo(do)r(es)32 b(not)f(in-)-152 1416
y(v)n(olv)n(e)39 b(spa)n(wning)h(an)n(y)e(threads)h({)h(whenev)n(er)e
(the)h(b)r(o)r(dy)f(of)i(the)-152 1499 y(c)n(hord)28
b(runs,)g(it)g(do)r(es)g(so)g(in)g(a)g(preexisting)g(thread)g(\(viz.)40
b(the)28 b(one)-152 1582 y(whic)n(h)j(called)h Fi(get)13
b Fo(\(\)\).)50 b(The)31 b(reader)g(ma)n(y)f(at)h(this)g(p)r(oin)n(t)g
(w)n(onder)-152 1665 y(what)22 b(the)g(rules)g(are)g(for)h(deciding)f
(in)g(whic)n(h)g(thread)f(a)i(b)r(o)r(dy)e(runs,)-152
1748 y(or)29 b(ho)n(w)f(w)n(e)h(kno)n(w)f(to)g(whic)n(h)h(metho)r(d)e
(call)i(the)f(\014nal)g(v)l(alue)g(com-)-152 1831 y(puted)f(b)n(y)g
(the)h(b)r(o)r(dy)f(will)j(b)r(e)e(returned.)40 b(The)29
b(answ)n(er)g(is)f(that)g(in)-152 1914 y(an)n(y)e(giv)n(en)h(c)n(hord,)
g(at)g(most)f(one)h(metho)r(d)e(ma)n(y)g(b)r(e)i(sync)n(hronous.)-152
1997 y(If)e(there)g(is)h(suc)n(h)e(a)i(metho)r(d,)e(then)g(the)h(b)r(o)
r(dy)f(runs)h(in)f(the)h(thread)-152 2080 y(asso)r(ciated)d(with,)g
(and)d(the)h(v)l(alue)f(is)i(returned)e(to,)i(the)f(call)h(to)f(that)
-152 2163 y(metho)r(d.)35 b(If)27 b(there)f(is)g(no)h(suc)n(h)e(metho)r
(d)g(\(i.e.)j(all)f(the)f(metho)r(ds)f(in)-152 2246 y(the)31
b(c)n(hord)h(are)f(async)n(hronous\))h(then)e(the)h(b)r(o)r(dy)g(runs)g
(in)h(a)g(new)-152 2329 y(thread)26 b(and)f(there)h(is)g(no)f(v)l(alue)
h(to)g(return.)-40 2412 y(It)f(should)g(also)h(b)r(e)f(p)r(oin)n(ted)g
(out)g(that)f(the)h Fi(Bu\013er)34 b Fo(co)r(de,)25 b(triv-)-152
2495 y(ial)i(though)e(it)h(is,)h(is)f(completely)f(thread-safe.)36
b(The)26 b(lo)r(c)n(king)g(that)-152 2578 y(is)e(required)f(\(for)g
(example)g(to)g(prev)n(en)n(t)f(the)h(argumen)n(t)f(to)h(a)h(single)
-152 2661 y Fi(put)37 b Fo(b)r(eing)29 b(returned)f(to)h(t)n(w)n(o)g
(distinct)g Fi(get)8 b Fo(s\))29 b(is)g(generated)g(auto-)-152
2744 y(matically)d(b)n(y)f(the)g(compiler.)-40 2827 y(The)36
b Fi(Bu\013er)45 b Fo(example)35 b(uses)h(a)g(single)h(c)n(hord)e(to)h
(de\014ne)f(t)n(w)n(o)-152 2910 y(metho)r(ds.)e(It)24
b(is)h(also)g(p)r(ossible)h(\(and)d(common\))g(to)h(ha)n(v)n(e)g(m)n
(ultiple)-152 2993 y(c)n(hords)i(in)n(v)n(olving)f(a)h(giv)n(en)g
(metho)r(d.)33 b(F)-6 b(or)26 b(example:)-60 3114 y Fp(class)32
b Fi(Bu\013er)i Fh(f)10 3197 y Fp(string)27 b Fi(get)8
b Fo(\(\))25 b(&)h Fp(async)f Fi(put)8 b Fo(\()p Fp(string)27
b Fi(s)7 b Fo(\))25 b Fh(f)79 3280 y Fp(return)h Fi(s)7
b Fo(;)10 3363 y Fh(g)10 3529 y Fp(string)27 b Fi(get)8
b Fo(\(\))25 b(&)h Fp(async)f Fi(put)8 b Fo(\()p Fp(in)n(t)26
b Fi(n)6 b Fo(\))26 b Fh(f)79 3612 y Fp(return)g Fi(n)6
b Fo(.)q Fi(T)-6 b(oString)8 b Fo(\(\);)10 3695 y Fh(g)-60
3778 y(g)-152 3898 y Fo(No)n(w)33 b(w)n(e)f(ha)n(v)n(e)f(de\014ned)g(t)
n(w)n(o)h(metho)r(ds)g(for)g(putting)g(things)g(in)n(to)-152
3981 y(the)22 b(bu\013er)g(\(whic)n(h)g(happ)r(en)g(to)h(b)r(e)f
(distinguished)h(b)n(y)e(t)n(yp)r(e)h(rather)-152 4064
y(than)29 b(name\))f(and)g(a)i(single)g(metho)r(d)e(for)h(getting)h
(things)f(out.)44 b(A)-152 4147 y(call)38 b(to)g Fi(get)13
b Fo(\(\))36 b(can)h(sync)n(hronize)g(with)g(a)g(call)h(to)f(either)g
(of)h(the)-152 4230 y Fi(put)8 b Fo(\(\))34 b(metho)r(ds.)58
b(If)34 b(there)g(are)g(p)r(ending)g(calls)h(to)f(b)r(oth)g
Fi(put)7 b Fo(\(\)s,)-152 4313 y(then)25 b(whic)n(h)h(one)f(sync)n
(hronizes)h(with)f(a)h(subsequen)n(t)f Fi(get)13 b Fo(\(\))25
b(is)h(un-)-152 4396 y(sp)r(eci\014ed.)-152 4579 y Fp(2.2)89
b(Programming)31 b(in)f(P)n(olyphonic)i(C)1235 4547 y
Fn(])-152 4710 y Fp(2.2.1)88 b(A)30 b(Simple)g(Cell)g(Class)-152
4841 y Fo(W)-6 b(e)44 b(start)g(with)g(an)f(implemen)n(tation)g(of)h(a)
g(simple)f(one-place)-152 4924 y(cell)i(class.)91 b(Cells)45
b(ha)n(v)n(e)e(t)n(w)n(o)h(public)g(sync)n(hronous)f(metho)r(ds:)p
Black -152 4972 797 4 v -65 5020 a Fl(3)-33 5045 y Fj(Of)18
b(course,)g(in)g(an)n(y)h(real)e(implemen)n(tation)f(the)h
(nondeterminism)e(in)j(this)-152 5112 y(v)n(ery)g(simple)e(example)h
(will)g(b)r(e)g(resolv)n(ed)g(statically)-5 b(,)18 b(so)g(di\013eren)n
(t)f(executions)-152 5178 y(will)i(alw)n(a)n(ys)h(pro)r(duce)d(the)h
(same)g(result,)h(but)f(this)g(is)h(not)g(part)g(of)f(the)g(o\016cial)
-152 5245 y(seman)n(tics.)p Black Black Black 2040 -69
a Fp(v)n(oid)26 b Fi(put)8 b Fo(\()p Fi(Obje)l(ct)33
b(o)5 b Fo(\))30 b(and)g Fi(Obje)l(ct)j(get)13 b Fo(\(\).)48
b(A)30 b(call)i(to)e Fi(put)38 b Fo(blo)r(c)n(ks)2040
14 y(un)n(til)29 b(the)f(cell)i(is)f(empt)n(y)e(and)i(then)f(\014lls)i
(the)e(cell)i(with)f(its)h(argu-)2040 97 y(men)n(t.)61
b(A)34 b(call)i(to)f Fi(get)43 b Fo(blo)r(c)n(ks)35 b(un)n(til)g(the)f
(cell)i(is)f(full)h(and)e(then)2040 180 y(remo)n(v)n(es)25
b(and)g(returns)h(its)g(con)n(ten)n(ts:)2063 313 y Fp(class)31
b Fi(OneCel)t(l)i Fh(f)2167 396 y Fp(public)27 b Fi(OneCel)t(l)7
b Fo(\(\))26 b Fh(f)2236 479 y Fi(empty)8 b Fo(\(\);)2167
562 y Fh(g)2167 728 y Fp(public)27 b(v)n(oid)f Fi(put)8
b Fo(\()p Fi(Obje)l(ct)33 b(o)5 b Fo(\))25 b(&)h Fp(async)f
Fi(empty)8 b Fo(\(\))25 b Fh(f)2236 811 y Fi(c)l(ontains)7
b Fo(\()p Fi(o)i Fo(\);)2167 894 y Fh(g)2167 1060 y Fp(public)27
b Fi(Obje)l(ct)34 b(get)8 b Fo(\(\))25 b(&)g Fp(async)h
Fi(c)l(ontains)7 b Fo(\()p Fi(Obje)l(ct)34 b(o)5 b Fo(\))25
b Fh(f)2236 1143 y Fi(empty)8 b Fo(\(\);)2236 1226 y
Fp(return)27 b Fi(o)5 b Fo(;)2167 1310 y Fh(g)2063 1393
y(g)2040 1525 y Fo(In)70 b(addition)i(to)f(the)g(t)n(w)n(o)g(public)g
(metho)r(ds,)82 b(the)70 b(class)2040 1608 y(uses)59
b(t)n(w)n(o)g(priv)l(ate)f(async)n(hronous)g(metho)r(ds,)66
b Fi(empty)8 b Fo(\(\))58 b(and)2040 1691 y Fi(c)l(ontains)8
b Fo(\()o Fi(Obje)l(ct)34 b(o)5 b Fo(\),)35 b(to)e(carry)g(the)f(state)
i(of)g(cells.)57 b(There)34 b(is)f(a)2040 1774 y(simple)h(declarativ)n
(e)g(reading)g(of)h(the)e(constructor)h(and)g(the)f(t)n(w)n(o)2040
1857 y(c)n(hords)26 b(whic)n(h)f(explains)h(ho)n(w)g(this)g(w)n(orks:)p
Black 2040 2000 a Fp(constructor:)p Black 44 w Fo(When)21
b(a)h(cell)g(is)g(created,)h(it)e(is)h(initially)h Fi(empty)8
b Fo(\(\))o(.)p Black 2040 2143 a Ff(put)g Fp(-c)n(hord:)p
Black 42 w Fo(If)46 b(w)n(e)g Fi(put)53 b Fo(an)46 b
Fi(Obje)l(ct)33 b(o)51 b Fo(in)n(to)46 b(a)g(cell)g(whic)n(h)g(is)2206
2226 y Fi(empty)8 b Fo(\(\))25 b(then)g(the)g(cell)i
Fi(c)l(ontains)7 b Fo(\()p Fi(o)e Fo(\).)p Black 2042
2369 a Ff(get)i Fp(-c)n(hord:)p Black 42 w Fo(If)21 b(w)n(e)g
Fi(get)13 b Fo(\(\))20 b(the)g(con)n(ten)n(ts)h(of)g(a)g(cell)g(whic)n
(h)g Fi(c)l(ontains)2206 2452 y Fo(an)h Fi(Obje)l(ct)33
b(o)26 b Fo(then)21 b(afterw)n(ards)i(the)e(cell)i(is)f
Fi(empty)8 b Fo(\(\))21 b(and)g(the)2206 2535 y(returned)k(v)l(alue)g
(is)i Fi(o)5 b Fo(.)p Black 2040 2678 a Fp(implicitly:)p
Black 44 w Fo(In)25 b(all)i(other)e(cases,)j Fg(put)p
Fo(s)d(and)g Fg(g)s(et)p Fo(s)g(w)n(ait.)2040 2821 y(The)57
b(tec)n(hnique)e(of)i(using)f(priv)l(ate)g(async)n(hronous)g(metho)r
(ds)2040 2904 y(\(rather)28 b(than)g(\014elds\))g(to)h(carry)f(state)h
(is)g(v)n(ery)f(common)e(in)j(P)n(oly-)2040 2997 y(phonic)34
b(C)2351 2965 y Fn(])2381 2997 y Fo(.)60 b(Observ)n(e)34
b(that)f(the)h(constructor)h(establishes,)j(and)2040
3080 y(ev)n(ery)28 b(b)r(o)r(dy)h(in)g(class)i Fi(OneCel)t(l)36
b Fo(preserv)n(es,)30 b(a)g(simple)f(and)g(easily)2040
3163 y(v)n(eri\014ed)c(in)n(v)l(arian)n(t:)p Black Black
2206 3306 a(There)c(is)g(alw)n(a)n(ys)h(exactly)e(one)h(p)r(ending)f
(async)n(hronous)2206 3389 y(metho)r(d)28 b(call:)43
b(either)29 b(an)h Fi(empty)7 b Fo(\(\))29 b(or)h(a)f
Fi(c)l(ontains)8 b Fo(\()o Fi(o)d Fo(\),)2206 3472 y(for)27
b(some)e Fi(Obje)l(ct)33 b(o)5 b Fo(.)2040 3615 y(\(In)38
b(con)n(trast)i(there)f(ma)n(y)e(b)r(e)i(an)g(arbitrary)g(n)n(um)n(b)r
(er)e(of)j(clien)n(t)2040 3698 y(threads)34 b(blo)r(c)n(k)n(ed)f(with)h
(p)r(ending)g(calls)h(to)f Fi(put)42 b Fo(or)34 b Fi(get)8
b Fo(,)36 b(or)e(ev)n(en)2040 3781 y(concurren)n(tly)j(running)h
(statemen)n(t)f Fp(return)26 b Fi(o)43 b Fo(within)38
b(the)g(last)2040 3864 y(b)r(o)r(dy)-6 b(.\))65 b(Hence)35
b(one)h(can)g(also)i(read)e(the)g(class)h(de\014nition)f(as)g(a)2040
3947 y(direct)26 b(sp)r(eci\014cation)h(of)f(an)g(automaton:)p
Black Black 2413 5083 a
 currentpoint currentpoint translate 0.8 0.8 scale neg exch neg exch
translate
 2413 5083 a @beginspecial 0 @llx
0 @lly 187 @urx 158 @ury 1870 @rwi @setspecial
%%BeginDocument: OneCell.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ImageMark Software Labs
%%For: () ()
%%Title: C:\Documents and Settings\nick\My Documents\Drawing1.eps
%%CreationDate: () ()
%%BoundingBox: 0 0 187 158
%%DocumentProcessColors: Black
%%ColorUsage:Color
%%DocumentFonts: Helvetica
%%+Helvetica-Bold
%%+Helvetica-Oblique
%%+Helvetica-BoldOblique
%%+Times-Roman
%%+Times-Bold
%%+Times-Italic
%%+Times-BoldItalic
%%+Courier
%%+Courier-Bold
%%+Courier-Oblique
%%+Courier-BoldOblique
%%+Symbol
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset Adobe_typography_AI5 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_blend_AI5 1.0 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_Illustrator_AI5 1.0 0
%AI5_FileFormat 3.0
%AI3_ColorUsage: Color
%AI3_TemplateBox: 0 0 187 158
%AI3_TileBox: 0 0 187 158
%AI3_DocumentPreview: None
%%Template:
%%PageOrigin:0.0000 0.0000
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 25 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			0
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			1
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop 
			0 eq
			{
				pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				pop
				3
				{
					1 exch sub
					3 index mul 
					1 exch sub
					3 1 roll
				} repeat
				4 -1 roll pop
				setrgbcolor
			} ifelse
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 
%%CreationDate:(03/26/93) ()
%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 54 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	pop pop
	findfont _wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 2 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		tr _psf
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		trj _pjsf
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
	/Tx
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	dup 1000 div /_fScl exch ddef
%
	selectfont
} def
/Tl
{
	pop
	0 exch _leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	/_rise exch ddef
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	100 div /_hs exch ddef
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop neg Td
} def
/T*-
{
	_leading aload pop Td
} def
/T-
{
	_hyphen Tx
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ _fScl 1000 mul selectfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
 
AGM_Gradient_Sep_private begin
/initializeSeps{
	_noImage not _level2PS not and{
		/_whiteBytes 1 makeByte8 pt
		/knockOut{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}def
		/linealFill{
			mySave
			8 setImageParms
			_color{
				_nCustomColorSD begin
					cyan magenta yellow black
					_spotColor{
						spot1 begin
							/tintImage tintValue 1 exch sub makeByte8 def
					 end
						spot2 begin
							/tintImage tintValue 1 exch sub makeByte8 def
					 end
					}if
			 end
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 _nCustomColorSD ncolorimage
			}{
				_nCustomColorSD/black get 1 exch sub makeByte8 
				_nCustomColorSD bwImage
			}ifelse
			myRestore
		}def
	}{
		 /knockOut{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}def
	}ifelse
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk false def
			/magentaInk false def
			/yellowInk false def
			/blackInk false def
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{
				
			_fillSD begin
				exch
				dup spot1/name get eq{
					spot1 spot2
				}{
					spot2 spot1
				}ifelse
			 begin
				 begin
						/name xd
						1 exch sub /tintValue xd
						4{
							tintValue mul 4 1 roll
						}repeat
						_spotColor not{
							/tintValue null def
						}if
				 end
					/tintValue 0 def
			 end
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			renderCMYK
			{
				fillOvp
			}{
				spot1 begin
					gsave
					name null ne{
						spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					}{
						1 setgray
					}ifelse
					fillOvp 
					grestore
			 end
				spot2 begin
					name null ne{
						gsave
						true setoverprint
						spot_C spot_M spot_Y spot_K name tintValue setCustomColor
						fillOvp
						grestore
					}if
			 end
				newpath
			}ifelse
	 end
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		_rampSD begin
			_color{
				/cyanInk _cyanData 0 ne def
				/magentaInk _magentaData 0 ne def
				/yellowInk _yellowData 0 ne def
				/blackInk _blackData 0 ne def
				_nSamples setImageParms
				_nSamples expandSpot
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				true 4 _rampSD ncolorimage
			}{
				/cyanInk false def
				/magentaInk false def
				/yellowInk false def
				/blackInk true def
				_nSamples setImageParms 
				_blackData _rampSD bwImage
			}ifelse
	 end
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					false
					currentpagedevice/SeparationOrder get{name eq or}forall
					not
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK
				{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and
					{
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
}def
/initializeMultiPassSeps{
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	pt
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
		 begin
				name null eq{
					false
				}{
					spot_C spot_M spot_Y spot_K name ccThrough 
				}ifelse
		 end
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 200 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
	/linealImage _noImage{
		/rectImage load
	}{
		_producingSeps{
			AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			/rampImage load
		 end
		}{
			/rampImage load
		}ifelse
	}ifelse
	def
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient begin
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator
		 end
		 end
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		pop
	}{
		/_useShells true def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
		_producingSeps not and
	def
}def
/initializeLev1{
	/makeByte8{
		/_tmp 0 pt
		255 mul cvi
		8 string 8{
			dup _tmp 3 index put 
			/_tmp _tmp 1 add pt
		}repeat
		exch pop
	}def
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		_C0_Space _C1_Space eq{
			/_rampColorSpace _C0_Space pt
		}{
			(colorspace conflict!) ==
			showpage
			stop
		}ifelse
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			/Function 
				bd
					/FunctionType 3
					/Domain [0 1]
					/Functions _rampFuncsArray
					/Bounds _boundsArray
					/Encode _encodeArray
				ed
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			/Function 
				bd
					/FunctionType 3
					/Domain [0 1]
					/Functions _rampFuncsArray
					/Bounds _boundsArray
					/Encode _encodeArray
				ed
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	/fillRamp{ 
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		_rampFuncsArray _index
		bd
			/FunctionType 2
			/Domain [0 1]
			/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
			_gradType 0 eq{
				_invert{/C1}{/C0}ifelse _C0
				_invert{/C0}{/C1}ifelse _C1
			}{
				_invert{/C0}{/C1}ifelse _C1
				_invert{/C1}{/C0}ifelse _C0
			}ifelse
		ed
		put
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
	
	/radialRamp
		/fillRamp load def
	
	/rampImage
		/fillRamp load def
	
	AGM_Gradient begin
	/Bc{
		6 npop
	}def
	
 end
	
	
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	currentdict/rampImage known not{
		/rampImage{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}def
	}if
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			setrgbcolor 4 npop
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			3 -1 roll pop pop
			1 exch sub /_tmp xp
			3{
				1 exch sub _tmp mul 1 exch sub 3 1 roll
			}repeat
			setrgbcolor 
			4 npop
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData /_ndx cvx /get cvx
		_d255 /exch cvx /get cvx
		
		_usingSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_firstShell true pt
	_usingSmoothShade not{
		fill
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
			radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD begin
							spot1 begin
								/name 3 index def
								/spot_K 4 index def
								/spot_Y 5 index def
								/spot_M 6 index def
								/spot_C 7 index def
						 end
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD begin
							spot1 begin
								/name 4 index def
								/spot_K 8 index def
								/spot_Y 9 index def
								/spot_M 10 index def
								/spot_C 11 index def
						 end
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD begin
				spot1 /name get ne{
					spot2 begin
						/name xd
						/spot_K _tmp 2 add index def
						/spot_Y _tmp 3 add index def
						/spot_M _tmp 4 add index def
						/spot_C _tmp 5 add index def
				 end
				}{
					pop
				}ifelse
		 end
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD begin
				spot1 /name get ne{
					spot2 begin
						/name xd
						/spot_K _tmp 5 add index def
						/spot_Y _tmp 6 add index def
						/spot_M _tmp 7 add index def
						/spot_C _tmp 8 add index def
				 end
				}{
					pop
				}ifelse
		 end
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_rampSD begin
			_ccProcess _ccRGB or{
				_rampType 3 eq _rampType 6 eq or{
					spot2 begin
						/tintImage _gradType 0 eq{
							_tint2Data
						}{
							_tint1Data
						}ifelse
						def
						name null eq{
							/name /Black def
						}if
				 end
				}if
				spot1 begin
					/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
						_tint1Data
					}{
						_tint2Data
					}ifelse
					def
					_rampType 2 eq _rampType 5 eq or{
						name null eq{
							/name spot2 /name get def
							spot2 /name null put
						}if
					}{
						name null eq{
							/name /Black def
						}if
					}ifelse
			 end
			}if
	 end
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_usingSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
	/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
	0
	_nSamples
	[
	/dup cvx
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
currentdict/radialRamp known not{
	/radialRamp{
	
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		_rampPoint
	
		_nSamples 1 sub
	
		_nRadSamples 
		[
			/dup cvx
	
			_optimize{
				/round cvx /cvi cvx
			}if
	
			/_ndx /exch cvx /pt cvx
			
			_useShells{
				/_firstShell cvx{
					/_firstShell false pt
				}{
					0 0 3 index 360 0 arcn fill
				}/ifelse cvx
			}if
	
			blendColor
	
			_useShells{
				0 0 3 /index cvx 0 360 /arc cvx 
			}{
				0 0 3 /index cvx 0 360 /arc cvx /fill cvx
			}ifelse
	
			/exch cvx _bInc /add cvx /exch cvx
	
			_sInc /add cvx
	
			_radHilite{
				_xBCInc _yBCInc /translate cvx
			}if
		] cvx bind
		repeat
	
		pop pop
	
		_saveMatrix setmatrix
	
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_useShells _rampIndex 1 eq and{
			fill
		}if
		_spotColor{
			nsetcustomcolorend
		}if
	
		
	}def
}if
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.1 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 24 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize
{ 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6
	{
		dup type /arraytype eq
		{
			dup xcheck
			{
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not
{
	/Adobe_ColorImage_AI6_Vars 15 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/plateindex -1 def
	/XIMask 0 def
	/XIBinary 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIBuffer null def
	/XIDataProc null def
	/XIVersion 6 def
end
/WalkRGBString null def
/WalkCMYKString null def
/StuffRGBIntoGrayString null def
/RGBToGrayImageProc null def
/StuffCMYKIntoGrayString null def
/CMYKToGrayImageProc null def
/ColorImageCompositeEmulator null def
/SeparateCMYKImageProc null def
/FourEqual null def
/TestPlateIndex null def
currentdict /_colorimage known not
{
	/colorimage where
	{
		/colorimage get /_colorimage exch def
	}
	{
		/_colorimage null def
	} ifelse
} if
/_currenttransfer systemdict /currenttransfer get def
/colorimage null def
/XI null def
/WalkRGBString
{
	0 3 index
	dup length 1 sub 0 3 3 -1 roll
	{
		3 getinterval { } forall
		5 index exec
		3 index
	} for
	
	 5 { pop } repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll
	{
		4 getinterval { } forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/CMYKToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/ColorImageCompositeEmulator
{
	pop true eq
	{
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}
	{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
		{
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq 
				{ 
					/RGBToGrayImageProc 
				}
				{ 
					/CMYKToGrayImageProc
				} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/SeparateCMYKImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne
		{
			sourcearray plateindex get exec
		}
		{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub
			{
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/FourEqual
{
	4 index ne
	{
		pop pop pop false
	}
	{
		4 index ne
		{
			pop pop false
		}
		{
			4 index ne
			{
				pop false
			}
			{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex
{
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where
		{
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual 
			{ 
				/plateindex 0 def
			}
			{
				0 1 0 0 FourEqual
				{ 
					/plateindex 1 def
				}
				{
					0 0 1 0 FourEqual
					{
						/plateindex 2 def
					}
					{
						0 0 0 1 FourEqual
						{ 
							/plateindex 3 def
						}
						{
							0 0 0 0 FourEqual
							{
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/colorimage
{
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index dup 
		8 eq exch 1 eq or not
 end
	
	{
		/_colorimage load null ne
		{
			_colorimage
		}
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}
	{
		dup 3 eq
		TestPlateIndex
		dup -1 eq exch 5 eq or or
		{
			/_colorimage load null eq
			{
				ColorImageCompositeEmulator
			}
			{
				dup 1 eq
				{
					pop pop image
				}
				{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						grestore
					} if
				} ifelse
			} ifelse
		}
		{
			dup 1 eq
			{
				pop pop
				image
			}
			{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0
					{			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/XG
{
	pop pop
} def
/XF
{
	13 {pop} repeat
} def
/Xh
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIMask
		{
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH
{
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIBinary exch 0 ne def
		pop
		pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq
		{
			XIImageWidth 8 div ceiling cvi
		}
		{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIBuffer exch string def
		XIBinary
		{
			/XIDataProc { currentfile XIBuffer readstring pop } def
			XIVersion 6 le
			{
				currentfile 128 string readline pop pop
			}
			if
		}
		{
			/XIDataProc { currentfile XIBuffer readhexstring pop } def
		} ifelse
		
		XIVersion 6 le
		{
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIMask
			{
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		
		XIMask
		{
			XIImageWidth XIImageHeight
			false
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			imagemask
		}
		{
			XIImageWidth XIImageHeight
			XIBitsPerPixel
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			
			XIChannelCount 1 eq
			{
				gsave
				0 setgray
				image
				grestore
			}
			{
				false
				XIChannelCount
				colorimage
			} ifelse
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Full Prolog)
%%Version: 1.1 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 81 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 91 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_blend_AI5 1.4 0
%%Title: (Adobe Illustrator (R) Version 5.0 Blend ProcSet)
%%Version: 1.4 0
%%CreationDate: (11/19/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_blend_AI5 70 dict dup begin
put
/bd
{
	bind def
} bind def
/xs
{
	exch store
} bd
/nullProc
{
	{
	}
} def
/initialize
{
	pop pop
	Adobe_blend_AI5 begin
		Adobe_blend_AI5_vars begin
			/_contoneDevice where
			{
				pop
			}
			{
				/_contoneDevice false def	
			} ifelse
					
			/_dpiThreshold where
			{
				pop
			}
			{	
				/_dpiThreshold 600 def
			} ifelse
			
			/_screenFreqThreshold where
			{
				pop
			}
			{	
				/_screenFreqThreshold 150 def
			} ifelse
			
			/tRectOK? deviceDPI _dpiThreshold le currentScreenFreq _screenFreqThreshold le and _contoneDevice not and def
	/invertXfer
	{
		[
		{
			1 exch sub
				} /exec load systemdict/currenttransfer get exec /exec load
				] cvx systemdict/settransfer get exec
			} bd
			/spotDict 3 dict dup begin
				/nSpots 2 def
				/spot1 7 dict def
				/spot2 7 dict def
		 end
			def
			composite?
			{
				/_setgray_ /setgray load def
				/_fill_ /fill load def
				/_image_ /image load def
			}
			{
				/_setgray_ systemdict/setgray get def
				/_fill_ systemdict/fill get def
				/_image_ systemdict/image get def
			} ifelse
		} bd
		/terminate
		{
			currentdict Adobe_blend_AI5_vars eq
			{
		 end
			currentdict Adobe_blend_AI5 eq
			{
		 end
		} if
	} if
} bd
/_compositeSpotDevice where
{
 begin
		_compositeSpotDevice 0 ne {userdict /composite? true put} if
 end
}
{
	/_compositeSpotDevice 0 def	
} ifelse
	
/nullString () def
/d255 256 array def
0 1 255
{
	d255 exch dup 255 div put
} bind for
/d255- 256 array def
0 1 255
{
	d255- exch 1 d255 2 index get sub put
} bind for
/dUserSpace matrix defaultmatrix def
currentdict /Adobe_blend_AI5_vars 89 dict dup begin
put
{
	/f /F /s /S /b /B
}
{
	null def
} bind forall
/byte 1 string def
/sSave null def
/setSSave
{
	save /sSave exch store
} bind def
/Bm null def
/doBlend null def
/startC? false def
/endC? false def
/fCMYK? null def
/startTint 0 def
/endTint 0 def
/bSMatrix matrix def
/bUMatrix matrix def
/dMatrix matrix def
/inLine? true def
/pTState? false def
/bHi? false def
/yHi 0 def
/xHi 0 def
/noImg /lv1Fix where
{
	pop lv1Fix
}
{
	false
} ifelse
def
/ccAry1 5 array def
/ccTint 0 def
/spotColor? false def
/colorimage? true def
[
/tint1Data
/tint2Data
/spotDict
/bAxis
/ubAxis
/pChange
/optimize?
/nSamples
/sInc
/blendProc
/_bn
/xBCInc
/yBCInc
/bInc
/bRender
/cBName
/cBType
/nColors
/color?
/blend?
/colorType
/cData
/cDataLen
/bDataLen
/rampPoint
/midPoint
/endPoint
/blendLength
/blackData
/yeData
/mgData
/cyData
/cnt1
/ndx
/_fill
/tmp
counttomark
{
	null def
} bind
repeat
pop
currentdict
end
currentdict
end
exch
begin
begin
/unitSq
{
	0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto closepath
} bd
/gMark
{
	counttomark 2 add -1 roll
} bd
/setCustomColor
{
	dup /ccTint exch store
	1 exch sub 6 1 roll
	ccAry1 astore
	exch setcustomcolor
} bd
/currentCustomColor
{
	ccAry1 aload pop ccTint
} bd
/nsetcustomcolor where 
{
	pop
}
{
	/nsetcustomcolor
	{
		pop setcmykcolor	
	} bd
} ifelse
/nsetcustomcolorend where 
{
	pop
}
{
	/nsetcustomcolorend
	{
	} bd
} ifelse
/setBSpace
{
	newpath bUMatrix astore concat unitSq
} bd
/setCStop
{
	dup 0 eq
	{
		pop
		
		spotColor?
			{
			dup 1 exch sub /ccTint exch def
			ccAry1 4 /Black put
			} if
		setgray
	}
	{
		1 eq
		{
			setcmykcolor
		}
		{
			composite? not colorType 2 lt and
			{
				forceCMYK
			}
			{
				setCustomColor
			} ifelse
		} ifelse
	} ifelse
} bd
/makeByte
{
	/tmp 0 store
	255 mul cvi
	8 string 8
	{
		dup tmp 3 index put /tmp tmp 1 add store
	} repeat
	exch pop
} bd
/setImgSpace
{
	cDataLen 1 8
	2 index 0 0 1 0 0 dMatrix astore
} bd
/bwImage
{
	setImgSpace cData /_image_ load
	{
		exec
	} stopped
	{
		$error /errorname get /undefinedresult ne
		{
			stop
		}
		{
			pop pop pop pop pop
		} ifelse
	} if
} bd
level2?
{
	/bFill
	{
		_fill
	} def
	/bCImg
	{
		/cDataLen bDataLen store
		setImgSpace
		setSSave
		expandSpot
		cyData mgData yeData cData
		expandCMYK
		true 4 spotDict
		{
			ncolorimage
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
} if
/expandOne
{
			dup type /stringtype ne
			{
				cDataLen string
				exch
				dup 0 ne
				{
					255 mul cvi
					0 1 cDataLen 1 sub
					{
						3 copy
						exch put pop
					} for
				} if
				pop
			} if
} bd
/expandSpot
{
	spotColor?
	{
		spotDict begin
			spot1 begin
				tintImage type /nulltype ne
				{
					tintImage expandOne /tintImage exch def
				} if
		  end
			spot2 begin
				tintImage type /nulltype ne
				{
					tintImage expandOne /tintImage exch def
				} if
		  end
	 end
	} if
} bd
/expandCMYK
{
	4
	{
		expandOne 4 1 roll
	} repeat
} bd
/colorimage where dup
{
	exch pop
	
	/ncolorimage where
	{
		pop
	}
	{
		/ncolorimage {pop colorimage} bd
	} ifelse
} if
not
{
	/ncolorimage where 
	{
		pop
	}
	{
		/colorimage? false store
		/ncolorimage
		{
			pop pop pop
	
		setSSave
		/blackData xs
		/yeData xs
		/mgData xs
		/cyData xs
		/cnt1 0 store
		[
		byte dup 0
		cyData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .3 /mul cvx
		}
		{
			.3 mul
		} ifelse
		mgData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .59 /mul cvx
		}
		{
			.59 mul
		} ifelse
		yeData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .11 /mul cvx
		}
		{
			.11 mul
		} ifelse
		blackData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx
		} if
		/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
		/dup cvx 0 /lt cvx
		{
			pop 0
		} /if cvx
		/dup cvx 1 /gt cvx
		{
			pop 1
		} /if cvx
		255 /mul cvx /cvi cvx
		256 /mod cvx
		/dup cvx 0 /lt cvx
		{
			pop 0
		} /if cvx
		/put cvx
		/cnt1 dup cvx 1 /add cvx /store cvx
		] cvx
		bind
			_image_ 
		sSave restore
	} bd
	} ifelse
} if
level2? not
{
	/bCImg
	{
		/cDataLen bDataLen store
		setImgSpace
		setSSave
		expandSpot
		cyData mgData yeData cData
		colorimage? 
		{
			expandCMYK
		} if
		true 4 spotDict
		{
			ncolorimage
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
	/bwFill
	{
		setSSave
		/cDataLen 8 store
		/cData currentgray makeByte store
		bwImage
		sSave restore
	} bd
	/c1ImgFill
	{
		setSSave
		/cDataLen 8 store
		setImgSpace
		spotColor?
		{
			spotDict begin
				spot1 begin
					currentCustomColor makeByte /tintImage exch def
					/name exch def
					/spot_K exch def
					/spot_Y exch def
					/spot_M exch def
					/spot_C exch def
			 end
				spot2 initSpotData
		 end
		} if
		currentcmykcolor
		4
		{
			makeByte 4 1 roll
		} repeat
		true 4 spotDict
		{
			ncolorimage
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
	/bFill
	noImg
	{
		{
			_fill
		}
	}
	{
		{
			color?
			{
				c1ImgFill
			}
			{
				bwFill
			} ifelse
		}
	} ifelse
	bd
} if
composite?
{
	/bCFun
	{
		color?
		{
			cyData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			mgData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			yeData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			cData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			spotColor?
			{
				spotDict begin
					/spotDict cvx /begin cvx
					spot1 begin
						tintImage dup type /stringtype eq
						{
							/ndx cvx /get cvx d255- /exch cvx /get cvx
						}
						{
							dup type /nulltype ne 
							{
								name type /nametype ne {1 exch sub} if
							} if
						} ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
					spot2 begin
						tintImage dup type /stringtype eq
						{
							/ndx cvx /get cvx d255- /exch cvx /get cvx
						}
						{
							dup type /nulltype ne 
							{
								name type /nametype ne {1 exch sub} if
							} if
						} ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/spotDict cvx
				/nsetcustomcolor cvx
			}
			{
				/setcmykcolor cvx
			} ifelse
		}
		{
			cData /ndx cvx /get cvx
			d255 /exch cvx /get cvx
			/setgray cvx
		} ifelse
	} bd
	/Bc
	{
		newpath
		gsave
		setBSpace
		nColors 1 eq
		{
			pop pop
			setCStop
		} if
		bFill
		grestore
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			linImg
		}
		{
			bFill
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/rdBm
	{
		/nColors dup load 1 sub store
		_fill
		gsave
		bUMatrix astore concat
		bHi?
		{
			xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
			rampPoint 1 lt
			{
				1 rampPoint sub dup xHi mul exch yHi mul translate
			} if
		} if
		nColors
		{
			0 0 rampPoint 0 360 arc
			_fill
			blend? bHi? or
			{
				rdBlend
			} if
			nColors 1 gt
			{
				getRData
			} if
			/nColors dup load 1 sub store
		} repeat
		/nColors 1 store
		grestore
	} bd
	/cGetRData
	{
		setCStop
		/blend?
		cData type /stringtype eq
		dup not color? and
		{
			pop
			cyData type /stringtype eq
			mgData type /stringtype eq
			yeData type /stringtype eq
			or or
		} if
		store
	} def
	/cGetRData
} if
/eCStop
{
	mark
	1 index 3 mul 3 add dup 8 gt
	{
		pop 8
	} if
	1 roll
	cleartomark
} bd
composite? not
{
	/knockOut
	level2?
	{
		{
			0 0 0 0 setcmykcolor _fill
		}
	}
	{
		/bFill noImg
		{
			{
				_fill
			}
		}
		{
			{
				_of true eq
				{
					currentgray 1 ne
					{
						bwFill
					} if
				}
				{
					bwFill
				} ifelse
			}
		} ifelse
		def
		/whiteByte 1 makeByte def
		noImg
		{
			{
				0 0 0 0 setcmykcolor _fill
			}
		}
		{
			{
				cBType 0 eq
				{
					setSSave
					/cData whiteByte store
					/cDataLen 8 store
					bwImage
					sSave restore
				}
				{
					_fill
				} ifelse
			}
		} ifelse
	} ifelse
	bd
	/bCFun
	{
		cData dup type /stringtype ne
		{
			color?
			{
				1 exch sub
			} if
		}
		{
			/ndx cvx /get cvx
			color? customColor? not and
			{
				d255-
			}
			{
				d255
			} ifelse
			/exch cvx /get cvx
		} ifelse
		/_setgray_ cvx
	} bd
	/eCCBlend
	{
		dup 3 eq
		{
			pop
			mark 7 1 roll
			6 copy ccThrough? dup /blend? xs
			{
				/startC? true store
				setCustomColor
				customColor?
				{
					/cData tint1Data store
					setCDataLen
				} if
				/endC?
				3 index 3 eq
				{
					4 index 1 ne
				}
				{
					false
				} ifelse
				store
			} if
			cleartomark
			stop
		} if
		1 eq
		{
			pop pop pop
		} if
		pop
		/startC? false store
		6
		{
			8 index
		} repeat
		ccThrough? dup /blend? xs
		{
			/endC? true store
			blend? not
			{
				stop
			} if
			customColor?
			{
				/cData tint1Data store
				setCDataLen
			} if
		} if
	} bd
	/handleOP
	{
		_of not
		{
			knockOut
		} if
	} bd
	/handleROP
	{
		_of not
		{
			0 0 0 0 setcmykcolor _fill
		}
		{
			newpath	
		} ifelse
	} bd
	/rdBm
	{
		/nColors dup load 1 sub store
		blend? 
		{
			_fill
		}
		{
			handleROP
		} ifelse
		gsave
		bUMatrix astore concat
		bHi?
		{
			xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
			rampPoint 1 lt
			{
				1 rampPoint sub dup xHi mul exch yHi mul translate
			} if
		} if
		nColors
		{
			0 0 rampPoint 0 360 arc
			blend?
			{
				cData type /stringtype ne bHi? not and
				{
					cData color?
					{
						1 exch sub
					} if
					_setgray_ 
					_fill_ 
				}
				{
					cData type /stringtype ne
					{
						/cDataLen 1 store
						/bDataLen 1 store
					} if
					rdBlend
				} ifelse
			}
			{
				
				handleROP
				
				pTState?
				{
					/bAxis rampPoint endPoint sub store
					xHi bAxis mul yHi bAxis mul translate
				} if
			} ifelse
				
			nColors 1 gt
			{
				getRData
			} if
			/nColors dup load 1 sub store
		} repeat
		/nColors 1 store
		grestore
	} bd
	/ccThrough?
	{
		gsave
		pop 0 setCustomColor
		currentcmykcolor
		grestore
		anyColor?
	} bd
	/forceCMYK
	{
		exch pop
		1 exch sub 5 1 roll
		4
		{
			4 index mul 4 1 roll
		} repeat
		0
		cCMYKData dup /cData ne
		{
			dup /yeData eq
			{
				pop 1 add
			}
			{
				/mgData eq
				{
					2
				}
				{
					3
				} ifelse
				add
			} ifelse
			0
		} if
		pop
		index
		0 eq
		{
			pop pop pop pop 0 0 0 0
		} if
		setcmykcolor
		pop
		/fCMYK? true store
	} bd
	/endCapSepBc
	{
		pop pop
		dup 0 eq
		{
			pop
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				colorType 1 eq
				{
					forceCMYK
				}
				{
					fCMYK?
					{
						forceCMYK
					}
					{
						setCustomColor
					} ifelse
				} ifelse
			} ifelse
		} ifelse
		currentcmykcolor anyColor? 
		blend? and
		{
			bFill
		}
		{
			handleOP
		} ifelse
		
	} bd
} if
/cCMYKData 0 def
composite? dup not
{
	pop customColor?
} if
not
{
	/cCMYKData
	/cyData /mgData /yeData /cData
	black? not
	{
		yellow?
		{
			exch
		}
		{
			magenta?
			{
				3
			}
			{
				4
			} ifelse
			-1 roll
		} ifelse
	} if
	4 1 roll pop pop pop
	store
	/Bc
	{
		gsave
		setBSpace
		nColors 1 gt
		{
			
			blend? currentcmykcolor anyColor? and
			{
				bFill
			}
			{
				handleOP
			} ifelse
		}
		{
			endCapSepBc
		} ifelse
		grestore
		newpath
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			cCMYKData load dup type /stringtype eq
			{
				dup length /cDataLen xs
				/cData xs
				gsave
				colorType 0 ne noImg not and
				{
					invertXfer
				} if
				linImg
				grestore
			}
			{
				pop bFill
			} ifelse
		}
		{
			handleOP
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/cmykGetRData
	{
		/fCMYK? false store
		blend?
		{
			{
				cmykDataProcs colorType get exec
			} stopped
			pop
			blend?
			{
				/cData cCMYKData load store
				setCDataLen
			} if
		} if
	} def
	/cmykDataProcs
	[
	{
		pop
		black? dup /blend? xs
		{
			setgray
			0
		} if
		pop
	}
	{
		cCMYKData load dup type /stringtype ne
		{
			0 0 0
			cyan? not
			{
				4 magenta?
				{
					1
				}
				{
					yellow?
					{
						2
					}
					{
						3
					} ifelse
				} ifelse
				roll
			} if
			4 copy add add add 0 eq
			{
				/blend? false store
			} if
			
			setcmykcolor
			/startC? true store
			/endC? true store
			eCStop
			stop
		} if
		pop
		dup 0 eq
		{
			pop
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				forceCMYK
			} ifelse
		} ifelse
	} bind
	/eCCBlend load
	{
		cBType 1 eq
		{
			tint1Data tint2Data
			/tint1Data xs
			/tint2Data xs
		} if
		0 eq
		{
			black?
			{
				setgray
			}
			{
				0 0 0 4 -1 roll 1 exch sub setcmykcolor
			} ifelse
			black?
			{
				/blend? true store
			} if
			6
			{
				8 index
			} repeat
			ccThrough?
			{
				/blend? true store
			}
			{
				black?
				{
					/cData tint1Data store
					setCDataLen
				}
				{
					/blend? false store
				} ifelse
			} ifelse
		}
		{
			mark 7 1 roll
			6 copy ccThrough?
			{
				forceCMYK
				pop
				stop
			} if
			9 index 0 eq
			{
				black? dup /blend? xs
				{
					pop 1 setgray
					/cData tint2Data store
					setCDataLen
					0
				} if
				pop
			}
			{
				/blend?
				6
				{
					16 index
				} repeat
				ccThrough?
				store
				blend?
				{
					forceCMYK
				} if
			} ifelse
			cleartomark
		} ifelse
	} bind
	] def
	/cmykGetRData
} if
composite? dup not
{
	pop isCMYKSep?
} if
not
{
	/endCapSepBc
	{
		/white? false store
		pop pop
		dup 0 eq
		{
			pop
			/white? 1 index 1 eq store
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				setCustomColor
			} ifelse
		} ifelse
%
		currentcmykcolor anyColor?
		endC? or
		blend? and
		{
			bFill
		}
		{
			handleOP
		} ifelse
	} bd
	/Bc
	{
		gsave
		setBSpace
		nColors 1 gt
		{
			blend? startC? and
			{
				bFill
			}
			{
				handleOP
			} ifelse
		}
		{
			endCapSepBc
		} ifelse
		grestore
		newpath
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			cData type /stringtype eq
			{
				linImg
			}
			{
				bFill
			} ifelse
		}
		{
			handleOP
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/discardCMY
	{
		counttomark 4 add -3 roll pop pop pop
	} bd
	/testTopCC
	{
		6 copy ccThrough?
	} bd
	/getCRamp
	{
		{
			ccDataProcs colorType 2 sub get exec
		} stopped pop
		blend? cDataLen 0 eq and
		{
			/cDataLen bDataLen store
		} if
	} bd
	/ccGetRData
	{
		/fCMYK? false store
		/startC? false store
		/endC? false store
		colorType 2 lt
		{
			/blend? false def
		} if
		blend?
		{
			getCRamp
		}
		{
			setCStop
		} ifelse
		blend?
		{
			/blend? cData 1 ne store
			blend?
			{
				cData dup type /stringtype ne
				{
					1 exch sub /cData xs 0
				} if
				pop
			} if
		} if
	} def
	/ccDataProcs
	[
	/eCCBlend load
	{
		cBType 1 eq
		{
			tint1Data tint2Data
			/tint1Data xs
			/tint2Data xs
		} if
		0 eq
		{
			/blend? false store
			pop
		}
		{
			mark 7 1 roll
			testTopCC
			{
				/blend? 1 index 1 ne store
				/startC? blend? store
				/endC? false store
				blend? not
				{
					cleartomark stop
				} if
				/cData tint1Data store
				setCDataLen
				setCustomColor
				pop
				stop
			} if
			cleartomark
		} ifelse
		2 index 0 eq
		{
			/blend? false store
		}
		{
			mark 6
			{
				9 index
			} repeat
			testTopCC dup /blend? xs
			{
				/blend? 1 index 1 ne store
				/endC? blend? store
				/startC? false store
				blend? not
				{
					cleartomark stop
				} if
				/cData tint2Data store
				setCDataLen
			} if
			cleartomark
		} ifelse
	} bind
	] def
	/ccGetRData
} if
load Adobe_blend_AI5_vars /getData 3 -1 roll put
/setCDataLen
{
	/cDataLen 0 cData dup type /stringtype eq
	{
		length exch
	} if
	pop store
} bd
/initSpotData
{
 begin
		/name null def
		/tintImage null def
		/tintValue null def
		/spot_C  null def
		/spot_M  null def
		/spot_Y  null def
		/spot_K  null def
 end
} bd
/getRData
{
	/colorType gMark store
	_compositeSpotDevice 0 ne
	{
		spotDict begin
			spot1 initSpotData
			spot2 initSpotData
	 end
		/spotColor? colorType 2 eq colorType 3 eq or def
	} 
	{
		/spotColor? false store
	} ifelse
	/blend? true store
	0 0 0 0 setcmykcolor
	100 div /rampPoint xs
% (between 13 and 87%) 
	100 div /midPoint xs
	dup 0 eq
	{
		2
	}
	{
		dup 1 eq
		{
			5
		}
		{
			_compositeSpotDevice 0 ne
			{
				spotDict begin
					spot1 begin
						/name 3 index def
						/spot_K 4 index def
						/spot_Y 5 index def
						/spot_M 6 index def
						/spot_C 7 index def
				 end
			 end
			} if
			7
		} ifelse
	} ifelse
	/tmp exch def
	tmp index 100 div /endPoint xs
	_compositeSpotDevice 0 ne
	{
		tmp 2 add index 3 eq
		{
			/tmp tmp 4 add def
			tmp index dup 
			spotDict begin
				spot1/name get ne
				{
					spot2 begin
						/name exch def
						/spot_K tmp 2 add index def
						/spot_Y tmp 3 add index def
						/spot_M tmp 4 add index def
						/spot_C tmp 5 add index def
				 end
				}
				{
					pop
				} ifelse
		 end
		} if
	} if
	/color? colorType 0 gt store
	
	colorType 3 eq
	{
		/tint2Data gMark store
	} if
	
	colorType 2 ge
	{
		/tint1Data gMark store
	} if
	_compositeSpotDevice 0 ne
	{
		spotDict begin
		
			colorType 2 ge
			{
				colorType 3 eq
				{
					spot2 begin
						/tintImage cBType 0 eq {tint2Data} {tint1Data} ifelse def
						name null eq {/name /Black def} if
				 end
				} if
				spot1 begin
					/tintImage cBType 0 eq colorType 2 eq or {tint1Data} {tint2Data} ifelse def
					colorType 2 eq 
					{
						name null eq 
						{
							/name spot2/name get def
							spot2/name null put
						} if
					}
					{
						name null eq {/name /Black def} if
					} ifelse
			 end
			} if
	 end
	} if
	
	/cData gMark store
	setCDataLen
	colorType 0 gt
	{
		counttomark 4 add -3 roll
		/yeData xs
		/mgData xs
		/cyData xs
	} if
	blend?
	{
		/bDataLen
		cDataLen dup 0 eq color? and
		{
			[
			cyData mgData yeData
			]
			{
				dup type /stringtype eq
				{
					length exch pop exit
				} if
				pop
			} forall
		} if
		store
		bDataLen 0 eq
		{
			/bDataLen 1 store
		} if
		getData
		blend?
		{
			composite? cDataLen 0 eq and
			{
				/cDataLen bDataLen store
			} if
		} if
	}
	{
		setCStop
	} ifelse
} bd
/Bg
{
	0 0 0 0 setcmykcolor
	6
	{
		pop
	} repeat
	/blendLength xs
	pop pop pop
	/cBName xs
	/bRender xs
	bRender 2 ne
	{
		composite? not
		{
			_of setoverprint
		} if
		_eo {eoclip} {clip} ifelse
		_bn cBName 2 copy known
		{
			get
			mark exch aload pop
			/cBType xs
			/nColors xs
			mark exch aload pop
			0 0
		} if
		pop pop
		getRData
		cBType 0 eq
		{
			/linealBm
		}
		{
			bHi?
			{
				/pTState? nColors 2 gt store
			} if
			/doBlend /rdBlend load store
			/rdBm
		} ifelse
	}
	{
		inLine? not
		{
			mark mark
		} if
		/Bc dup
		{
			cleartomark mark
		} bd
		/nullProc
	} ifelse
	load /Bm xs
} bd
/linImg
noImg
{
	{
		newpath doRctBlend
	}
}
{
	{
		/doBlend
		color? composite? and
		{
			/bCImg
		}
		{
			/bwImage
		} ifelse
		load
		store
	
		0 0 moveto
		tRectOK? composite? and
		{
			{
				mark
				0 1 dtransform atan cvi 90 mod 0 eq
				1 0 dtransform atan cvi 90 mod 0 eq
			} stopped
			{
				cleartomark
			}
			{
				and exch pop
				{
					newpath
					doRctBlend
				}
				{
					doBlend
				} ifelse
			} ifelse
		}
		{
			doBlend
		} ifelse
	} 
} ifelse
bd
/doRctBlend
{
	gsave
	/sInc 1 store
	/nSamples bDataLen store
	/bInc 1 bDataLen div store
	/ubAxis 1 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt store
	/pChange ubAxis 0 eq
	{
		0
	}
	{
		bDataLen ubAxis div
	} ifelse
	store
	pChange .5 gt noImg not and dup /optimize? xs
	{
		/nSamples ubAxis 2 div round cvi dup 1 le
		{
			pop 2
		} if
		store
		/bInc 1 nSamples div store
		/sInc bDataLen 1 sub nSamples 1 sub div store
	} if
	0
	nSamples
	[
	/dup cvx
	optimize?
	{
		/round cvx /cvi cvx
	} if
	/ndx /exch cvx /store cvx
	bCFun
	/rectfill where dup
	{
		exch pop _compositeSpotDevice 1 ne and
	} if
	{
		0 0 bInc 1 /rectfill cvx	
	}
	{
		0 0 /moveto cvx
		bInc 0 /lineto cvx
		bInc 1 /lineto cvx
		0 1 /lineto cvx
		/closepath cvx
		/_fill_ cvx
	} ifelse
	bInc 0 /translate cvx
	sInc /add cvx
	] cvx
	bind
	repeat
	pop
	spotColor? {nsetcustomcolorend} if
	
	grestore
} bd
/rdPrep
{
	/nSamples bDataLen dup 0 eq
	{
		pop 1
	} if
	store
	/sInc -1 store
	/bAxis rampPoint endPoint sub store
	/bInc bAxis bDataLen div neg store
	/optimize? false store
	tRectOK?
	{
		/ubAxis
		bAxis 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
		0 bAxis dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
		2 copy lt
		{
			exch
		} if
		pop store
		/pChange ubAxis 0 eq
		{
			0
		}
		{
			bDataLen ubAxis div
		} ifelse
		store
		pChange .5 gt noImg not and dup /optimize? xs
		{
			/nSamples ubAxis 2 div round cvi dup 1 le
			{
				pop 2
			} if
			store
			/bInc bAxis nSamples div neg store
			/sInc bDataLen 1 sub nSamples 1 sub div neg store
		} if
	} if
	bHi?
	{
		/xBCInc xHi bAxis mul nSamples div store
		/yBCInc yHi bAxis mul nSamples div store
	} if
} bd
/rdBlend
{
	newpath
	gsave
	rdPrep
	rampPoint
	bDataLen 1 sub
	nSamples
	[
	/dup cvx
	optimize?
	{
		/round cvx /cvi cvx
	} if
	/ndx /exch cvx /store cvx
	bCFun
	0 0 3 /index cvx 0 360 /arc cvx /_fill_ cvx
	/exch cvx bInc /add cvx /exch cvx
	sInc /add cvx
	bHi?
	{
		xBCInc yBCInc /translate cvx
	} if
	] cvx
	bind
	repeat
	pop pop
	spotColor? {nsetcustomcolorend} if
	grestore
	pTState?
	{
		xHi bAxis mul yHi bAxis mul translate
	} if
} bd
/Bh
{
	pop pop
	/pTState? false store
	2 copy 0 ne exch 0 ne or dup /bHi? xs
	{
		/yHi xs
		/xHi xs
		0 0
	} if
	pop pop
} bd
/BD
{
	inLine? not
	{
		] nColors cBType
		] _bn cBName 3 -1 roll put
 end
} if
} bd
/Bn
{
1 add dict
dup nullString null put
/_bn xs
} bd
/Bd
{
Adobe_blend_AI5_vars begin
	3 -1 roll dup nullString eq dup
	{
		setSSave
	} if
	/inLine? exch def
	/cBName exch def
	/nColors exch def
	/cBType exch def
} bd
/Bb
{
	sSave null eq
	{
		Adobe_blend_AI5_vars begin
		setSSave
	} if
	composite?
	{
		/_fill /fill load store
	}
	{
		/__fill /fill load store
			/_fill
			{
				_of true eq
				{
					currentgray 1 ne
					{
						__fill
					} if
				}
				{
					__fill
				} ifelse
			} def
	} ifelse
	/fill
	{
	} def
	} bd
	/BB
	{
	/cBType xs
	cleartomark cleartomark
	cBType dup
	bRender
	sSave dup type /savetype eq
	{
		restore 0
	} if
	pop
	currentdict Adobe_blend_AI5_vars eq
	{
	 end
	} if
	2 ne exch 0 gt and
	{
		2 eq
		{
			s
		}
		{
			S
		} ifelse
	}
	{
		pop newpath
	} ifelse
} bd
currentdict readonly pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c _d _x get _ ne def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_blend_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 130/quotesinglbase 131/florin 132/quotedblbase
133/ellipsis 134/dagger 135/daggerdbl 136/circumflex 137/perthousand 
138/Scaron 139/guilsinglleft 140/OE 145/quoteleft 146/quoteright 
147/quotedblleft 148/quotedblright 149/bullet 150/endash 151/emdash 
152/tilde 153/trademark 154/scaron 155/guilsinglright 156/oe 157/dotlessi 
159/Ydieresis 164/currency 166/brokenbar 168/dieresis 169/copyright 
170/ordfeminine 172/logicalnot 174/registered 175/macron 176/ring 
177/plusminus 178/twosuperior 179/threesuperior 180/acute 181/mu 
183/periodcentered 184/cedilla 185/onesuperior 186/ordmasculine 
188/onequarter 189/onehalf 190/threequarters 192/Agrave 193/Aacute 
194/Acircumflex 195/Atilde 196/Adieresis 197/Aring 198/AE 199/Ccedilla 
200/Egrave 201/Eacute 202/Ecircumflex 203/Edieresis 204/Igrave 205/Iacute 
206/Icircumflex 207/Idieresis 208/Eth 209/Ntilde 210/Ograve 211/Oacute 
212/Ocircumflex 213/Otilde 214/Odieresis 215/multiply 216/Oslash 
217/Ugrave 218/Uacute 219/Ucircumflex 220/Udieresis 221/Yacute 222/Thorn 
223/germandbls 224/agrave 225/aacute 226/acircumflex 227/atilde 228/adieresis 
229/aring 230/ae 231/ccedilla 232/egrave 233/eacute 234/ecircumflex 
235/edieresis 236/igrave 237/iacute 238/icircumflex 239/idieresis 
240/eth 241/ntilde 242/ograve 243/oacute 244/ocircumflex 245/otilde 
246/odieresis 247/divide 248/oslash 249/ugrave 250/uacute 251/ucircumflex 
252/udieresis 253/yacute 254/thorn 255/ydieresis
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[
/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Bold Helvetica-Bold
[
/_Helvetica-Bold/Helvetica-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Oblique Helvetica-Oblique
[
/_Helvetica-Oblique/Helvetica-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-BoldOblique Helvetica-BoldOblique
[
/_Helvetica-BoldOblique/Helvetica-BoldOblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Roman Times-Roman
[
/_Times-Roman/Times-Roman 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Bold Times-Bold
[
/_Times-Bold/Times-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Italic Times-Italic
[
/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-BoldItalic Times-BoldItalic
[
/_Times-BoldItalic/Times-BoldItalic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier Courier
[
/_Courier/Courier 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-Bold Courier-Bold
[
/_Courier-Bold/Courier-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-Oblique Courier-Oblique
[
/_Courier-Oblique/Courier-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-BoldOblique Courier-BoldOblique
[
/_Courier-BoldOblique/Courier-BoldOblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Symbol Symbol
[
/_Symbol/Symbol 0 0 1 TZ
%AI3_EndEncoding AdobeType
%%EndSetup

1 XR

u
  0.000 0.000 0.000 0.000 k
 [] 0 d
  0.000 0.000 0.000 1.000 K
1 j
  72.0000 78.2222 m
  72.0000 81.7778 L
  71.1111 85.3333 L
  70.2222 88.8889 L
  69.3333 92.4444 L
  67.5556 95.1111 L
  65.7778 98.6667 L
  64.0000 101.3333 L
  61.3333 103.1111 L
  59.5556 105.7778 L
  56.8889 107.5556 L
  53.3333 109.3333 L
  50.6667 111.1111 L
  47.1111 112.0000 L
  43.5556 112.8889 L
  40.0000 113.7778 L
  36.4444 113.7778 L
  32.8889 113.7778 L
  29.3333 112.8889 L
  25.7778 112.0000 L
  23.1111 111.1111 L
  19.5556 109.3333 L
  16.8889 107.5556 L
  14.2222 105.7778 L
  11.5556 103.1111 L
  9.7778 101.3333 L
  7.1111 98.6667 L
  5.3333 95.1111 L
  4.4444 92.4444 L
  2.6667 88.8889 L
  1.7778 85.3333 L
  1.7778 81.7778 L
  0.8889 78.2222 L
  1.7778 75.5556 L
  1.7778 72.0000 L
  2.6667 68.4444 L
  4.4444 65.7778 L
  5.3333 62.2222 L
  7.1111 59.5556 L
  9.7778 56.8889 L
  11.5556 54.2222 L
  14.2222 52.4444 L
  16.8889 49.7778 L
  19.5556 48.0000 L
  23.1111 47.1111 L
  25.7778 45.3333 L
  29.3333 44.4444 L
  32.8889 44.4444 L
  36.4444 44.4444 L
  40.0000 44.4444 L
  43.5556 44.4444 L
  47.1111 45.3333 L
  50.6667 47.1111 L
  53.3333 48.0000 L
  56.8889 49.7778 L
  59.5556 52.4444 L
  61.3333 54.2222 L
  64.0000 56.8889 L
  65.7778 59.5556 L
  67.5556 62.2222 L
  69.3333 65.7778 L
  70.2222 68.4444 L
  71.1111 72.0000 L
  72.0000 75.5556 L
  72.0000 78.2222 L
F
U
u
  0.000 0.000 0.000 1.000 K
1 J
  72.0000 78.2222 m
  72.0000 81.7778 L
  71.1111 85.3333 L
  70.2222 88.8889 L
  69.3333 92.4444 L
  67.5556 95.1111 L
  65.7778 98.6667 L
  64.0000 101.3333 L
  61.3333 103.1111 L
  59.5556 105.7778 L
  56.8889 107.5556 L
  53.3333 109.3333 L
  50.6667 111.1111 L
  47.1111 112.0000 L
  43.5556 112.8889 L
  40.0000 113.7778 L
  36.4444 113.7778 L
  32.8889 113.7778 L
  29.3333 112.8889 L
  25.7778 112.0000 L
  23.1111 111.1111 L
  19.5556 109.3333 L
  16.8889 107.5556 L
  14.2222 105.7778 L
  11.5556 103.1111 L
  9.7778 101.3333 L
  7.1111 98.6667 L
  5.3333 95.1111 L
  4.4444 92.4444 L
  2.6667 88.8889 L
  1.7778 85.3333 L
  1.7778 81.7778 L
  0.8889 78.2222 L
  1.7778 75.5556 L
  1.7778 72.0000 L
  2.6667 68.4444 L
  4.4444 65.7778 L
  5.3333 62.2222 L
  7.1111 59.5556 L
  9.7778 56.8889 L
  11.5556 54.2222 L
  14.2222 52.4444 L
  16.8889 49.7778 L
  19.5556 48.0000 L
  23.1111 47.1111 L
  25.7778 45.3333 L
  29.3333 44.4444 L
  32.8889 44.4444 L
  36.4444 44.4444 L
  40.0000 44.4444 L
  43.5556 44.4444 L
  47.1111 45.3333 L
  50.6667 47.1111 L
  53.3333 48.0000 L
  56.8889 49.7778 L
  59.5556 52.4444 L
  61.3333 54.2222 L
  64.0000 56.8889 L
  65.7778 59.5556 L
  67.5556 62.2222 L
  69.3333 65.7778 L
  70.2222 68.4444 L
  71.1111 72.0000 L
  72.0000 75.5556 L
  72.0000 78.2222 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 25.7778 76.4444 0 Tp
TP
/_Helvetica 7.2500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(empty\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
1 j
  184.8889 78.2222 m
  184.0000 81.7778 L
  184.0000 85.3333 L
  183.1111 88.8889 L
  182.2222 92.4444 L
  180.4444 95.1111 L
  178.6667 98.6667 L
  176.8889 101.3333 L
  174.2222 103.1111 L
  171.5556 105.7778 L
  168.8889 107.5556 L
  166.2222 109.3333 L
  162.6667 111.1111 L
  160.0000 112.0000 L
  156.4444 112.8889 L
  152.8889 113.7778 L
  149.3333 113.7778 L
  145.7778 113.7778 L
  142.2222 112.8889 L
  138.6667 112.0000 L
  135.1111 111.1111 L
  132.4444 109.3333 L
  129.7778 107.5556 L
  126.2222 105.7778 L
  124.4444 103.1111 L
  121.7778 101.3333 L
  120.0000 98.6667 L
  118.2222 95.1111 L
  116.4444 92.4444 L
  115.5556 88.8889 L
  114.6667 85.3333 L
  113.7778 81.7778 L
  113.7778 78.2222 L
  113.7778 75.5556 L
  114.6667 72.0000 L
  115.5556 68.4444 L
  116.4444 65.7778 L
  118.2222 62.2222 L
  120.0000 59.5556 L
  121.7778 56.8889 L
  124.4444 54.2222 L
  126.2222 52.4444 L
  129.7778 49.7778 L
  132.4444 48.0000 L
  135.1111 47.1111 L
  138.6667 45.3333 L
  142.2222 44.4444 L
  145.7778 44.4444 L
  149.3333 44.4444 L
  152.8889 44.4444 L
  156.4444 44.4444 L
  160.0000 45.3333 L
  162.6667 47.1111 L
  166.2222 48.0000 L
  168.8889 49.7778 L
  171.5556 52.4444 L
  174.2222 54.2222 L
  176.8889 56.8889 L
  178.6667 59.5556 L
  180.4444 62.2222 L
  182.2222 65.7778 L
  183.1111 68.4444 L
  184.0000 72.0000 L
  184.0000 75.5556 L
  184.8889 78.2222 L
F
U
u
  0.000 0.000 0.000 1.000 K
  184.8889 78.2222 m
  184.0000 81.7778 L
  184.0000 85.3333 L
  183.1111 88.8889 L
  182.2222 92.4444 L
  180.4444 95.1111 L
  178.6667 98.6667 L
  176.8889 101.3333 L
  174.2222 103.1111 L
  171.5556 105.7778 L
  168.8889 107.5556 L
  166.2222 109.3333 L
  162.6667 111.1111 L
  160.0000 112.0000 L
  156.4444 112.8889 L
  152.8889 113.7778 L
  149.3333 113.7778 L
  145.7778 113.7778 L
  142.2222 112.8889 L
  138.6667 112.0000 L
  135.1111 111.1111 L
  132.4444 109.3333 L
  129.7778 107.5556 L
  126.2222 105.7778 L
  124.4444 103.1111 L
  121.7778 101.3333 L
  120.0000 98.6667 L
  118.2222 95.1111 L
  116.4444 92.4444 L
  115.5556 88.8889 L
  114.6667 85.3333 L
  113.7778 81.7778 L
  113.7778 78.2222 L
  113.7778 75.5556 L
  114.6667 72.0000 L
  115.5556 68.4444 L
  116.4444 65.7778 L
  118.2222 62.2222 L
  120.0000 59.5556 L
  121.7778 56.8889 L
  124.4444 54.2222 L
  126.2222 52.4444 L
  129.7778 49.7778 L
  132.4444 48.0000 L
  135.1111 47.1111 L
  138.6667 45.3333 L
  142.2222 44.4444 L
  145.7778 44.4444 L
  149.3333 44.4444 L
  152.8889 44.4444 L
  156.4444 44.4444 L
  160.0000 45.3333 L
  162.6667 47.1111 L
  166.2222 48.0000 L
  168.8889 49.7778 L
  171.5556 52.4444 L
  174.2222 54.2222 L
  176.8889 56.8889 L
  178.6667 59.5556 L
  180.4444 62.2222 L
  182.2222 65.7778 L
  183.1111 68.4444 L
  184.0000 72.0000 L
  184.0000 75.5556 L
  184.8889 78.2222 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 128.8889 76.4444 0 Tp
TP
/_Helvetica 7.2500 Tf
0.0000 Tc
 0 Tr
0 j
  0.000 0.000 0.000 1.000 k
(contains\(o\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 K
1 j
  52.4444 38.2222 m
  61.3333 30.2222 L
  70.2222 23.1111 L
  79.1111 18.6667 L
  88.8889 16.0000 L
  96.8889 16.0000 L
  105.7778 17.7778 L
  114.6667 21.3333 L
  123.5556 26.6667 L
  133.3333 34.6667 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  130.6667 36.4444 m
  136.0000 38.2222 L
  134.2222 32.8889 L
  130.6667 36.4444 L
F
U
u
  0.000 0.000 0.000 1.000 K
  52.4444 122.6667 m
  62.2222 130.6667 L
  71.1111 136.8889 L
  80.0000 140.4444 L
  88.8889 142.2222 L
  96.8889 141.3333 L
  106.6667 139.5556 L
  115.5556 135.1111 L
  124.4444 128.0000 L
  133.3333 120.0000 L
S
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  55.1111 121.7778 m
  49.7778 120.0000 L
  51.5556 125.3333 L
  55.1111 121.7778 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 78.2222 147.5556 0 Tp
TP
/_Helvetica 7.2500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(get\(\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 82.6667 4.4444 0 Tp
TP
/_Helvetica 7.2500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(put\(o\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 73.7778 128.0000 0 Tp
TP
/_Helvetica 7.2500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(return o\r) Tx
TO
  0.000 0.000 0.000 1.000 K
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
Adobe_blend_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF

%%EndDocument
 @endspecial 2413 5083 a
 currentpoint currentpoint translate 1 0.8 div 1 0.8 div scale neg
exch neg exch translate
 2413 5083 a Black 1921 5494
a Fo(3)p Black eop
%%Page: 4 4
4 3 bop Black Black -152 -69 a Fp(2.2.2)88 b(Reader-W)-7
b(riter)32 b(Lo)r(c)n(ks)-152 63 y Fo(As)42 b(a)g(more)g(realistic)i
(example)d(of)i(the)e(use)h(of)h(async)n(hronous)-152
146 y(metho)r(ds)38 b(to)g(carry)h(state)g(and)e(c)n(hords)i(to)f(sync)
n(hronize)g(access)-152 229 y(to)32 b(that)f(state,)j(w)n(e)e(no)n(w)g
(consider)g(the)f(classic)i(problem)e(of)h(pro-)-152
312 y(tecting)j(a)g(shared)g(m)n(utable)e(resource)j(with)e(a)h(m)n
(ultiple-reader,)-152 395 y(single-writer)29 b(lo)r(c)n(k.)38
b(Clien)n(ts)27 b(eac)n(h)g(request)f(and)h(then)f(release)i(ei-)-152
478 y(ther)22 b(shared)g(access)h(or)f(exclusiv)n(e)g(access,)i(using)e
(the)g(corresp)r(ond-)-152 561 y(ing)33 b(public)f(metho)r(ds)f
Fi(Shar)l(e)l(d)10 b Fo(,)34 b Fi(R)l(ele)l(aseShar)l(e)l(d)10
b Fo(,)34 b Fi(Exclusive)7 b Fo(,)34 b(and)-152 644 y
Fi(R)l(ele)l(aseExclusive)8 b Fo(.)35 b(Requests)25 b(for)i(shared)f
(access)h(blo)r(c)n(k)e(un)n(til)h(no)-152 727 y(other)31
b(clien)n(t)f(has)g(exclusiv)n(e)g(access,)j(whilst)e(requests)f(for)h
(exclu-)-152 810 y(siv)n(e)36 b(access)h(blo)r(c)n(k)f(un)n(til)f(no)h
(other)g(clien)n(t)g(has)g(an)n(y)f(access.)66 b(A)-152
893 y(canonical)27 b(solution)e(to)g(this)g(problem)f(using)h
(traditional)h(concur-)-152 976 y(rency)36 b(primitiv)n(es)g(in)g(Mo)r
(dula)h(3)g(ma)n(y)e(b)r(e)h(found)g(in)h([3];)42 b(using)-152
1069 y(P)n(olyphonic)26 b(C)301 1037 y Fn(])331 1069
y Fo(,)g(it)g(can)g(b)r(e)f(written)h(with)g(just)g(\014v)n(e)f(c)n
(hords:)-129 1202 y Fp(class)32 b Fi(R)l(e)l(aderWriter)-129
1285 y Fh(f)-60 1368 y Fi(R)l(e)l(aderWriter)11 b Fo(\(\))25
b Fh(f)h Fi(Id)t(le)9 b Fo(\(\);)26 b Fh(g)-60 1534 y
Fp(public)i(v)n(oid)e Fi(Shar)l(e)l(d)9 b Fo(\(\))25
b(&)g Fp(async)h Fi(Id)t(le)5 b Fo(\(\))36 b Fh(f)29
b Fi(S)12 b Fo(\(1\);)26 b Fh(g)-60 1617 y Fp(public)i(v)n(oid)e
Fi(Shar)l(e)l(d)9 b Fo(\(\))25 b(&)g Fp(async)h Fi(S)9
b Fo(\()p Fp(in)n(t)26 b Fi(n)6 b Fo(\))25 b Fh(f)h Fi(S)9
b Fo(\()p Fi(n)d Fo(+1\);)26 b Fh(g)-60 1700 y Fp(public)i(v)n(oid)e
Fi(R)l(ele)l(aseShar)l(e)l(d)10 b Fo(\(\))25 b(&)h Fp(async)f
Fi(S)9 b Fo(\()p Fp(in)n(t)26 b Fi(n)6 b Fo(\))26 b Fh(f)18
1783 y Fp(if)42 b Fo(\()7 b Fi(n)31 b Fo(==)26 b(1\))f
Fi(Id)t(le)6 b Fo(\(\);)25 b Fp(else)32 b Fi(S)8 b Fo(\()p
Fi(n)e Fh(\000)p Fo(1\);)-60 1866 y Fh(g)-60 1949 y Fp(public)28
b(v)n(oid)e Fi(Exclusive)6 b Fo(\(\))25 b(&)h Fp(async)f
Fi(Id)t(le)6 b Fo(\(\))25 b Fh(fg)-60 2032 y Fp(public)j(v)n(oid)e
Fi(R)l(ele)l(aseExclusive)7 b Fo(\(\))26 b Fh(f)g Fi(Id)t(le)13
b Fo(\(\);)25 b Fh(g)-129 2115 y(g)-152 2248 y Fo(Pro)n(vided)38
b(that)f(ev)n(ery)f(release)j(follo)n(ws)h(the)d(corresp)r(onding)h
(re-)-152 2331 y(quest,)d(the)d(in)n(v)l(arian)n(t)g(is)h(that)g(the)f
(state)h(of)h(the)e(lo)r(c)n(k)h(\(no)g(mes-)-152 2414
y(sage,)25 b(a)f(single)g(message)i Fi(Id)t(le)13 b Fo(\(\))o(,)24
b(or)g(a)f(single)h(message)g Fi(Shar)l(e)l(d)9 b Fo(\()p
Fi(n)d Fo(\))-152 2497 y(with)30 b Fg(n)f(>)f Fo(0\))i(matc)n(hes)f
(the)g(kind)g(and)g(n)n(um)n(b)r(er)f(of)j(threads)e(cur-)-152
2580 y(ren)n(tly)h(holding)g(the)g(lo)r(c)n(k)g(\(an)g(exclusiv)n(e)g
(thread,)h(no)f(thread,)h(or)-152 2663 y Fg(n)26 b Fo(sharing)h
(threads\).)-40 2746 y(It)39 b(is)h(a)g(matter)f(of)h(c)n(hoice)g
(whether)g(to)f(use)h(priv)l(ate)f(\014elds)-152 2829
y(or)32 b(parameters)f(in)g(priv)l(ate)g(messages.)52
b(In)30 b(the)h(example)f(ab)r(o)n(v)n(e,)-152 2912 y
Fg(n)37 b Fo(mak)n(es)f(sense)g(only)h(when)f(there)g(is)h(an)f
Fi(S)46 b Fo(message)37 b(presen)n(t.)-152 2995 y(Nonetheless,)24
b(w)n(e)e(could)g(write)h(instead)f(the)g(follo)n(wing)j(equiv)l(alen)n
(t)-152 3078 y(co)r(de:)-129 3211 y Fp(class)32 b Fi(R)l(e)l
(aderWriterPrivate)-129 3294 y Fh(f)-60 3377 y Fi(R)l(e)l(aderWriter)11
b Fo(\(\))25 b Fh(f)h Fi(Id)t(le)9 b Fo(\(\);)26 b Fh(g)-60
3460 y Fp(priv)-5 b(ate)27 b(in)n(t)f Fi(n)6 b Fo(;)26
b(//)g(protected)h(b)n(y)e(S)o(\(\))-60 3626 y Fp(public)j(v)n(oid)e
Fi(Shar)l(e)l(d)9 b Fo(\(\))25 b(&)g Fp(async)h Fi(Id)t(le)5
b Fo(\(\))25 b Fh(f)h Fi(n)7 b Fo(=1;)26 b Fi(S)9 b Fo(\(\);)25
b Fh(g)-60 3709 y Fp(public)j(v)n(oid)e Fi(Shar)l(e)l(d)9
b Fo(\(\))25 b(&)g Fp(async)h Fi(S)9 b Fo(\(\))25 b Fh(f)h
Fi(n)6 b Fo(++;)26 b Fi(S)9 b Fo(\(\);)25 b Fh(g)-60
3792 y Fp(public)j(v)n(oid)e Fi(R)l(ele)l(aseShar)l(e)l(d)10
b Fo(\(\))25 b(&)h Fp(async)f Fi(S)9 b Fo(\(\))25 b Fh(f)18
3875 y Fp(if)35 b Fo(\()p Fh(\000\000)p Fi(n)c Fo(==)25
b(0\))h Fi(Id)t(le)5 b Fo(\(\);)26 b Fp(else)f Fi(S)9
b Fo(\(\);)-60 3958 y Fh(g)-60 4041 y Fp(public)28 b(v)n(oid)e
Fi(Exclusive)6 b Fo(\(\))25 b(&)h Fp(async)f Fi(Id)t(le)6
b Fo(\(\))25 b Fh(fg)-60 4124 y Fp(public)j(v)n(oid)e
Fi(R)l(ele)l(aseExclusive)7 b Fo(\(\))26 b Fh(f)g Fi(Id)t(le)13
b Fo(\(\);)25 b Fh(g)-129 4207 y(g)-40 4340 y Fo(Our)k(mo)r(del)g(of)h
(concurrency)f(pro)n(vides)g(basic)i(fairness)f(prop-)-152
4423 y(erties.)64 b(In)34 b(cases)i(when)f(some)g(application-sp)r
(eci\014c)h(fairness)g(is)-152 4506 y(required,)27 b(one)g(can)g
(supplemen)n(t)e(it)i(with)g(programmed)f(fairness.)-152
4589 y(F)-6 b(or)25 b(instance,)g(w)n(e)g(could)g(further)f(re\014ne)g
(our)g(co)r(de)h(to)g(implemen)n(t)-152 4672 y(some)35
b(fairness)h(b)r(et)n(w)n(een)f(readers)h(and)e(writers,)39
b(b)n(y)34 b(adding)h(ex-)-152 4755 y(tra)c(shared)f(states,)i
Fi(T)10 b Fo(\(\))o(,)32 b(when)e(w)n(e)g(don't)g(accept)h(new)f
(readers,)-152 4838 y(and)h Fi(Id)t(leExclusive)14 b
Fo(\(\),)28 b(when)f(w)n(e)g(pro)n(vide)g(the)g(exclusiv)n(e)g(lo)r(c)n
(k)h(to)-152 4921 y(a)e(previously-selected)g(thread.)-129
5054 y Fp(class)32 b Fi(R)l(e)l(aderWriterF)-6 b(air)-129
5137 y Fh(f)-35 5220 y Fo(...)51 b(//)27 b(same)f(con)n(ten)n(t)f(as)h
(ab)r(o)n(v)n(e,)g(plus)5 b(:)p Black Black 2132 14 a
Fp(public)28 b(v)n(oid)d Fi(R)l(ele)l(aseShar)l(e)l(d)11
b Fo(\(\))25 b(&)g Fp(async)h Fi(T)10 b Fo(\(\))25 b
Fh(f)2210 97 y Fp(if)35 b Fo(\()p Fh(\000\000)o Fi(n)d
Fo(==)25 b(0\))h Fi(Id)t(leExclusive)6 b Fo(\(\);)26
b Fp(else)f Fi(T)10 b Fo(\(\);)2132 180 y Fh(g)2132 263
y Fp(public)28 b(v)n(oid)d Fi(Exclusive)7 b Fo(\(\))25
b(&)h Fp(async)f Fi(S)9 b Fo(\(\))25 b Fh(f)h Fi(T)10
b Fo(\(\);)26 b Fi(wait)7 b Fo(\(\);)26 b Fh(g)2132 346
y Fp(v)n(oid)g Fi(wait)7 b Fo(\(\))26 b(&)f Fp(async)g
Fi(Id)t(leExclusive)7 b Fo(\(\))25 b Fh(fg)2063 429 y(g)2040
667 y Fp(2.2.3)88 b(Activ)n(e)29 b(Ob)5 b(jects)2040
798 y Fo(A)25 b(common)f(pattern)h(in)h(other)f(concurren)n(t)h(ob)t
(ject)g(orien)n(ted)g(lan-)2040 881 y(guages)h(is)f(that)f(of)i
Fi(active)h(obje)l(cts)p Fo(.)36 b(These)26 b(ha)n(v)n(e)f(an)h(indep)r
(enden)n(t)2040 964 y(thread)19 b(of)i(con)n(trol)f(asso)r(ciated)h
(with)f(eac)n(h)f(instance)h(whic)n(h)g(is)g(used)2040
1047 y(to)31 b(pro)r(cess)i(\(t)n(ypically)e(sequen)n(tially\))g
(messages)h(sen)n(t)f(\(t)n(ypically)2040 1130 y(async)n(hronously\))18
b(from)h(other)f(ob)t(jects.)34 b(One)18 b(w)n(a)n(y)g(to)h(express)f
(this)2040 1224 y(pattern)j(in)g(P)n(olyphonic)g(C)2842
1192 y Fn(])2893 1224 y Fo(is)h(via)f(inheritance)h(from)f(an)g
(abstract)2040 1307 y(base)26 b(class:)2063 1439 y Fp(public)i
Fi(abstr)l(act)35 b Fp(class)30 b Fi(A)l(ctiveObje)l(ct)35
b Fh(f)2132 1522 y Fp(protected)27 b(b)r(o)r(ol)h Fi(done)6
b Fo(;)2137 1688 y Fi(abstr)l(act)49 b Fp(protected)27
b(v)n(oid)f Fi(Pr)l(o)l(c)l(essMessage)9 b Fo(\(\);)2132
1855 y Fp(public)28 b Fi(A)l(ctiveObje)l(ct)34 b Fo(\(\))25
b Fh(f)2201 1938 y Fi(done)32 b Fo(=)26 b Fp(false)p
Fo(;)2201 2021 y Fi(mainL)l(o)l(op)6 b Fo(\(\);)2132
2104 y Fh(g)2132 2270 y Fp(async)26 b Fi(mainL)l(o)l(op)5
b Fo(\(\))25 b Fh(f)2201 2353 y Fp(while)i Fo(\(!)p Fi(done)6
b Fo(\))26 b Fh(f)2270 2436 y Fi(Pr)l(o)l(c)l(essMessage)10
b Fo(\(\);)2201 2519 y Fh(g)2132 2602 y(g)2063 2685 y(g)2040
2818 y Fo(The)49 b(constructor)g(of)h Fi(A)l(ctiveObje)l(ct)57
b Fo(calls)50 b(the)f(async)n(hronous)2040 2901 y(metho)r(d)26
b Fi(mainL)l(o)l(op)5 b Fo(\(\))26 b(whic)n(h)h(spa)n(wns)g(a)g(new)g
(message-handling)2040 2984 y(thread)41 b(for)h(that)f(ob)t(ject.)83
b(Sub)r(classes)42 b(of)g Fi(A)l(ctiveObje)l(ct)50 b
Fo(then)2040 3067 y(de\014ne)34 b(c)n(hords)h(for)g(eac)n(h)g(message)g
(to)g(sync)n(hronize)g(with)f(a)h(call)2040 3150 y(to)27
b Fi(Pr)l(o)l(c)l(essMessage)9 b Fo(\(\).)37 b(Here,)26
b(for)i(example,)e(is)h(a)g(sk)n(eleton)f(of)i(an)2040
3233 y(activ)n(e)21 b(ob)t(ject)h(whic)n(h)f(m)n(ulticasts)g(sto)r(c)n
(k)g(quote)f(messages)i(to)f(a)g(list)2040 3316 y(of)27
b(clien)n(ts:)2063 3449 y Fp(public)h(class)e Fi(Sto)l(ckServer)37
b Fo(:)26 b Fi(A)l(ctiveObje)l(ct)35 b Fh(f)2132 3532
y Fp(priv)-5 b(ate)27 b Fi(A)n(rr)l(ayList)34 b(clients)11
b Fo(;)2132 3698 y Fp(public)28 b(async)d Fi(A)l(ddClient)8
b Fo(\()p Fi(Client)32 b(c)t Fo(\))26 b(//)g(add)g(new)g(clien)n(t)2132
3781 y(&)g Fp(v)n(oid)f Fi(Pr)l(o)l(c)l(essMessage)10
b Fo(\(\))25 b Fh(f)2212 3864 y Fi(clients)g Fo(.)7 b
Fi(A)l(dd)h Fo(\()p Fi(c)t Fo(\);)2132 3947 y Fh(g)2132
4113 y Fp(public)28 b(async)d Fi(Wir)l(eQuote)7 b Fo(\()o
Fi(Quote)33 b(q)7 b Fo(\))25 b(//)h(new)g(quote)g(o\013)f(wire)2132
4196 y(&)h Fp(v)n(oid)f Fi(Pr)l(o)l(c)l(essMessage)10
b Fo(\(\))25 b Fh(f)2201 4279 y Fp(foreac)n(h)h Fo(\()p
Fi(Client)33 b(c)d Fp(in)k Fi(clients)20 b Fo(\))25 b
Fh(f)2270 4362 y Fi(c)9 b Fo(.)c Fi(Up)l(dateQuote)j
Fo(\()p Fi(q)e Fo(\);)63 b(//)27 b(and)f(send)f(to)35
b(all)60 b(clien)n(ts)2201 4445 y Fh(g)2132 4528 y(g)2132
4694 y Fp(public)28 b(async)d Fi(CloseDown)7 b Fo(\(\))25
b(//)h(request)g(to)g(terminate)2132 4777 y(&)g Fp(v)n(oid)f
Fi(Pr)l(o)l(c)l(essMessage)10 b Fo(\(\))25 b Fh(f)2201
4860 y Fi(done)32 b Fo(=)26 b Fp(true)p Fo(;)2132 4943
y Fh(g)2063 5026 y(g)2040 5159 y Fo(In)n(terestingly)-6
b(,)76 b(in)66 b(this)g(example)g(one)g(cannot)g(mo)n(v)n(e)f(the)2040
5242 y Fi(CloseDown)7 b Fo(\(\))18 b(c)n(hord)h(to)g(the)g(sup)r
(erclass)h(\(to)f(share)h(it)f(amongst)g(all)p Black
1921 5494 a(4)p Black eop
%%Page: 5 5
5 4 bop Black Black -152 -69 a Fi(A)l(ctiveObje)l(ct)9
b Fo(s\))20 b(since)g(that)g(w)n(ould)g(violate)h(a)f(restriction)h(on)
f(com-)-152 14 y(bining)25 b(o)n(v)n(erriding)h(with)f(sync)n
(hronization,)h(whic)n(h)f(w)n(e)g(discuss)h(in)-152
97 y(the)g(next)e(section.)-152 285 y Fp(2.2.4)88 b(Custom)30
b(Sc)n(hedulers)-152 416 y Fo(In)g(P)n(olyphonic)h(C)407
384 y Fn(])437 416 y Fo(,)h(w)n(e)f(ha)n(v)n(e)f(to)h(b)r(oth)f(co)r
(exist)h(with)g(and)f(build)-152 499 y(up)r(on)g(the)f(existing)i
(threading)f(mo)r(del.)47 b(Because)32 b(these)e(threads)-152
582 y(are)43 b(relativ)n(ely)f(exp)r(ensiv)n(e,)k(and)c(are)g(the)g
(holders)g(of)h(particu-)-152 665 y(lar)32 b(lo)r(c)n(ks,)i(C)243
634 y Fn(])305 665 y Fo(programmers)c(often)i(need)f(explicit)h(con)n
(trol)g(o)n(v)n(er)-152 748 y(thread)c(usage.)41 b(In)27
b(suc)n(h)g(cases,)j(P)n(olyphonic)e(C)1284 717 y Fn(])1341
748 y Fo(is)h(a)f(con)n(v)n(enien)n(t)-152 831 y(w)n(a)n(y)h(to)g
(write)h(what)f(amoun)n(t)f(to)h(custom)f(sc)n(hedulers)h(for)h(a)f
(par-)-152 914 y(ticular)e(application.)-40 997 y(T)-6
b(o)26 b(illustrate)h(this)f(p)r(oin)n(t,)g(w)n(e)g(presen)n(t)f(an)g
(example)g(in)h(whic)n(h)-152 1080 y(w)n(e)48 b(dynamically)e(sc)n
(hedule)h(series)h(of)g(related)f(calls)i(in)e(large)-152
1163 y(batc)n(hes,)29 b(to)e(fa)n(v)n(our)h(lo)r(calit)n(y)-6
b(.)41 b(\(This)28 b(is)g(lo)r(osely)i(related)e(to)f(what)-152
1246 y(is)20 b(sometimes)f(called)i(`staged')g(or)f(`pip)r(elined')g
(computation)f([18)q(].\))-152 1329 y(The)31 b(t)n(w)n(o)g(follo)n
(wing)i(classes)g(mo)r(del)d(suc)n(h)g(batc)n(h)g(computations,)-152
1413 y(represen)n(ted)g(as)g Fi(He)l(avy)37 b Fo(ob)t(jects)31
b(that)e(ha)n(v)n(e)g(large)i(startup)e(costs)-152 1496
y(and)23 b(limited)h(concurrency)-6 b(.)32 b(Pragmatically)-6
b(,)26 b(those)d(costs)i(ma)n(y)d(b)r(e)-152 1579 y(due)34
b(to)g(a)h(large)h(co)r(de)e(and)g(data)h(fo)r(otprin)n(t.)61
b(The)34 b(help)r(er)g(class)-152 1662 y Fi(T)-6 b(oken)38
b Fo(enables)32 b(us)f(to)g(limit)g(the)f(n)n(um)n(b)r(er)f(of)j(activ)
n(e)f Fi(He)l(avy)39 b Fo(ob-)-152 1745 y(jects,)27 b(here)f(2.)-129
1877 y Fp(class)32 b Fi(T)-6 b(oken)32 b Fh(f)10 1960
y Fp(public)27 b(v)n(oid)f Fi(Gr)l(ab)6 b Fo(\(\))25
b(&)g Fp(public)j(async)d Fi(F)-6 b(r)l(e)l(e)7 b Fo(\(\))25
b Fh(fg)10 2043 y Fp(public)i Fi(T)-6 b(oken)7 b Fo(\()p
Fp(in)n(t)26 b Fi(n)6 b Fo(\))25 b Fh(f)h Fp(for)h Fo(\(;)e
Fi(n)6 b Fh(\000\000)26 b Fg(>)f Fo(0)h(;\))g Fi(F)-6
b(r)l(e)l(e)7 b Fo(\(\);)25 b Fh(g)-129 2126 y(g)-129
2210 y Fp(class)32 b Fi(He)l(avy)h Fh(f)10 2293 y Fp(static)f
Fi(T)-6 b(oken)33 b(tk)h Fo(=)26 b Fp(new)f Fi(T)-6 b(oken)7
b Fo(\(2\);)26 b(//)g(limits)g(parallelism)10 2376 y
Fp(public)h Fi(He)l(avy)33 b Fo(\()p Fp(in)n(t)26 b Fi(q)7
b Fo(\))26 b Fh(f)g Fi(tk)9 b Fo(.)p Fi(Gr)l(ab)37 b
Fo(\(\);)26 b(...;)g Fh(g)58 b Fo(//)28 b(rather)36 b(slo)n(w)10
2459 y Fp(public)27 b(in)n(t)f Fi(Work)9 b Fo(\()p Fp(in)n(t)26
b Fi(p)5 b Fo(\))25 b Fh(f)h Fp(return)h Fo(...;)g Fh(g)f
Fo(//)g(rather)39 b(fast)10 2542 y Fp(public)27 b(v)n(oid)f
Fi(Close)6 b Fo(\(\))25 b Fh(f)h Fi(tk)9 b Fo(.)p Fi(F)-6
b(r)l(e)l(e)12 b Fo(\(\);)26 b Fh(g)-129 2625 y(g)-40
2757 y Fo(The)c(class)h(b)r(elo)n(w)f(implemen)n(ts)e(our)h(sc)n
(heduler.)33 b(T)-6 b(o)22 b(eac)n(h)f(task,)-152 2840
y Fi(Burst)40 b Fo(pro)n(vides)31 b(a)h(fron)n(t-end)e(that)i(attempts)
e(to)h(organise)i(calls)-152 2924 y(in)n(to)26 b(long)h(series)g(that)f
(share)g(the)g(startup)f(cost.)36 b(A)25 b(burst)h(can)g(b)r(e)-152
3007 y(in)31 b(t)n(w)n(o)g(states,)i(represen)n(ted)e(b)n(y)e(either)37
b Fi(id)t(le)15 b Fo(\(\))30 b(or)h Fi(op)l(en)7 b Fo(\(\).)50
b(The)-152 3090 y(state)25 b(is)f(initially)h(idle.)34
b(When)23 b(a)h(\014rst)f(thread)h(tries)g(to)g(access)h(the)-152
3173 y(resource,)g(the)e(state)h(b)r(ecomes)f(op)r(en,)h(then)f(this)g
(thread)g(pro)r(ceeds)-152 3256 y(with)k(the)f(p)r(oten)n(tially-blo)r
(c)n(king)h Fi(He)l(avy)8 b Fo(\()p Fi(q)f Fo(\))26 b(call.)38
b(As)27 b(long)g(as)g(the)-152 3339 y(state)i(is)g(op)r(en,)h
(subsequen)n(t)d(callers)j(are)f(queued-up.)41 b(When)28
b(the)-152 3422 y(\014rst)c(thread)f(completes)g(its)h(o)n(wn)f(task,)i
(and)e(b)r(efore)h(releasing)h(the)-152 3505 y Fi(He)l(avy)34
b Fo(resource,)26 b(the)g(\014rst)f(thread)h(also)h(pro)r(cesses)g(the)
e(tasks)h(for)-152 3588 y(all)j(p)r(ending)f(calls)h(and)f(resumes)f
(their)h(resp)r(ectiv)n(e)h(threads)f(with)-152 3671
y(the)38 b(results.)73 b(Mean)n(while,)43 b(the)38 b(state)h(is)g
(still)g(op)r(en,)j(and)c(new)-152 3754 y(threads)27
b(ma)n(y)f(b)r(e)h(queued-up,)e(so)j(the)e(pro)r(cess)i(is)g(rep)r
(eated)f(un)n(til)-152 3837 y(no)33 b(other)f(thread)g(is)g(presen)n
(t.)54 b(Ev)n(en)n(tually)-6 b(,)33 b(the)f(state)h(b)r(ecomes)-152
3920 y(idle)i(again.)60 b(The)34 b(help)r(er)g(class)h
Fi(Thunk)43 b Fo(is)34 b(used)g(to)g(blo)r(c)n(k)g(eac)n(h)-152
4003 y(queued-up)25 b(thread)i(and)f(resume)g(it)i(with)f(the)f(result)
i Fi(r)8 b Fo(,)27 b(in)g(asyn-)-152 4086 y(c)n(hronous)f
(message-passing)h(st)n(yle.)-129 4219 y Fp(class)32
b Fi(Burst)i Fh(f)10 4302 y Fp(in)n(t)f Fi(others)38
b Fo(=)25 b(0;)32 b Fp(in)n(t)h Fi(q)10 b Fo(;)10 4385
y Fp(public)27 b Fi(Burst)8 b Fo(\()p Fp(in)n(t)26 b
Fi(q)7 b Fo(\))26 b Fh(f)g Fp(this)q Fo(.)p Fi(q)33 b
Fo(=)25 b Fi(q)7 b Fo(;)28 b Fi(id)t(le)22 b Fo(\(\);)j
Fh(g)10 4551 y Fp(public)i(in)n(t)f Fi(Work)9 b Fo(\()p
Fp(in)n(t)26 b Fi(p)5 b Fo(\))25 b(&)g Fp(async)h Fi(id)t(le)5
b Fo(\(\))25 b Fh(f)148 4634 y Fi(op)l(en)8 b Fo(\(\);)148
4717 y Fi(He)l(avy)33 b(h)f Fo(=)25 b Fp(new)g Fi(He)l(avy)8
b Fo(\()p Fi(q)f Fo(\);)148 4800 y Fp(in)n(t)33 b Fi(r)h
Fo(=)25 b Fi(h)6 b Fo(.)q Fi(Work)i Fo(\()p Fi(p)d Fo(\);)156
4883 y Fi(helpful)18 b Fo(\()r Fi(h)d Fo(\);)34 b(//)27
b(an)n(y)e(dela)n(y)n(ed)g(threads)q(?)148 4966 y Fi(h)7
b Fo(.)r Fi(Close)k Fo(\(\);)148 5049 y Fp(return)27
b Fi(r)8 b Fo(;)10 5132 y Fh(g)10 5215 y Fp(public)27
b(in)n(t)f Fi(Work)9 b Fo(\()p Fp(in)n(t)26 b Fi(p)5
b Fo(\))25 b(&)g Fp(async)h Fi(op)l(en)7 b Fo(\(\))25
b Fh(f)p Black Black 2340 -69 a Fi(others)8 b Fo(++;)25
b Fi(op)l(en)7 b Fo(\(\);)2340 14 y Fi(Thunk)34 b(t)f
Fo(=)25 b Fp(new)h Fi(Thunk)8 b Fo(\(\);)26 b Fi(delaye)l(d)9
b Fo(\()p Fi(t)e Fo(,)p Fi(p)e Fo(\);)2340 97 y Fp(return)26
b Fi(t)8 b Fo(.)p Fi(Wait)f Fo(\(\);)26 b(//)g(usually)g(blo)r(c)n
(king)2201 180 y Fh(g)2201 263 y Fp(v)n(oid)h Fi(helpful)10
b Fo(\()s Fi(He)l(avy)33 b(h)6 b Fo(\))26 b(&)f Fp(async)g
Fi(op)l(en)7 b Fo(\(\))26 b Fh(f)2348 346 y Fp(if)42
b Fo(\()7 b Fi(others)33 b Fo(==)25 b(0\))h Fi(id)t(le)10
b Fo(\(\);)2340 429 y Fp(else)26 b Fh(f)2478 512 y Fp(in)n(t)33
b Fi(b)l(atch)g Fo(=)25 b Fi(others)13 b Fo(;)31 b Fi(others)j
Fo(=)25 b(0;)2478 596 y Fi(op)l(en)8 b Fo(\(\);)2478
679 y Fp(while)p Fo(\()p Fi(b)l(atch)g Fh(\000\000)25
b Fg(>)g Fo(0\))h Fi(extr)l(aWork)10 b Fo(\()p Fi(h)c
Fo(\);)2486 762 y Fi(helpful)18 b Fo(\()r Fi(h)d Fo(\);)34
b(//)27 b(newly)p Fh(\000)p Fo(dela)n(y)n(ed)e(threads?)2340
845 y Fh(g)2201 928 y(g)2201 1011 y Fp(v)n(oid)h Fi(extr)l(aWork)10
b Fo(\()p Fi(He)l(avy)34 b(h)6 b Fo(\))25 b(&)2201 1094
y Fp(async)h Fi(delaye)l(d)9 b Fo(\()p Fi(Thunk)34 b(t)7
b Fo(,)q Fp(in)n(t)26 b Fi(p)5 b Fo(\))25 b Fh(f)2341
1177 y Fi(t)15 b Fo(.)7 b Fi(Done)f Fo(\()p Fi(h)g Fo(.)p
Fi(Work)j Fo(\()p Fi(p)t Fo(\)\);)p Fh(g)2063 1260 y(g)2063
1343 y Fp(class)31 b Fi(Thunk)k Fh(f)2201 1426 y Fp(public)28
b(in)n(t)e Fi(Wait)7 b Fo(\(\))25 b(&)g Fp(public)j(async)d
Fi(Done)7 b Fo(\()o Fp(in)n(t)27 b Fi(r)8 b Fo(\))25
b Fh(f)2340 1509 y Fp(return)h Fi(r)9 b Fo(;)2201 1592
y Fh(g)2063 1675 y(g)2040 1808 y Fo(W)-6 b(e)21 b(omit)f(the)h(co)r(de)
g(that)g(allo)r(cates)i(an)e(arra)n(y)g(of)h Fi(Burst)29
b Fo(ob)t(jects)22 b(to)2040 1891 y(b)r(e)29 b(shared)g(b)n(y)f(all)i
(threads,)h(and)d(some)h(p)r(erformance)h(test)f(co)r(de,)2040
1974 y(whic)n(h)24 b(unsurprisingly)f(exhibits)g(a)h(large)h(sp)r
(eedup)e(when)g(concur-)2040 2057 y(ren)n(t)i(threads)h(call)h
Fi(Burst)34 b Fo(rather)26 b(than)f(directly)g(calling)j
Fi(He)l(avy)7 b Fo(.)2040 2252 y Fp(3)89 b(Informal)31
b(Sp)r(eci\014cation)2040 2409 y(3.1)88 b(Grammar)2040
2541 y Fo(The)26 b(syn)n(tactic)g(extensions)h(to)f(the)g(C)3176
2509 y Fn(])3232 2541 y Fo(grammar)f([13)q(,)h(App)r(endix)2040
2624 y(C])31 b(are)g(v)n(ery)e(minor.)48 b(W)-6 b(e)30
b(add)g(a)h(new)f(k)n(eyw)n(ord)g Fp(async)p Fo(,)i(and)e(in)2040
2707 y Fe(metho)r(d-header)5 b Fo(s)20 b(w)n(e)g(allo)n(w)i
Fp(async)e Fo(instead)h(of)g(a)g(return)e(t)n(yp)r(e.)32
b(In)2040 2790 y Fe(class-mem)n(b)r(er-declaration)p
Fo(s,)44 b(w)n(e)39 b(replace)i Fe(metho)r(d-declaration)2040
2873 y Fo(with)26 b Fe(c)n(hord-declaration)p Fo(:)2077
3014 y Fe(c)n(hord-declaration)99 b Fo(::=)2154 3097
y Fe(metho)r(d-header)24 b Fo([&)i Fe(metho)r(d-header)o
Fo(])3311 3065 y Fd(\003)3373 3097 y Fe(b)r(o)r(dy)2077
3180 y(metho)r(d-header)97 b Fo(::=)2154 3263 y Fe(attributes)26
b(mo)r(di\014ers)f(return-t)n(yp)r(e)f(mem)n(b)r(er-name)o
Fo(\()p Fe(formals)s Fo(\))2077 3346 y Fe(return-t)n(yp)r(e)97
b Fo(::=)2154 3429 y Fe(t)n(yp)r(e)21 b Fh(j)g Fp(v)n(oid)h
Fh(j)g Fp(async)2100 3589 y Fo(W)-6 b(e)30 b(call)h(a)f(c)n(hord)g
(declaration)h Fi(trivial)38 b Fo(if)30 b(it)h(declares)g(a)f(single,)
2040 3672 y(sync)n(hronous)24 b(metho)r(d)f(\(i.e.)35
b(it)25 b(is)g(a)f(standard)h(C)3504 3640 y Fn(])3558
3672 y Fo(metho)r(d)e(decla-)2040 3755 y(ration\).)2040
3942 y Fp(3.2)88 b(W)-7 b(ell-F)g(ormedness)2040 4074
y Fo(Extended)31 b(classes)k(are)d(sub)t(ject)h(to)g(a)g(n)n(um)n(b)r
(er)d(of)j(sp)r(eci\014c)g(w)n(ell-)2040 4157 y(formedness)26
b(conditions:)p Black 2126 4299 a Fh(\017)p Black 42
w Fo(In)f(a)h(single)h Fe(metho)r(d-header)5 b Fo(:)p
Black 2288 4442 a(1.)p Black 42 w(If)28 b Fe(return-t)n(yp)r(e)j
Fo(is)d Fp(async)g Fo(then)g(the)g(formal)g(parame-)2389
4525 y(ter)j(list)h Fe(formals)j Fo(ma)n(y)30 b(not)i(con)n(tain)f(an)n
(y)g Fp(ref)g Fo(or)h Fp(out)2389 4608 y Fo(parameter)25
b(mo)r(di\014er.)3053 4577 y Fm(4)p Black 2126 4751 a
Fh(\017)p Black 42 w Fo(In)g(a)h(single)h Fe(c)n(hord-declaration)p
Fo(:)p Black 2288 4894 a(2.)p Black 42 w(A)n(t)41 b(most)h(one)g
Fe(metho)r(d-header)k Fo(ma)n(y)40 b(ha)n(v)n(e)i(a)g(non-)2389
4977 y Fp(async)25 b Fe(return-t)n(yp)r(e)p Fo(.)p Black
2040 5037 797 4 v 2127 5085 a Fl(4)2159 5111 y Fj(Neither)h
Fc(ref)i Fj(nor)g Fc(out)f Fj(parameters)f(are)h(safe)f(for)h(async)n
(hronous)g(mes-)2040 5177 y(sages,)32 b(since)d(they)h(are)g(b)r(oth)f
(passed)h(as)g(addresses)g(of)g(lo)r(cals)g(in)f(a)i(stac)n(k)2040
5243 y(frame)21 b(whic)n(h)h(ma)n(y)g(ha)n(v)n(e)g(disapp)r(eared)e
(when)i(the)f(message)h(is)g(pro)r(cessed.)p Black Black
1921 5494 a Fo(5)p Black eop
%%Page: 6 6
6 5 bop Black Black Black 96 -69 a Fo(3.)p Black 42 w(If)37
b(the)g(c)n(hord)g(has)g(a)h Fe(metho)r(d-header)i Fo(with)e
Fe(return-)197 14 y(t)n(yp)r(e)24 b(t)n(yp)r(e)p Fo(,)d(then)f
Fe(b)r(o)r(dy)26 b Fo(ma)n(y)19 b(use)i Fp(return)g Fo(statemen)n(ts)
197 97 y(with)35 b Fe(t)n(yp)r(e)i Fo(expressions,)h(otherwise)d
Fe(b)r(o)r(dy)41 b Fo(ma)n(y)33 b(use)197 180 y(empt)n(y)24
b Fp(return)i Fo(statemen)n(ts.)p Black 96 293 a(4.)p
Black 42 w(All)51 b(the)g Fe(formals)k Fo(app)r(earing)d(in)g
Fe(metho)r(d-header)5 b Fo(s)197 376 y(m)n(ust)24 b(ha)n(v)n(e)h
(distinct)h(iden)n(ti\014ers.)p Black 96 489 a(5.)p Black
42 w(Tw)n(o)19 b Fe(metho)r(d-header)5 b Fo(s)18 b(ma)n(y)f(not)h(ha)n
(v)n(e)f(b)r(oth)h(the)g(same)197 572 y Fe(mem)n(b)r(er-name)32
b Fo(and)f(the)g(same)g(argumen)n(t)g(t)n(yp)r(e)f(sig-)197
655 y(nature.)p Black 96 768 a(6.)p Black 42 w(The)36
b Fe(metho)r(d-header)5 b Fo(s)34 b(m)n(ust)g(either)i(all)g(declare)g
(in-)197 851 y(stance)26 b(metho)r(ds)f(or)h(all)h(declare)f(static)h
(metho)r(ds.)p Black -66 994 a Fh(\017)p Black 42 w Fo(Within)f(a)g
(particular)g(class:)p Black 96 1137 a(7.)p Black 42
w(All)c Fe(metho)r(d-header)5 b Fo(s)21 b(with)i(the)e(same)h
Fe(mem)n(b)r(er-name)197 1220 y Fo(and)g(argumen)n(t)g(t)n(yp)r(e)f
(signature)j(m)n(ust)d(ha)n(v)n(e)h(the)g(same)197 1303
y Fe(return-t)n(yp)r(e)37 b Fo(and)d(iden)n(tical)i(sets)f(of)g
Fe(attributes)j Fo(and)197 1386 y Fe(mo)r(di\014ers)p
Fo(.)p Black 96 1499 a(8.)p Black 42 w(If)f(it)h(is)g(a)g(v)l(alue)f
(class)h(\()p Fp(struct)r Fo(\),)i(then)d(only)g(static)197
1582 y(metho)r(ds)25 b(ma)n(y)f(app)r(ear)i(in)g(non-trivial)g(c)n
(hords.)p Black 96 1695 a(9.)p Black 42 w(If)18 b(an)n(y)f
Fe(c)n(hord-declaration)h Fo(includes)f(a)h(virtual)g(metho)r(d)197
1778 y Fg(m)j Fo(with)h(the)g Fp(o)n(v)n(erride)f Fo(mo)r(di\014er)1197
1746 y Fm(5)1231 1778 y Fo(,)i(then)e(an)n(y)g(metho)r(d)197
1861 y Fi(m)6 b Fo(')35 b(whic)n(h)f Fi(in)i(the)h(sup)l(er)l(class)h
(c)l(ontaining)f(the)f(over-)197 1944 y(ridden)27 b(de\014nition)g(of)f
(m)e Fo(app)r(ears)h(in)g(a)f(c)n(hord)h(with)f Fi(m)197
2027 y Fo(m)n(ust)g(also)j(b)r(e)f(o)n(v)n(erridden)f(in)g(the)h(sub)r
(class.)-152 2170 y(Most)34 b(of)f(these)f(conditions)h(are)g(fairly)h
(straighforw)n(ard,)i(though)-152 2253 y(Condition)22
b(9,)h(whic)n(h)f(pro)n(vides)f(a)h(conserv)l(ativ)n(e,)g(but)f
(simple,)h(san-)-152 2336 y(it)n(y)d(c)n(hec)n(k)g(when)g(re\014ning)g
(a)g(class)i(that)e(con)n(tains)h(c)n(hords,)h(deserv)n(es)-152
2419 y(some)26 b(further)f(commen)n(t.)-40 2502 y(In)g(general,)j
(implemen)n(tation)c(inheritance)i(and)f(concurrency)-152
2585 y(do)20 b(not)f(mix)f(w)n(ell)i([22)q(].)33 b(Our)19
b(approac)n(h)g(is)h(to)g(enforce)g(a)g(separation)-152
2668 y(of)30 b(these)f(t)n(w)n(o)h(concerns:)41 b(a)30
b(series)g(of)g(c)n(hords)f(m)n(ust)e(b)r(e)i(syn)n(tacti-)-152
2751 y(cally)20 b(lo)r(cal)g(to)f(a)g(class)h(or)f(a)g(sub)r(class)h
(declaration;)j(when)c(metho)r(ds)-152 2834 y(are)24
b(o)n(v)n(erriden,)f(all)h(their)f(c)n(hords)g(m)n(ust)f(also)i(b)r(e)f
(completely)f(o)n(v)n(er-)-152 2917 y(riden.)52 b(If)32
b(one)f(tak)n(es)h(the)f(view)h(that)f(the)g(implemen)n(tation)f(of)i
(a)-152 3000 y(giv)n(en)e(metho)r(d)e(consists)j(of)g(all)f(the)f(syc)n
(hronization)i(and)e(b)r(o)r(dies)-152 3083 y(of)35 b(all)g(the)f(c)n
(hords)g(in)g(whic)n(h)g(it)g(app)r(ears)h(then)e(the)h(our)g(inheri-)
-152 3166 y(tance)f(restriction)g(seems)f(not)h(unreasonable,)i(since)e
(in)f(\(illegal\))-152 3249 y(co)r(de)26 b(suc)n(h)g(as)-129
3382 y Fp(class)32 b Fi(C)k Fh(f)-25 3465 y Fp(virtual)27
b(v)n(oid)f Fi(f)16 b Fo(\(\))25 b(&)g Fp(virtual)i(async)f
Fi(g)7 b Fo(\(\))25 b Fh(f)h Fo(/)p Fh(\003)h Fo(b)r(o)r(dy1)e
Fh(\003)p Fo(/)i Fh(g)-25 3548 y Fp(virtual)g(v)n(oid)f
Fi(f)16 b Fo(\(\))25 b(&)g Fp(virtual)i(async)f Fi(h)6
b Fo(\(\))25 b Fh(f)h Fo(/)p Fh(\003)h Fo(b)r(o)r(dy2)e
Fh(\003)p Fo(/)i Fh(g)-129 3631 y(g)-129 3797 y Fp(class)32
b Fi(D)h Fo(:)26 b Fi(C)36 b Fh(f)-25 3880 y Fp(o)n(v)n(erride)25
b(async)h Fi(g)7 b Fo(\(\))25 b Fh(f)h Fo(/)p Fh(\003)h
Fo(b)r(o)r(dy3)e Fh(\003)p Fo(/)h Fh(g)-129 3963 y(g)-152
4096 y Fo(one)21 b(w)n(ould,)i(b)n(y)c(o)n(v)n(erriding)i
Fi(g)8 b Fo(\(\),)22 b(ha)n(v)n(e)e(also)i(`half)6 b(')22
b(o)n(v)n(erridden)e Fi(f)e Fo(\(\).)-40 4179 y(More)31
b(pragmatically)-6 b(,)31 b(remo)n(ving)e(the)h(restriction)g(on)g
(inheri-)-152 4262 y(tance)19 b(mak)n(es)e(it)i(all)g(to)r(o)h(easy)e
(to)h(in)n(tro)r(duce)f(inadv)n(erten)n(t)g(deadlo)r(c)n(k)-152
4345 y(\(or)24 b(`async)g(leak)l(age'\).)35 b(If)23 b(the)g(ab)r(o)n(v)
n(e)h(co)r(de)g(w)n(ere)g(legal,)i(then)c(co)r(de)-152
4428 y(written)28 b(to)g(exp)r(ect)e(instances)j(of)f(class)g
Fi(C)38 b Fo(whic)n(h)28 b(mak)n(es)e(matc)n(h-)-152
4511 y(ing)j(calls)h(to)f Fi(f)17 b Fo(\(\))28 b(and)h
Fi(g)7 b Fo(\(\))29 b(w)n(ould)f(fail)i(to)f(w)n(ork)g(when)f(passed)h
(an)-152 4594 y(instance)24 b(of)f Fi(D)30 b Fo({)23
b(all)h(the)e(calls)i(to)f Fi(g)8 b Fo(\(\))23 b(w)n(ould)g(cause)g
Fi(b)l(o)l(dy3)34 b Fo(to)23 b(run)-152 4677 y(and)j(all)g(the)g(calls)
h(to)f Fi(f)17 b Fo(\(\))26 b(w)n(ould)g(deadlo)r(c)n(k.)-40
4760 y(Note)37 b(that)g(the)f(inheritance)i(restriction)f(means)g(that)
f(co)r(de)-152 4843 y(suc)n(h)26 b(as)p Black -152 4889
797 4 v -65 4939 a Fl(5)-33 4964 y Fj(In)18 b(C)93 4939
y Fb(])122 4964 y Fj(,)g(metho)r(ds)e(whic)n(h)h(are)g(in)n(tended)e
(to)i(b)r(e)g(o)n(v)n(erridable)f(in)h(sub)r(classes)-152
5030 y(are)25 b(explicitly)e(mark)n(ed)h(as)i(suc)n(h)e(b)n(y)h(use)g
(of)g(the)f Fc(virtual)h Fj(mo)r(di\014er,)f(whilst)-152
5097 y(metho)r(ds)d(whic)n(h)h(are)g(in)n(tended)e(to)i(o)n(v)n(erride)
f(ones)h(inherited)e(from)h(a)i(sup)r(er-)-152 5163 y(class)g(m)n(ust)f
(explicitly)e(sa)n(y)j(so)f(with)g(the)g Fc(o)n(v)n(erride)g
Fj(mo)r(di\014er.)p Black Black Black 2063 -69 a Fp(class)31
b Fi(C)37 b Fh(f)2167 14 y Fp(virtual)27 b(v)n(oid)f
Fi(f)15 b Fo(\(\))26 b(&)f Fp(priv)-5 b(ate)26 b(async)g
Fi(g)7 b Fo(\(\))25 b Fh(f)h Fo(/)p Fh(\003)h Fo(b)r(o)r(dy1)e
Fh(\003)p Fo(/)h Fh(g)2063 97 y(g)2040 230 y Fo(is)g(incorrect:)35
b(declaring)26 b(just)f(one)h(of)g Fi(f)17 b Fo(\(\))25
b(and)g Fi(g)8 b Fo(\(\))25 b(to)g(b)r(e)g Fp(virtual)2040
313 y Fo(mak)n(es)k(no)i(sense,)h(as)e(o)n(v)n(erriding)h(one)f
(requires)g(the)g(other)g(to)h(b)r(e)2040 396 y(o)n(v)n(erriden)37
b(to)r(o.)69 b(It)37 b(is)g(also)h(w)n(orth)g(observing)f(that)g(there)
g(is)g(a)2040 479 y(transitiv)n(e)d(closure)h(op)r(eration)f(implicit)g
(in)f(our)h(inheritance)g(re-)2040 562 y(striction:)44
b(if)30 b Fi(f)18 b Fo(\(\))30 b(is)g(o)n(v)n(erridden)f(and)h(joined)g
(with)g Fi(g)8 b Fo(\(\))30 b(then)f(b)r(e-)2040 645
y(cause)19 b Fi(g)8 b Fo(\(\))19 b(m)n(ust)e(b)r(e)h(o)n(v)n(erridden,)
i(so)f(m)n(ust)f(an)n(y)g(metho)r(d)f Fi(h)6 b Fo(\(\))19
b(whic)n(h)2040 728 y(is)26 b(joined)h(with)f Fi(g)7
b Fo(\(\))26 b(and)f(so)h(on.)2152 811 y(It)18 b(is)h(p)r(ossible)g(to)
g(devise)f(more)g(complex)f(and)h(p)r(ermissiv)n(e)g(rules)2040
894 y(for)35 b(o)n(v)n(erriding)f(whic)n(h)g(w)n(ould,)i(for)f
(example,)g(allo)n(w)h(the)d(earlier)2040 977 y Fi(A)l(ctiveObje)l(ct)
43 b Fo(example)33 b(to)h(implemen)n(t)d(the)j Fi(CloseDown)40
b Fo(c)n(hord)2040 1060 y(in)35 b(the)g(base)h(class.)66
b(Our)34 b(curren)n(t)h(rule)h(has)f(the)g(adv)l(an)n(tage)h(of)2040
1143 y(simplicit)n(y)-6 b(,)19 b(but)e(w)n(e)h(refer)g(the)f(reader)h
(to)g([10)q(])g(for)g(a)g(more)g(thorough)2040 1226 y(study)36
b(of)i(inheritance)g(in)f(the)g(Join)h(calculus,)k(including)37
b(more)2040 1310 y(adv)l(anced)25 b(t)n(yp)r(e)g(systems)g(for)h(its)g
(con)n(trol.)2152 1393 y(The)f(second)h(restriction)g(ab)r(o)n(v)n(e)f
(\(that)g(there)g(b)r(e)g(at)g(most)f(one)2040 1476 y(sync)n(hronous)j
(metho)r(d)f(in)h(a)h(c)n(hord\))f(is)h(also)h(caused)e(b)n(y)f(a)i(p)r
(oten-)2040 1569 y(tially)h(bad)f(in)n(teraction)i(b)r(et)n(w)n(een)e
(existing)h(C)3424 1537 y Fn(])3482 1569 y Fo(features)h(and)e(the)2040
1652 y(pure)18 b(Join)h(calculus.)33 b(Allo)n(wing)19
b(more)f(than)g(one)h(sync)n(hronous)e(call)2040 1735
y(to)30 b(app)r(ear)g(in)f(a)h(single)h(c)n(hord)e(w)n(ould)h(giv)n(e)g
(a)g(p)r(oten)n(tially)g(useful)2040 1818 y Fi(r)l(endez-vous)36
b Fo(facilit)n(y)28 b(\(pro)n(vided)e(one)h(also)i(added)d(syn)n(tax)g
(allo)n(w-)2040 1901 y(ing)e(results)h(to)f(b)r(e)f(returned)g(to)h
(particular)h(calls\).)35 b(Ho)n(w)n(ev)n(er,)24 b(one)2040
1984 y(w)n(ould)29 b(then)g(ha)n(v)n(e)f(to)h(decide)g(in)g(whic)n(h)g
(of)h(the)f(blo)r(c)n(k)n(ed)g(threads)2040 2067 y(the)c(b)r(o)r(dy)f
(ran,)i(and)f(this)g(decision)h(is)g(observ)l(able)f(to)g(the)g(C)3841
2035 y Fn(])3896 2067 y Fo(pro-)2040 2150 y(grammer.)38
b(If)27 b(this)g(w)n(ere)h(simply)e(b)r(ecause)i(thread)f(iden)n
(tities)g(can)2040 2233 y(b)r(e)d(obtained)f(and)h(c)n(hec)n(k)n(ed)e
(for)j(equalit)n(y)-6 b(,)24 b(the)f(problem)g(w)n(ould)h(b)r(e)2040
2316 y(fairly)29 b(academic)e(\(ob)t(ject-orien)n(ted)h(programmers)f
(t)n(ypically)h(not)2040 2399 y(b)r(eing)k(esp)r(ecially)h(w)n(orried)g
(ab)r(out)f(strict)g(observ)l(ational)h(equiv)l(a-)2040
2482 y(lences\).)43 b(Ho)n(w)n(ev)n(er,)29 b(since)g(reen)n(tran)n(t)f
(lo)r(c)n(ks)h(are)g(asso)r(ciated)h(with)2040 2565 y(threads,)24
b(the)e(c)n(hoice)h(of)g(thread)g(could)g(mak)n(e)e(a)i(signi\014can)n
(t)g(di\013er-)2040 2648 y(ence)i(to)h(the)f(sync)n(hronization)g(b)r
(eha)n(viour)g(of)h(the)f(program,)g(th)n(us)2040 2731
y(making)g(&)g(`v)n(ery')h(non-comm)n(utativ)n(e.)2152
2814 y(Of)32 b(course,)i(it)e(is)g(not)f(hard)h(to)f(program)h(a)g
(rendez-v)n(ous)e(ex-)2040 2897 y(plicitly)-6 b(,)37
b(though)c(asymmetrically)-6 b(,)36 b(in)e(P)n(olyphonic)g(C)3711
2865 y Fn(])3741 2897 y Fo(.)60 b(In)33 b(the)2040 2980
y(follo)n(wing)28 b(example,)e(calls)h(from)e(di\013eren)n(t)h(threads)
f(of)i(the)e(meth-)2040 3063 y(o)r(ds)39 b Fi(f)54 b
Fo(and)38 b Fi(g)45 b Fo(will)40 b(w)n(ait)f(for)g(eac)n(h)g(other)f
(and)g(then)g(exc)n(hange)2040 3146 y(argumen)n(ts)28
b(b)r(efore)i(pro)r(ceeding.)46 b(W)-6 b(e)29 b(use)g(an)g(auxiliary)g
(class)i Fi(C)2040 3229 y Fo(for)c(blo)r(c)n(king)f(and)f(resuming)g
(the)g Fi(g)33 b Fo(thread:)2063 3362 y Fp(class)e Fi(C)37
b Fh(f)2132 3445 y Fp(in)n(t)c Fi(wait)8 b Fo(\(\))25
b(&)g Fp(async)h Fi(r)l(eply)7 b Fo(\()p Fp(in)n(t)26
b Fi(i)9 b Fo(\))25 b Fh(f)j Fp(return)f Fi(i)7 b Fo(;)26
b Fh(g)2063 3528 y(g)2063 3611 y Fp(in)n(t)33 b Fi(g)7
b Fo(\()p Fp(in)n(t)31 b Fi(j)15 b Fo(\))26 b Fh(f)2132
3694 y Fi(C)37 b(c)30 b Fo(=)25 b Fp(new)g Fi(C)11 b
Fo(\(\);)25 b Fi(a)6 b Fo(\()p Fi(j)11 b Fo(,)p Fi(c)t
Fo(\);)26 b Fp(return)h Fi(c)t Fo(.)q Fi(wait)7 b Fo(\(\);)2063
3777 y Fh(g)2063 3860 y Fp(in)n(t)33 b Fi(f)16 b Fo(\()p
Fp(in)n(t)35 b Fi(i)8 b Fo(\))26 b(&)f Fp(priv)-5 b(ate)26
b(async)g Fi(a)6 b Fo(\()p Fp(in)n(t)26 b Fi(j)11 b Fo(,)p
Fi(C)36 b(c)5 b Fo(\))25 b Fh(f)2132 3943 y Fi(c)9 b
Fo(.)f Fi(r)l(eply)13 b Fo(\()t Fi(i)22 b Fo(\);)39 b
Fp(return)27 b Fi(j)10 b Fo(;)2063 4026 y Fh(g)2040 4264
y Fp(3.3)88 b(T)n(yping)30 b(Issues)2040 4395 y Fo(W)-6
b(e)29 b(treat)h Fp(async)f Fo(as)h(a)g(subt)n(yp)r(e)e(of)i
Fp(v)n(oid)g Fo(and)f(allo)n(w)i(`co)n(v)l(arian)n(t)2040
4478 y(return)j(t)n(yp)r(es')g(just)g(in)h(the)f(case)h(of)g(these)f(t)
n(w)n(o)h(\(pseudo\)t)n(yp)r(es.)2040 4561 y(Th)n(us)p
Black 2126 4704 a Fh(\017)p Black 42 w Fo(an)26 b Fp(async)f
Fo(metho)r(d)g(ma)n(y)f(o)n(v)n(erride)i(a)g Fp(v)n(oid)g
Fo(one,)p Black 2126 4847 a Fh(\017)p Black 42 w Fo(a)19
b Fp(v)n(oid)f Fo(delegate)i(ma)n(y)d(b)r(e)h(created)h(from)f(an)g
Fp(async)g Fo(metho)r(d,)2206 4930 y(and)p Black 2126
5072 a Fh(\017)p Black 42 w Fo(an)j Fp(async)g Fo(metho)r(d)e(ma)n(y)h
(implemen)n(t)e(a)j Fp(v)n(oid)g Fo(metho)r(d)f(in)h(an)2206
5155 y(in)n(terface)p Black 1921 5494 a(6)p Black eop
%%Page: 7 7
7 6 bop Black Black -152 -69 a Fo(but)32 b(not)h(con)n(v)n(ersely)-6
b(.)55 b(This)33 b(design)g(mak)n(es)f(in)n(tuitiv)n(e)g(sense)h(\(an)
-152 14 y Fp(async)g Fo(metho)r(d)f Fi(is)39 b Fo(a)34
b Fp(v)n(oid)f Fo(one,)j(but)c(has)i(the)e(extra)h(prop)r(ert)n(y)-152
97 y(of)28 b(returning)e(`immediately'\))f(and)i(also)g(maximises)f
(compatibil-)-152 180 y(it)n(y)f(with)h(existing)g(co)r(de)g(\(sup)r
(erclasses,)i(in)n(terfaces)f(and)e(delegate)-152 263
y(de\014nitions\))h(whic)n(h)g(mak)n(es)e(use)i(of)h
Fp(v)n(oid)p Fo(.)-152 459 y Fp(4)89 b(Implemen)n(tation)-152
616 y Fo(This)34 b(section)f(describ)r(es)g(the)f(implemen)n(tation)g
(of)h(c)n(hords)f(using)-152 699 y(lo)n(w)n(er-lev)n(el)23
b(concurrency)d(primitiv)n(es.)33 b(The)21 b(compilation)h(pro)r(cess)
-152 782 y(is)i(b)r(est)f(explained)g(as)h(a)f(translation)h(from)f(a)g
(p)r(olyphonic)g(class)i(to)-152 865 y(a)f(plain)f(C)154
833 y Fn(])207 865 y Fo(class.)35 b(The)23 b(resulting)g(class)i(has)e
(the)f(same)h(name)f(and)-152 948 y(signature)j(as)g(the)f(source)h
(class,)h(and)e(also)h(has)g(priv)l(ate)e(state)i(and)-152
1031 y(metho)r(ds)g(to)h(deal)g(with)g(sync)n(hronization.)-152
1219 y Fp(4.1)89 b(Sync)n(hronization)32 b(and)e(State)g(Automata)-152
1350 y Fo(In)h(the)f(implemen)n(tation)g(of)i(a)f(p)r(olyphonic)g
(class,)j(eac)n(h)d(metho)r(d)-152 1433 y(b)r(o)r(dy)23
b(com)n(bines)f(t)n(w)n(o)h(kinds)f(of)i(co)r(de,)g(corresp)r(onding)f
(to)g(the)g(syn-)-152 1516 y(c)n(hronization)e(of)f(p)r(olyphonic)f
(metho)r(d)f(calls)j(\(generated)f(from)f(the)-152 1599
y(c)n(hord)g(headers\))f(and)h(to)f(their)h(actual)g(computation)f
(\(copied)h(from)-152 1682 y(the)26 b(c)n(hord)f(b)r(o)r(dies\),)i
(resp)r(ectiv)n(ely)-6 b(.)-40 1765 y(W)g(e)24 b(no)n(w)h(describ)r(e)g
(ho)n(w)f(the)g(sync)n(hronization)g(co)r(de)h(is)g(gener-)-152
1848 y(ated)d(from)f(a)g(set)h(of)g(c)n(hords.)33 b(Since)21
b(sync)n(hronization)h(is)f(statically)-152 1931 y(de\014ned)d(b)n(y)f
(those)i(c)n(hords,)h(w)n(e)f(can)f(e\016cien)n(tly)g(compile)h(it)f
(do)n(wn)h(to)-152 2014 y(a)27 b(state)g(automaton.)37
b(This)27 b(is)g(the)f(approac)n(h)h(initially)h(describ)r(ed)-152
2097 y(in)j([19)q(],)i(though)e(our)g(implemen)n(tation)e(do)r(es)j
(not)f(construct)g(ex-)-152 2180 y(plicit)c(state)f(mac)n(hines.)-40
2263 y(The)35 b Fi(synchr)l(onization)j(state)j Fo(consists)36
b(of)f(p)r(ending)e(calls)j(for)-152 2346 y(an)n(y)21
b(metho)r(d)f(that)g(o)r(ccurs)i(in)f(a)g(c)n(hord,)h(that)f(is,)i
(threads)e(for)h(regu-)-152 2429 y(lar)i(metho)r(ds)f(and)g(messages)h
(for)h(async)n(hronous)e(metho)r(ds.)33 b(Ho)n(w-)-152
2512 y(ev)n(er,)24 b(sync)n(hronization)g(e\013ectiv)n(ely)e(dep)r
(ends)h(on)g(a)h(m)n(uc)n(h)d(simpler)-152 2595 y(state)35
b(that)g(records)g(only)g(the)f(presence)h(of)g(p)r(ending)f(calls;)41
b(the)-152 2678 y(actual)26 b(parameters)f(and)g(the)g(calling)i(con)n
(texts)d(b)r(ecome)h(relev)l(an)n(t)-152 2761 y(only)32
b(after)g(a)g(c)n(hord)f(is)i(\014red.)51 b(Hence,)33
b(the)f(whole)g(sync)n(hroniza-)-152 2844 y(tion)g(state)f(can)h(b)r(e)
f(summarized)f(in)h(a)g(w)n(ord,)j(with)d(a)h(single)g(bit)-152
2927 y(that)j(records)h(the)f(presence)h(of)g(\(one)g(or)f(more\))g(p)r
(ending)g(calls,)-152 3010 y(for)25 b(ev)n(ery)d(metho)r(d)h(app)r
(earing)h(in)f(a)h(least)g(a)g(c)n(hord.)34 b(Accordingly)-6
b(,)-152 3093 y(ev)n(ery)33 b(c)n(hord)g(declaration)i(is)f(represen)n
(ted)g(as)g(a)g(constan)n(t)f(w)n(ord)-152 3177 y(with)j(a)f(bit)g(set)
h(for)g(ev)n(ery)e(metho)r(d)g(app)r(earing)i(in)f(that)g(c)n(hord,)
-152 3260 y(and)e(the)g(sync)n(hronization)h(co)r(de)f(c)n(hec)n(ks)g
(whether)g(a)h(c)n(hord)f(can)-152 3343 y(b)r(e)27 b(\014red)g(b)n(y)f
(comparing)h(the)g(sync)n(hronization)g(w)n(ord)g(with)h(these)-152
3426 y(precomputed)c(bitmasks.)-152 3613 y Fp(4.1.1)88
b(P)n(erformance)30 b(considerations)-152 3744 y Fo(The)21
b(cost)f(of)h(p)r(olyphonic)f(metho)r(d)f(calls)j(should)e(b)r(e)g
(similar)h(to)f(the)-152 3827 y(cost)31 b(of)f(regular)h(metho)r(d)e
(calls)i(unless)f(a)h(sync)n(hronized)e(metho)r(d)-152
3910 y(call)38 b(blo)r(c)n(ks)e(w)n(aiting)i(for)f Fp(async)f
Fo(messages|in)h(that)f(case,)k(w)n(e)-152 3994 y(cannot)24
b(a)n(v)n(oid)g(pa)n(ying)g(the)f(rather)h(high)g(cost)h(of)g(dynamic)d
(thread)-152 4077 y(sc)n(heduling.)-40 4160 y(When)31
b(an)g(async)n(hronous)g(metho)r(d)e(is)j(called,)h(it)e(p)r(erforms)g
(a)-152 4243 y(b)r(ounded)21 b(amoun)n(t)g(of)i(computation)f(on)g(the)
g(caller)h(thread)f(b)r(efore)-152 4326 y(returning.)-40
4409 y(When)h(a)h(regular,)i(sync)n(hronized)d(metho)r(d)f(is)i
(called,)i(the)d(crit-)-152 4492 y(ical)34 b(path)d(to)i(optimize)f(is)
h(the)e(one)i(in)f(whic)n(h,)i(for)f(at)f(least)i(one)-152
4575 y(c)n(hord,)46 b(all)d(complemen)n(tary)d(async)n(hronous)i
(messages)h(are)g(al-)-152 4658 y(ready)34 b(presen)n(t.)60
b(In)34 b(that)g(case,)j(the)d(sync)n(hronization)g(co)r(de)h(re-)-152
4741 y(triev)n(es)23 b(the)e(con)n(ten)n(t)h(of)h(the)f(complemen)n
(tary)e(messages,)k(up)r(dates)-152 4824 y(the)34 b(sync)n(hronization)
f(state,)k(and)c(immediately)f(pro)r(ceeds)j(with)-152
4907 y(the)25 b(metho)r(d)g(b)r(o)r(dy)-6 b(.)33 b(Con)n(v)n(ersely)-6
b(,)26 b(when)f(there)g(is)h(no)g(suc)n(h)f(c)n(hord,)-152
4990 y(the)h(thread)g(m)n(ust)f(b)r(e)h(susp)r(ended,)g(and)g(the)g
(cost)h(of)g(running)f(our)-152 5073 y(sync)n(hronization)34
b(co)r(de)h(is)f(lik)n(ely)g(to)f(b)r(e)h(small)g(as)g(compared)g(to)
-152 5156 y(lo)n(w)n(er-lev)n(el)27 b(con)n(text-switc)n(hing)f(and)f
(sc)n(heduling.)p Black Black 2152 -69 a(Firing)31 b(a)f(completely)g
(async)n(hronous)f(c)n(hord)h(is)h(alw)n(a)n(ys)g(com-)2040
14 y(parativ)n(ely)18 b(exp)r(ensiv)n(e)f(since)h(it)g(in)n(v)n(olv)n
(es)f(spa)n(wning)i(a)f(new)g(thread.)2040 97 y(Hence,)45
b(when)c(an)f(async)n(hronous)h(message)h(arriv)n(es,)j(it)c(mak)n(es)
2040 180 y(sense)18 b(to)g(c)n(hec)n(k)f(for)h(matc)n(hes)f(with)h
(sync)n(hronous)f(c)n(hords)g(\014rst.)32 b(W)-6 b(e)2040
263 y(also)27 b(lo)n(w)n(er)f(the)f(cost)h(of)h(async)n(hronous)e(c)n
(hords)g(b)n(y)g(using)g(.NET's)2040 346 y Fi(thr)l(e)l(ad)j(p)l(o)l
(ol)k Fo(mec)n(hanism)23 b(rather)h(than)g(simply)g(spa)n(wning)g(a)h
(fresh)2040 429 y(op)r(erating)j(system)e(thread)g(ev)n(ery)h(time.)37
b(The)27 b(sc)n(heduling)g(p)r(olicy)2040 512 y(of)j(the)e(thread)g(p)r
(o)r(ol)i(is)f(not)g(optimal)f(for)i(all)f(applications,)j(ho)n(w-)2040
596 y(ev)n(er,)37 b(so)e(w)n(e)g(in)n(tend)e(to)i(use)f(attributes)h
(to)f(allo)n(w)j(programmer)2040 679 y(con)n(trol)26
b(o)n(v)n(er)g(thread)f(creation)i(p)r(olicy)-6 b(.)2040
866 y Fp(4.1.2)88 b(Lo)n(w-lev)n(el)29 b(Concurrency)2040
997 y Fo(The)48 b(co)r(de)g(handling)g(the)f(c)n(hords)h(m)n(ust)f(b)r
(e)g(unconditionally)2040 1080 y(thread-safe,)37 b(for)e(all)g(source)g
(co)r(de)g(in)f(the)g(class.)61 b(T)-6 b(o)35 b(this)f(end,)2040
1163 y(w)n(e)f(use)g(a)h(single,)i(auxiliary)d(lo)r(c)n(k)h(to)f
(protect)g(our)g(priv)l(ate)g(syn-)2040 1246 y(c)n(hronization)25
b(state.)35 b(\(W)-6 b(e)24 b(actually)g(use)h(the)f(regular)h(ob)t
(ject)g(lo)r(c)n(k)2040 1329 y(for)34 b(one)g(of)g(the)e(queues.\))57
b(Lo)r(c)n(king)34 b(o)r(ccurs)f(only)h(for)g(short)f(p)r(e-)2040
1413 y(rio)r(d)c(of)g(times,)g(for)g(eac)n(h)f(incoming)g(call)i(that)e
(go)r(es)h(through)f(the)2040 1496 y(c)n(hords,)23 b(so)g(hop)r(efully)
f(the)g(lo)r(c)n(k)g(will)i(nearly)e(alw)n(a)n(ys)h(b)r(e)f(a)n(v)l
(ailable.)2152 1579 y(This)e(lo)r(c)n(k)g(is)g(indep)r(enden)n(t)e(of)i
(the)f(regular)h(ob)t(ject)g(lo)r(c)n(k,)i(whic)n(h)2040
1662 y(ma)n(y)31 b(b)r(e)h(used)g(as)h(usual)f(to)h(protect)f(the)g
(rest)g(of)h(the)f(state)h(and)2040 1745 y(prev)n(en)n(t)25
b(race)h(conditions.)2040 1932 y Fp(4.2)88 b(The)29 b(T)-7
b(ranslation)2040 2063 y Fo(W)h(e)26 b(no)n(w)h(presen)n(t,)f(b)n(y)f
(means)h(of)h(a)g(simple)f(example,)g(the)g(details)2040
2146 y(of)31 b(the)f(translation)h(of)g(P)n(olyphonic)g(C)3212
2115 y Fn(])3272 2146 y Fo(in)n(to)f(ordinary)g(C)3801
2115 y Fn(])3831 2146 y Fo(.)48 b(The)2040 2229 y(translation)25
b(presen)n(ted)f(here)g(is)g(actually)h(an)f(abstraction)h(of)g(that)
2040 2313 y(whic)n(h)18 b(w)n(e)g(ha)n(v)n(e)g(implemen)n(ted.)29
b(F)-6 b(or)18 b(didactic)h(purp)r(oses,)h(w)n(e)e(mo)r(d-)2040
2396 y(ularise)30 b(the)e(translated)h(co)r(de)g(b)n(y)f(in)n(tro)r
(ducing)h(auxiliary)g(classes)2040 2479 y(for)g(queues)f(and)h
(bitmasks,)f(whereas)i(our)f(curren)n(t)f(implemen)n(ta-)2040
2562 y(tion)e(essen)n(tially)h(inlines)f(the)f(co)r(de)i(con)n(tained)e
(in)h(these)g(classes.)2040 2749 y Fp(4.2.1)88 b(Supp)r(orting)33
b(Classes)2040 2880 y Fo(The)24 b(follo)n(wing)i(v)l(alue)d(class)i
(\(structure\))e(pro)n(vides)g(op)r(erations)i(on)2040
2963 y(bitmasks:)2063 3096 y Fp(struct)i Fi(BitMask)35
b Fh(f)2132 3179 y Fp(priv)-5 b(ate)27 b(in)n(t)f Fi(v)9
b Fo(;)27 b(//)f(=)f(0;)2132 3262 y Fp(public)j(v)n(oid)d
Fi(set)9 b Fo(\()o Fp(in)n(t)27 b Fi(m)5 b Fo(\))26 b
Fh(f)g Fi(v)34 b Fh(j)p Fo(=)25 b Fi(m)6 b Fo(;)26 b
Fh(g)2132 3345 y Fp(public)i(v)n(oid)d Fi(cle)l(ar)9
b Fo(\()p Fp(in)n(t)26 b Fi(m)6 b Fo(\))25 b Fh(f)h Fi(v)34
b Fo(&=)25 b(~)q Fi(m)5 b Fo(;)26 b Fh(g)2132 3428 y
Fp(public)i(b)r(o)r(ol)f Fi(match)7 b Fo(\()p Fp(in)n(t)26
b Fi(m)6 b Fo(\))25 b Fh(f)h Fp(return)h Fo(\(~)p Fi(v)34
b Fo(&)25 b Fi(m)6 b Fo(\)==0;)26 b Fh(g)2063 3511 y(g)2152
3644 y Fo(Next,)58 b(w)n(e)53 b(de\014ne)e(the)h(classes)i(that)e
(represen)n(t)g(message)2040 3727 y(queues.)39 b(T)-6
b(o)27 b(ev)n(ery)g(async)n(hronous)g(metho)r(d,)g(the)f(compiler)i
(asso-)2040 3810 y(ciates)19 b(a)f(message-queue)g(that)g(stores)h(p)r
(ending)e(messages)i(for)g(that)2040 3893 y(metho)r(d,)g(with)g(an)g
Fi(empty)26 b Fo(prop)r(ert)n(y)17 b(for)j(testing)f(its)g(state)g(and)
f(t)n(w)n(o)2040 3976 y(metho)r(ds)g Fi(add)27 b Fo(and)19
b Fi(get)27 b Fo(for)19 b(adding)g(an)g(elemen)n(t)f(to)h(the)f(queue)g
(and)2040 4059 y(getting)31 b(an)f(elemen)n(t)g(bac)n(k)f(\(when)h
(asserting)i(that)e(the)g(queue)f(is)2040 4142 y(not)c(empt)n(y\).)33
b(The)25 b(implemen)n(tation)f(of)i(eac)n(h)g(queue)e(dep)r(ends)h(on)
2040 4225 y(the)20 b(message)g(con)n(ten)n(ts)g(\(and,)h(p)r(oten)n
(tially)-6 b(,)22 b(on)e(compiler-deduced)2040 4308 y(in)n(v)l(arian)n
(ts\);)26 b(it)g(do)r(es)g(not)f(necessarily)i(use)f(an)g(actual)g
(queue.)2152 4391 y(A)34 b(simple)f(case)i(is)g(that)e(of)i
(single-argumen)n(t)f(async)n(hronous)2040 4474 y(messages)29
b(\(here,)f Fp(in)n(t)h Fo(messages\);)h(these)e(generate)g(a)g(thin)f
(wrap-)2040 4557 y(p)r(er)f(on)f(top)h(of)g(the)g(standard)f(queue)g
(library:)2063 4690 y Fp(class)31 b Fi(intQ)i Fh(f)2132
4773 y Fp(priv)-5 b(ate)27 b Fi(Queue)32 b(q)7 b Fo(;)2132
4856 y Fp(public)28 b Fi(intQ)7 b Fo(\(\))25 b Fh(f)p
Fi(q)33 b Fo(=)25 b Fp(new)g Fi(Queue)7 b Fo(\(\);)25
b Fh(g)2132 4939 y Fp(public)j(v)n(oid)d Fi(add)9 b Fo(\()o
Fp(in)n(t)27 b Fi(i)7 b Fo(\))25 b Fh(f)h Fi(q)7 b Fo(.)p
Fi(Enqueue)g Fo(\()p Fi(i)g Fo(\);)26 b Fh(g)2132 5022
y Fp(public)i(in)n(t)e Fi(get)9 b Fo(\(\))26 b Fh(f)q
Fp(return)h Fo(\()p Fp(in)n(t)p Fo(\))f Fi(q)7 b Fo(.)p
Fi(De)l(queue)g Fo(\(\);)26 b Fh(g)2132 5105 y Fp(public)i(b)r(o)r(ol)f
Fi(empty)33 b Fh(f)q Fi(get)8 b Fh(f)p Fp(return)27 b
Fi(q)7 b Fo(.)p Fi(Count)34 b Fo(==)25 b(0;)p Fh(gg)2063
5188 y(g)p Black 1921 5494 a Fo(7)p Black eop
%%Page: 8 8
8 7 bop Black Black -152 -69 a Fo(The)23 b(queue)e(classes)i(for)g
(messages)g(with)f(m)n(ultiple)f(argumen)n(ts)h(use)-152
14 y(queues)33 b(of)i(arra)n(ys)f(of)g(ob)t(jects.)59
b(\(Clearly)-6 b(,)37 b(our)c(implemen)n(tation)-152
108 y(w)n(ould)26 b(b)r(ene\014t)f(greatly)h(from)f(the)g(a)n(v)l
(ailabilit)n(y)h(of)g(generics)h(in)e(C)1811 76 y Fn(])-152
191 y Fo([17)q(].\))-40 274 y(Another)44 b(imp)r(ortan)n(t)f(case)i(of)
f(message-queue)g(deals)h(with)-152 357 y(empt)n(y)16
b(\(no)h(argumen)n(t\))f(messages,)k(or)d(signals.)34
b(It)16 b(is)i(implemen)n(ted)-152 440 y(as)27 b(a)f(single)g(message)h
(coun)n(ter.)-129 566 y Fp(class)32 b Fi(voidQ)g Fh(f)-60
649 y Fp(priv)-5 b(ate)27 b(in)n(t)f Fi(n)6 b Fo(;)-60
732 y Fp(public)28 b Fi(voidQ)7 b Fo(\(\))25 b Fh(f)h
Fi(n)32 b Fo(=)25 b(0;)h Fh(g)-60 815 y Fp(public)i(v)n(oid)e
Fi(add)8 b Fo(\(\))25 b Fh(f)h Fi(n)6 b Fo(++;)26 b Fh(g)-60
898 y Fp(public)i(v)n(oid)e Fi(get)8 b Fo(\(\))25 b Fh(f)h
Fi(n)6 b Fh(\000\000)p Fo(;)25 b Fh(g)-60 981 y Fp(public)j(b)r(o)r(ol)
f Fi(empty)34 b Fh(f)p Fi(get)8 b Fh(f)26 b Fp(return)h
Fi(n)6 b Fo(==0;)26 b Fh(gg)-129 1064 y(g)-40 1190 y
Fo(Finally)-6 b(,)23 b(for)g(sync)n(hronous)e(metho)r(ds,)h(w)n(e)g
(need)f(classes)j(imple-)-152 1273 y(men)n(ting)19 b(queues)g(of)h(w)n
(aiting)g(threads.)33 b(As)19 b(with)h(message)g(queues,)-152
1356 y(there)e(is)h(a)f(uniform)g(in)n(terface)h(and)e(a)i(c)n(hoice)f
(of)h(sev)n(eral)g(implemen-)-152 1439 y(tations.)54
b(In)31 b(the)g(in)n(terface,)k Fi(empty)7 b Fo(,)34
b Fi(add)8 b Fo(,)33 b(and)f Fi(p)l(op)37 b Fo(are)32
b(similar)-152 1522 y(to)k(those)f(for)i(messages,)h(except)d(that)g
Fi(p)l(op)41 b Fo(do)r(es)36 b(not)f(return)f(a)-152
1605 y(v)l(alue|w)n(e)26 b(kno)n(w)g(that)f(this)h(v)l(alue)f(is)h(the)
g(curren)n(t)f(thread.)-40 1688 y(More)33 b(sp)r(eci\014cally)-6
b(,)40 b Fi(yield)f Fo(and)32 b Fi(wakeup)37 b Fo(deal)c(with)f(sync)n
(hro-)-152 1771 y(nization)g(co)r(de.)52 b(Metho)r(d)37
b Fi(yield)h Fo(is)32 b(called)g(to)g(store)g(the)e(curren)n(t)-152
1854 y(thread)g(in)h(the)f(queue)f(and)h(a)n(w)n(aits)i(for)f
(additional)h(messages;)i(it)-152 1937 y(assumes)21 b(the)g(thread)g
(holds)g(a)h(lo)r(c)n(k)f(on)g(a)h(p)r(olyphonic)f(ob)t(ject,)i(and)
-152 2020 y(releases)e(that)d(lo)r(c)n(k)h(while)h(w)n(aiting.)33
b(Con)n(v)n(ersely)-6 b(,)21 b(metho)r(d)c Fi(wakeup)-152
2103 y Fo(is)30 b(called)h(to)f(w)n(ak)n(e)f(up)g(a)h(thread)f(in)g
(the)h(queue;)g(it)g(immediately)-152 2186 y(returns)c(and)f(do)r(es)h
(not)g(otherwise)h(a\013ect)f(its)g(o)n(wn)g(thread.)-40
2269 y(The)g(co)r(de)f(b)r(elo)n(w)h(implemen)n(ts)d(sync)n
(hronization)i(using)g Fi(mon-)-152 2352 y(itors)p Fo(,)i(the)e(lo)n
(w-lev)n(el)i(in)n(terface)g(to)f(ob)t(ject)g(lo)r(c)n(ks)g(in)g(C)1466
2320 y Fn(])1496 2352 y Fo(.)-129 2478 y Fp(class)32
b Fi(thr)l(e)l(adQ)i Fh(f)-60 2561 y Fp(priv)-5 b(ate)27
b Fi(Queue)32 b(q)7 b Fo(;)-60 2644 y Fp(public)28 b
Fi(thr)l(e)l(adQ)9 b Fo(\(\))25 b Fh(f)h Fi(q)32 b Fo(=)26
b Fp(new)f Fi(Queue)6 b Fo(\(\);)26 b Fh(g)-60 2727 y
Fp(priv)-5 b(ate)27 b(v)n(oid)f Fi(add)8 b Fo(\(\))25
b Fh(f)h Fi(q)7 b Fo(.)p Fi(Enqueue)g Fo(\()p Fi(Thr)l(e)l(ad)i
Fo(.)q Fi(Curr)l(entThr)l(e)l(ad)h Fo(\);)26 b Fh(g)-60
2810 y Fp(priv)-5 b(ate)27 b(v)n(oid)f Fi(p)l(op)5 b
Fo(\(\))25 b Fh(f)h Fi(q)7 b Fo(.)q Fi(De)l(queue)g Fo(\(\);)25
b Fh(g)-60 2893 y Fp(public)j(b)r(o)r(ol)f Fi(empty)34
b Fh(f)p Fi(get)8 b Fh(f)26 b Fp(return)h Fo(\()p Fi(q)7
b Fo(.)p Fi(Count)34 b Fo(==)25 b(0\);)h Fh(gg)-60 2976
y Fp(public)i(v)n(oid)e Fi(yield)7 b Fo(\()p Fi(obje)l(ct)34
b(myCurr)l(entL)l(o)l(ck)11 b Fo(\))25 b Fh(f)10 3059
y Fi(add)8 b Fo(\(\);)10 3142 y Fi(Monitor)g Fo(.)q Fi(Exit)f
Fo(\()p Fi(myCurr)l(entL)l(o)l(ck)k Fo(\);)10 3225 y
Fp(try)26 b Fh(f)79 3308 y Fi(Thr)l(e)l(ad)9 b Fo(.)p
Fi(Sle)l(ep)c Fo(\()p Fi(Time)l(out)j Fo(.)p Fi(In\014nite)e
Fo(\);)10 3391 y Fh(g)10 3474 y Fp(catc)n(h)26 b Fo(\()p
Fi(Thr)l(e)l(adInterrupte)l(dExc)l(eption)11 b Fo(\))26
b Fh(fg)10 3557 y Fi(Monitor)8 b Fo(.)q Fi(Enter)h Fo(\()p
Fi(myCurr)l(entL)l(o)l(ck)i Fo(\);)10 3640 y Fi(p)l(op)e
Fo(\(\);)-60 3723 y Fh(g)-60 3806 y Fp(public)28 b(v)n(oid)e
Fi(wakeup)5 b Fo(\(\))26 b Fh(f)p Fo(\(\()p Fi(Thr)l(e)l(ad)9
b Fo(\))25 b Fi(q)7 b Fo(.)q Fi(Pe)l(ek)i Fo(\(\)\).)o
Fi(Interrupt)h Fo(\(\);)p Fh(g)-129 3889 y(g)-152 4015
y Fo(\(The)26 b(sp)r(eci\014cation)h(of)g(monitors)f(guaran)n(tees)h
(that)f(an)g(in)n(terrupt)-152 4098 y(on)j(a)g(non-sleeping)g(thread)f
(do)r(es)h(not)g(happ)r(en)f(un)n(til)g(the)g(thread)-152
4181 y(actually)21 b(do)r(es)h(call)f Fi(Thr)l(e)l(ad)9
b Fo(.)q Fi(Sle)l(ep)c Fo(,)22 b(hence)e(it)h Fi(is)26
b Fo(correct)c(to)e(release)-152 4264 y(the)26 b(lo)r(c)n(k)g(b)r
(efore)g(en)n(tering)g(the)f Fp(try)h(catc)n(h)h Fo(statemen)n(t.\))-40
4347 y(As)f(the)e(thread)i(a)n(w)n(ak)n(ens)f(in)h(the)e
Fp(catc)n(h)i Fo(clause,)h(it)e(\014rst)h(reac-)-152
4430 y(quires)39 b(the)e(lo)r(c)n(k,)43 b(whic)n(h)38
b(migh)n(t)f(blo)r(c)n(k)h(the)g(thread)g(again;)46 b(w)n(e)-152
4513 y(exp)r(ect)33 b(this)g(case)i(to)e(b)r(e)g(uncommon.)55
b(The)34 b(thread)f(de-queued)-152 4596 y(and)26 b(discarded)g(b)n(y)e
Fi(p)l(op)6 b Fo(\(\))25 b(is)h(alw)n(a)n(ys)h(the)e(curren)n(t)g
(thread.)-152 4781 y Fp(4.2.2)88 b(Generated)30 b(Sync)n(hronization)i
(Co)r(de)-152 4913 y Fo(Figure)41 b(1)f(sho)n(ws)g(a)g(simple)f(p)r
(olyphonic)h(class)h Fi(T)-6 b(oken)46 b Fo(and)39 b(its)-152
4996 y(translation)f(in)n(to)e(ordinary)h(C)790 4964
y Fn(])820 4996 y Fo(,)i(making)d(use)g(of)h(the)f(auxiliary)-152
5079 y(classes)e(de\014ned)c(ab)r(o)n(v)n(e.)51 b Fi(T)-6
b(oken)38 b Fo(implemen)n(ts)30 b(an)h Fg(n)p Fo(-tok)n(en)g(lo)r(c)n
(k.)-152 5162 y(It)47 b(has)g(a)h(regular)g(sync)n(hronous)e(metho)r
(d,)52 b(an)47 b(async)n(hronous)-152 5245 y(metho)r(d,)25
b(and)g(a)h(single)h(c)n(hord)f(that)f(sync)n(hronizes)h(the)f(t)n(w)n
(o.)p Black Black Black 2108 487 a Fp(class)31 b Fi(T)-6
b(oken)33 b Fh(f)2177 570 y Fp(public)27 b Fi(T)-6 b(oken)7
b Fo(\()p Fp(in)n(t)26 b Fi(initial)p 3011 570 24 4 v
28 w(tokens)12 b Fo(\))25 b Fh(f)2246 653 y Fp(for)31
b Fo(\()5 b Fp(in)n(t)35 b Fi(i)40 b Fo(=)25 b(0;)34
b Fi(i)g Fg(<)43 b Fi(initial)p 3166 653 V 27 w(tokens)36
b Fo(;)j Fi(i)9 b Fo(++\))25 b Fi(r)l(ele)l(ase)8 b Fo(\(\);)2177
736 y Fh(g)2177 819 y Fp(public)27 b(v)n(oid)f Fi(gr)l(ab)6
b Fo(\()p Fp(in)n(t)26 b Fi(id)8 b Fo(\))25 b(&)g Fp(public)j(async)d
Fi(r)l(ele)l(ase)7 b Fo(\(\))26 b Fh(f)2246 902 y Fp(return)h
Fi(id)7 b Fo(;)2177 985 y Fh(g)2108 1068 y(g)p 2040 1141
2192 4 v 2108 1248 a Fp(class)31 b Fi(T)-6 b(oken)33
b Fh(f)2177 1331 y Fp(priv)-5 b(ate)27 b(const)f(in)n(t)g
Fi(m)p 2899 1331 24 4 v 28 w(gr)l(ab)32 b Fo(=)25 b(1)h
Fg(<<)f Fo(0;)2177 1414 y Fp(priv)-5 b(ate)27 b(const)f(in)n(t)g
Fi(m)p 2899 1414 V 28 w(r)l(ele)l(ase)33 b Fo(=)25 b(1)h
Fg(<<)f Fo(1;)2177 1497 y Fp(priv)-5 b(ate)27 b Fi(thr)l(e)l(adQ)34
b(gr)l(abQ)f Fo(=)26 b Fp(new)f Fi(thr)l(e)l(adQ)9 b
Fo(\(\);)2177 1580 y Fp(priv)-5 b(ate)27 b Fi(voidQ)32
b(r)l(ele)l(aseQ)i Fo(=)25 b Fp(new)h Fi(voidQ)7 b Fo(\(\);)2177
1746 y Fp(priv)-5 b(ate)27 b(const)f(in)n(t)g Fi(m)p
2899 1746 V 28 w(gr)l(ab)p 3064 1746 V 30 w(r)l(ele)l(ase)32
b Fo(=)26 b Fi(m)p 3494 1746 V 28 w(gr)l(ab)31 b Fh(j)26
b Fi(m)p 3800 1746 V 28 w(r)l(ele)l(ase)7 b Fo(;)2177
1829 y Fp(priv)-5 b(ate)27 b Fi(BitMask)34 b(s)e Fo(=)25
b Fp(new)g Fi(BitMask)9 b Fo(\(\);)2177 1912 y Fp(priv)-5
b(ate)27 b Fi(obje)l(ct)33 b(mlo)l(ck)h Fo(=)26 b Fi(gr)l(abQ)8
b Fo(;)2177 2078 y Fp(priv)-5 b(ate)27 b(v)n(oid)e Fi(sc)l(an)7
b Fo(\(\))26 b Fh(f)2255 2161 y Fp(if)42 b Fo(\()6 b
Fi(s)12 b Fo(.)6 b Fi(match)g Fo(\()p Fi(m)p 2759 2161
V 28 w(gr)l(ab)p 2924 2161 V 30 w(r)l(ele)l(ase)h Fo(\)\))25
b Fi(gr)l(abQ)8 b Fo(.)p Fi(wakeup)e Fo(\(\);)2177 2244
y Fh(g)2177 2327 y Fp(public)27 b Fi(T)-6 b(oken)7 b
Fo(\()p Fp(in)n(t)26 b Fi(initial)p 3011 2327 V 28 w(tokens)12
b Fo(\))25 b Fh(f)2246 2410 y Fp(for)31 b Fo(\()5 b Fp(in)n(t)35
b Fi(i)40 b Fo(=)25 b(0;)34 b Fi(i)g Fg(<)43 b Fi(initial)p
3166 2410 V 27 w(tokens)36 b Fo(;)j Fi(i)9 b Fo(++\))25
b Fi(r)l(ele)l(ase)8 b Fo(\(\);)2177 2493 y Fh(g)2184
2576 y Fo([)f Fp(OneW)-7 b(a)n(y)o Fo(])2177 2659 y Fp(public)27
b(v)n(oid)f Fi(r)l(ele)l(ase)7 b Fo(\(\))26 b Fh(f)2246
2742 y Fp(lo)r(c)n(k)q Fo(\()p Fi(mlo)l(ck)8 b Fo(\))25
b Fh(f)2315 2825 y Fi(r)l(ele)l(aseQ)10 b Fo(.)r Fi(add)f
Fo(\(\);)2324 2908 y Fp(if)48 b Fo(\(!)14 b Fi(s)e Fo(.)5
b Fi(match)i Fo(\()p Fi(m)p 2863 2908 V 28 w(r)l(ele)l(ase)g
Fo(\)\))25 b Fh(f)2384 2991 y Fi(s)12 b Fo(.)c Fi(set)13
b Fo(\()r Fi(m)p 2660 2991 V 28 w(r)l(ele)l(ase)g Fo(\);)2384
3074 y Fi(sc)l(an)g Fo(\(\);)26 b Fh(gg)2177 3157 y(g)2177
3240 y Fp(public)h(in)n(t)g Fi(gr)l(ab)6 b Fo(\()o Fp(in)n(t)27
b Fi(id)9 b Fo(\))25 b Fh(f)2246 3323 y Fi(Monitor)9
b Fo(.)p Fi(Enter)h Fo(\()o Fi(mlo)l(ck)f Fo(\);)2255
3406 y Fp(if)48 b Fo(\(!)14 b Fi(s)e Fo(.)5 b Fi(match)i
Fo(\()p Fi(m)p 2794 3406 V 28 w(gr)l(ab)f Fo(\)\))25
b Fp(goto)i Fi(now)8 b Fo(;)2183 3489 y Fi(later)22 b
Fo(:)2246 3572 y Fi(gr)l(abQ)8 b Fo(.)q Fi(yield)f Fo(\()p
Fi(mlo)l(ck)h Fo(\);)35 b Fp(if)42 b Fo(\()7 b Fi(gr)l(abQ)h
Fo(.)p Fi(empty)f Fo(\))26 b Fi(s)6 b Fo(.)q Fi(cle)l(ar)j
Fo(\()o Fi(m)p 3885 3572 V 28 w(gr)l(ab)d Fo(\);)2177
3656 y Fi(now)i Fo(:)2255 3739 y Fp(if)42 b Fo(\()6 b
Fi(s)12 b Fo(.)6 b Fi(match)g Fo(\()p Fi(m)p 2759 3739
V 28 w(r)l(ele)l(ase)h Fo(\)\))26 b Fh(f)2315 3822 y
Fi(r)l(ele)l(aseQ)10 b Fo(.)s Fi(get)24 b Fo(\(\);)50
b Fp(if)42 b Fo(\()6 b Fi(r)l(ele)l(aseQ)k Fo(.)r Fi(empty)e
Fo(\))26 b Fi(s)6 b Fo(.)p Fi(cle)l(ar)k Fo(\()q Fi(m)p
3904 3822 V 28 w(r)l(ele)l(ase)j Fo(\);)2315 3905 y Fi(sc)l(an)f
Fo(\(\);)2315 3988 y Fi(Monitor)d Fo(.)p Fi(Exit)f Fo(\()p
Fi(mlo)l(ck)g Fo(\);)2315 4071 y Fh(f)2384 4154 y Fp(return)27
b Fi(id)8 b Fo(;)25 b(//)i(source)f(co)r(de)j(for)39
b(the)31 b(pattern)2315 4237 y Fh(g)2246 4320 y(g)q Fp(else)o
Fh(f)2315 4403 y Fi(s)12 b Fo(.)c Fi(set)k Fo(\()s Fi(m)p
2591 4403 V 28 w(gr)l(ab)6 b Fo(\);)26 b Fp(goto)g Fi(later)13
b Fo(;)26 b Fh(gg)2108 4486 y(g)p Black 2273 4648 a Fo(Figure)g(1:)35
b(The)26 b Fi(T)-6 b(oken)32 b Fo(class)27 b(and)f(its)g(translation)p
Black Black Black 1921 5494 a(8)p Black eop
%%Page: 9 9
9 8 bop Black Black -40 -69 a Fo(W)-6 b(e)30 b(no)n(w)g(describ)r(e)g
(what)g(is)h(happ)r(ening)e(in)h(the)f(translations)-152
14 y(of)e(the)e(t)n(w)n(o)h(metho)r(ds:)-152 201 y Fp(4.2.3)88
b(Details)31 b(for)41 b Ff(r)l(ele)l(ase)-152 332 y Fo(After)19
b(taking)f(the)g(c)n(hord)g(lo)r(c)n(k,)i(w)n(e)f(add)f(the)g(message)g
(to)h(the)f(queue)-152 415 y(and,)29 b(unless)f(they)g(w)n(ere)g
(already)h(messages)g(stored)f(in)g Fi(r)l(ele)l(aseQ)9
b Fo(,)-152 498 y(w)n(e)26 b(up)r(date)g(the)f(mask)g(and)g(scan)h(for)
h(activ)n(e)e(c)n(hords.)-40 581 y(In)17 b(a)i(larger)g(class)g(with)f
(patterns)f(that)h(do)g(not)f(in)n(v)n(olv)n(e)25 b Fi(r)l(ele)l(ase)8
b Fo(,)-152 664 y(the)29 b Fi(sc)l(an)7 b Fo(\(\))28
b(statemen)n(t)g(could)h(b)r(e)f(usefully)i(inlined)e(and)h(sp)r
(ecial-)-152 747 y(ized:)46 b(w)n(e)32 b(only)f(need)g(to)g(test)h
(patterns)f(where)g Fp(async)26 b Fi(r)l(ele)l(ase)7
b Fo(\(\))-152 830 y(app)r(ears;)27 b(b)r(esides,)g(w)n(e)f(kno)n(w)f
(that)h(the)f Fi(m)p 1119 830 24 4 v 28 w(r)l(ele)l(ase)33
b Fo(bit)25 b(is)h(set.)-152 1016 y Fp(4.2.4)88 b(The)29
b(use)g(of)h(OneW)-7 b(a)n(y)-152 1148 y Fo(The)80 b(reader)f
(unfamiliar)h(with)g(C)1055 1116 y Fn(])1164 1148 y Fo(ma)n(y)e(w)n
(onder)h(wh)n(y)-152 1231 y(`)7 b([)g Fp(OneW)-7 b(a)n(y)o
Fo(])q(')23 b(app)r(ears)g(b)r(efore)h(the)e(translation)i(of)f(the)30
b Fi(r)l(ele)l(ase)20 b Fo(\(\))-152 1324 y(metho)r(d.)32
b(This)20 b(is)g(a)g(C)509 1292 y Fn(])559 1324 y Fo(attribute)858
1292 y Fm(6)912 1324 y Fo(whic)n(h)g(indicates)g(to)g(the)f(.NET)-152
1407 y(infrastructure)24 b(that)g(where)g(appropriate)g(\(e.g.)h(when)e
(calling)i(b)r(e-)-152 1490 y(t)n(w)n(een)30 b(di\013eren)n(t)f(mac)n
(hines\))g(calls)i(of)38 b Fi(r)l(ele)l(ase)20 b Fo(\(\))29
b(should)h(b)r(e)f(gen-)-152 1573 y(uinely)e(non-blo)r(c)n(king.)38
b(The)27 b(translation)h(adds)f(this)g(attribute)g(to)-152
1656 y(all)g(async)n(hronous)f(metho)r(ds.)-152 1842
y Fp(4.2.5)88 b(Details)31 b(for)f Ff(gr)l(ab)-152 1974
y Fo(After)35 b(taking)g(the)g(c)n(hord)g(lo)r(c)n(k,)j(w)n(e)d
(\014rst)g(c)n(hec)n(k)f(whether)h(there)-152 2057 y(are)e(already)g
(deferred)f Fi(gr)l(ab)6 b Fo(s)33 b(stored)g(in)f Fi(gr)l(abQ)8
b Fo(;)36 b(then,)d(this)g(call)-152 2140 y(cannot)23
b(pro)r(ceed)g(for)g(no)n(w:)33 b(w)n(e)23 b(enqueue)f(the)g(curren)n
(t)g(thread)g(and)-152 2223 y(will)27 b(retry)f(later.)-40
2306 y(Otherwise,)84 b(w)n(e)71 b(c)n(hec)n(k)g(whether)g(there)g(is)h
(\(a)f(least\))-152 2389 y(a)c(p)r(ending)73 b Fi(r)l(ele)l(ase)h
Fo(message)66 b(to)h(complete)e(the)h(pattern)-152 2472
y Fi(gr)l(ab)6 b Fo(\()p Fp(in)n(t)33 b Fi(id)8 b Fo(\))25
b(&)h Fp(async)f Fi(r)l(ele)l(ase)7 b Fo(\(\);)56 b(then,)50
b(w)n(e)c(can)g(select)h(this)-152 2555 y(pattern)29
b(for)h(immediate)e(execution,)i(and)e(otherwise)j(w)n(e)e(up)r(date)
-152 2638 y(the)e(mask)g(to)h(record)g(the)f(presence)g(of)i(deferred)e
Fi(gr)l(ab)6 b Fo(s,)29 b(enqueue)-152 2721 y(the)36
b(curren)n(t)f(thread,)k(and)c(will)i(retry)f(later.)66
b(\(In)35 b(classes)j(with)-152 2804 y(m)n(ultiple)22
b(patterns)h(for)h Fi(gr)l(ab)5 b Fo(,)24 b(w)n(e)f(w)n(ould)g(p)r
(erform)g(a)g(series)h(of)g(test)-152 2887 y(for)j(eac)n(h)f(p)r(oten)n
(tial)g(pattern.\))-40 2970 y(Notice)33 b(that)g(it)f(is)h(alw)n(a)n
(ys)h(safe)g(to)e(retry)-6 b(,)34 b(indep)r(enden)n(tly)d(of)-152
3053 y(the)26 b(sync)n(hronization)g(state.)-40 3136
y(Once)47 b(a)g(pattern)f(is)i(selected,)53 b(w)n(e)47
b(still)h(ha)n(v)n(e)e(to)h(up)r(date)-152 3219 y Fi(r)l(ele)l(aseQ)34
b Fo(and)25 b(the)g(mask.)34 b(\(Here,)25 b(w)n(e)h(don't)f(ha)n(v)n(e)
g(async)n(hronous)-152 3302 y(parameters;)34 b(more)d(generally)-6
b(,)33 b(w)n(e)f(w)n(ould)f(read)h(them)d(from)i(the)-152
3385 y(queue)e(and)h(bind)f(them)g(to)h(lo)r(cal)i(v)l(ariables.\))48
b(A)n(t)29 b(least)i(in)f(some)-152 3468 y(cases,)38
b(w)n(e)d(m)n(ust)e(c)n(hec)n(k)h(whether)g(there)g(are)h(still)h
(enough)e(mes-)-152 3551 y(sages)29 b(to)e(a)n(w)n(ak)n(en)g(another)g
(thread;)g(this)g(is)g(ac)n(hiev)n(ed)g(b)n(y)f Fi(sc)l(an)7
b Fo(\(\).)-152 3634 y(Finally)-6 b(,)33 b(w)n(e)d(release)i(the)e(lo)r
(c)n(k)h(and)f(en)n(ter)g(the)g(blo)r(c)n(k)h(asso)r(ciated)-152
3717 y(with)26 b(the)e(selected)i(pattern;)f(this)g(co)r(de)h(is)f
(executed)f(in)h(the)g(same)-152 3800 y(con)n(text)g(as)i(in)e(the)h
(source)g(program.)-152 3986 y Fp(4.2.6)88 b(Wh)n(y)30
b(rescanning?)-152 4118 y Fo(The)h(reader)g(ma)n(y)e(w)n(onder)i(wh)n
(y)f(w)n(e)h(systematically)g(call)h Fi(sc)l(an)7 b Fo(\(\))-152
4201 y(after)27 b(selecting)g(a)f(c)n(hord)f(for)i(immediate)d
(execution)i(\(just)g(b)r(efore)-152 4284 y(releasing)h(the)e(lo)r(c)n
(k)g(and)g(executing)g(the)f(guarded)h(blo)r(c)n(k\).)34
b(In)25 b(our)-152 4367 y(simple)37 b(example,)i(this)f(is)f
(unnecessary)g(whenev)n(er)g(w)n(e)g(already)-152 4450
y(kno)n(w)25 b(that)g(this)h(w)n(as)g(the)f(last)h Fi(sc)l(an)7
b Fo(\(\))25 b(call)h(or)g(the)e(last)34 b Fi(r)l(ele)l(ase)20
b Fo(\(\))-152 4533 y(message.)41 b(In)27 b(general,)i(ho)n(w)n(ev)n
(er,)f(this)g(ma)n(y)e(b)r(e)i(required)f(to)g(pre-)-152
4616 y(v)n(en)n(t)e(deadlo)r(c)n(ks.)35 b(Consider)27
b(for)f(instance)g(the)f(p)r(olyphonic)h(class)-129 4745
y Fp(class)32 b Fi(F)-6 b(o)l(o)31 b Fh(f)-60 4828 y
Fp(v)n(oid)26 b Fi(m1)10 b Fo(\(\))26 b(&)f Fp(async)g
Fi(s)7 b Fo(\(\))25 b(&)g Fp(async)h Fi(t)8 b Fo(\(\))25
b Fh(f)p Fo(...)p Fh(g)-60 4911 y Fp(v)n(oid)h Fi(m2)10
b Fo(\(\))26 b(&)f Fp(async)g Fi(s)7 b Fo(\(\))25 b Fh(f)p
Fo(...)p Fh(g)p Black -152 4972 797 4 v -65 5020 a Fl(6)-33
5045 y Fj(A)n(ttributes)d(are)h(a)g(standardized,)e(declarativ)n(e)g(w)
n(a)n(y)j(of)f(adding)f(custom)-152 5112 y(metadata)f(to)i(.NET)f
(programs.)29 b(Co)r(de-manipulating)19 b(to)r(ols)k(and)e(libraries,)
-152 5178 y(suc)n(h)j(as)g(compilers,)e(debuggers)g(or)i(the)f(ob)t
(ject)f(serialization)g(libraries)h(can)-152 5245 y(then)e(use)h
(attribute)f(information)g(to)h(v)l(ary)h(their)e(b)r(eha)n(viour.)p
Black Black Black 2132 -69 a Fp(v)n(oid)26 b Fi(m3)10
b Fo(\(\))25 b(&)h Fp(async)f Fi(t)8 b Fo(\(\))25 b Fh(f)p
Fo(...)p Fh(g)2063 14 y(g)2040 147 y Fo(and)g(the)g(follo)n(wing)k
(global)e(execution)e(trace,)h(with)g(four)g(threads:)p
Black 2040 290 a Fp(Thread)j(1)p Black 42 w Fo(calls)e
Fi(m1)10 b Fo(\(\))25 b(and)h(blo)r(c)n(ks.)p Black 2040
433 a Fp(Thread)j(2:)p Black 42 w Fo(calls)e Fi(m2)10
b Fo(\(\))25 b(and)g(blo)r(c)n(ks.)p Black 2040 576 a
Fp(Thread)k(0:)p Black 42 w Fo(calls)f Fi(t)13 b Fo(\(\))25
b(then)g Fi(s)10 b Fo(\(\),)26 b(a)n(w)n(aking)g(Thread)g(1)p
Black 2040 718 a Fp(Thread)j(3:)p Black 42 w Fo(calls)e
Fi(m3)10 b Fo(\(\))25 b(and)g(succeeds,)i(consuming)f
Fi(t)13 b Fo(\(\).)p Black 2040 861 a Fp(Thread)29 b(1:)p
Black 42 w Fo(retries)d Fi(m1)10 b Fo(\(\))25 b(and)h(blo)r(c)n(ks)g
(again.)2040 1004 y(With)41 b(this)g(sc)n(heduling,)k(Thread)c(3)h
(preempts)d(Thread)j(1)f(and)2040 1087 y(\\steals")32
b(its)f(message)g Fi(t)13 b Fo(\(\).)48 b(Although)29
b(Thread)h(1)h(blo)r(c)n(ks)f(again,)2040 1170 y(the)d(remaining)h
(message)g Fi(s)10 b Fo(\(\))27 b(su\016ces)i(to)e(run)g(Thread)h(2.)41
b(But)28 b(if)2040 1253 y(neither)d(Thread)g(3)g(nor)g(Thread)g(1)g(a)n
(w)n(ak)n(es)g(Thread)g(2,)h(w)n(e)f(ha)n(v)n(e)f(a)2040
1336 y(race)i(condition)g(leading)h(to)f(a)g(deadlo)r(c)n(k.)2152
1419 y(Accordingly)-6 b(,)23 b(in)g(our)f(implemen)n(tation,)g(the)g
(sync)n(hronization)2040 1502 y(co)r(de)h(in)f(Thread)h(3)f(p)r
(erforms)g(an)h(additional)g Fi(sc)l(an)7 b Fo(\(\))22
b(that)g(a)n(w)n(ak)n(es)2040 1585 y(Thread)k(2)g(in)g(suc)n(h)f
(unfortunate)g(cases.)2152 1668 y(In)33 b(man)n(y)f(sp)r(ecial)j
(cases,)j(the)33 b(\014nal)h Fi(sc)l(an)7 b Fo(\(\))33
b(could)h(safely)h(b)r(e)2040 1751 y(omitted;)e(ho)n(w)n(ev)n(er,)g
(this)e(w)n(ould)h(unnecessarily)f(complicate)h(the)2040
1834 y(translation.)2040 2022 y Fp(4.2.7)88 b(Deadlo)r(c)n(k)30
b(F)-7 b(reedom)2040 2153 y Fo(Next,)35 b(w)n(e)f(sk)n(etc)n(h)f(a)h
(pro)r(of)h(that)e(our)h(translation)g(do)r(es)h(not)e(in-)2040
2236 y(tro)r(duce)28 b(deadlo)r(c)n(ks.)42 b(\(Of)28
b(course,)i(calls)f(in)n(v)n(olving)f(a)g(c)n(hord)g(that)2040
2319 y(is)f(nev)n(er)g(\014red)f(ma)n(y)g(b)r(e)g(deadlo)r(c)n(k)n(ed,)
i(and)e(our)h(translation)h(m)n(ust)2040 2402 y(implemen)n(t)c(those)i
(deadlo)r(c)n(ks.\))2152 2485 y(W)-6 b(e)30 b(sa)n(y)g(that)f(an)h(ob)t
(ject)h(is)g Fi(active)36 b Fo(when)30 b(there)g(are)h(enough)2040
2568 y(calls)g(in)e(the)g(queues)g(to)h(trigger)g(one)g(of)g(its)g
(patterns;)i(assuming)2040 2651 y(a)d(fair)g(sc)n(heduling)f(of)h
(running)f(pro)r(cesses,)i(w)n(e)f(sho)n(w)f(that)g(activ)n(e)2040
2734 y(states)23 b(are)g(transien)n(t.)33 b(W)-6 b(e)22
b(pro)n(v)n(e)g(the)g(in)n(v)l(arian)n(t:)32 b Fi(when)25
b(an)f(obje)l(ct)2040 2817 y(is)29 b(active,)h(at)g(le)l(ast)g(one)f
(thr)l(e)l(ad)i(on)f(top)g(of)e(a)i(queue)g(is)f(sche)l(dule)l(d)2040
2900 y(for)f(exe)l(cution)h(and)f(c)l(an)g(suc)l(c)l(e)l(e)l(d.)p
Black 2126 3043 a Fh(\017)p Black 42 w Fo(After)e Fi(sc)l(an)7
b Fo(\(\),)25 b(the)h(in)n(v)l(arian)n(t)f(alw)n(a)n(ys)i(holds.)p
Black 2126 3186 a Fh(\017)p Black 42 w Fo(An)f(ob)t(ject)h(b)r(ecomes)f
(activ)n(e)h(when)f(an)g(async)n(hronous)h(mes-)2206
3269 y(sage)g(is)f(receiv)n(ed,)g(and)g(this)f(alw)n(a)n(ys)i(triggers)
g(a)f(scan.)p Black 2126 3412 a Fh(\017)p Black 42 w
Fo(A)18 b(thread)g(whose)i(p)r(olyphonic)e(call)i(succeeds)f(\(and)f
(th)n(us)g(con-)2206 3495 y(sumes)25 b(async)n(hronous)h(messages\))g
(also)h(triggers)g(a)f(scan.)2040 3637 y(When)g(the)h(algorithm)g(a)n
(w)n(ak)n(es)h(a)f(thread,)g(it)g(is)h(guaran)n(teed)f(that)2040
3721 y(this)i(thread)g(ma)n(y)e(succeed)i(if)h(immediately)d(sc)n
(heduled,)j(but)e(not)2040 3804 y(that)d(it)h(will)h(necessarily)g
(succeed.)2040 3991 y Fp(4.2.8)88 b(F)-7 b(ully)30 b(Async)n(hronous)g
(P)n(atterns)2040 4122 y Fo(T)-6 b(o)29 b(complete)f(the)g(description)
h(of)g(our)f(implemen)n(tation,)h(w)n(e)f(ex-)2040 4205
y(plain)36 b(the)e(compilation)i(of)g(fully)g(asyc)n(hronous)f(c)n
(hords.)63 b(When)2040 4288 y(suc)n(h)25 b(c)n(hords)h(are)g(\014red,)g
(there)f(is)h(no)g(thread)f(at)h(hand)f(to)h(execute)2040
4371 y(their)g(b)r(o)r(dy)-6 b(,)25 b(so)h(a)g(new)g(thread)f(m)n(ust)g
(b)r(e)g(created.)2152 4454 y(T)-6 b(o)27 b(illustrate)g(this)f(case,)h
(assume)f(the)f(class)j Fi(T)-6 b(oken)33 b Fo(also)27
b(con-)2040 4538 y(tains)f(the)g(async)n(hronous)f(metho)r(d)g
(declaration)2132 4670 y Fp(public)j(async)d Fi(live)6
b Fo(\()o Fp(string)28 b Fi(s)6 b Fo(,)p Fp(in)n(t)27
b Fi(id)7 b Fo(\))25 b Fh(f)2201 4753 y Fi(gr)l(ab)6
b Fo(\()p Fi(id)20 b Fo(\);)47 b Fi(r)l(ele)l(ase)26
b Fo(\(\);)2201 4836 y Fi(Console)7 b Fo(.)p Fi(WriteLine)f
Fo(\()p Fi(s)g Fo(\);)2132 4919 y Fh(g)2040 5052 y Fo(The)26
b(generated)g(co)r(de)g(is)g(large)h(but)e(straigh)n(tforw)n(ard:)p
Black 1921 5494 a(9)p Black eop
%%Page: 10 10
10 9 bop Black Black -60 -69 a Fp(priv)-5 b(ate)27 b(class)f
Fi(liveA)n(r)l(gs)33 b Fh(f)10 14 y Fp(public)27 b(string)g
Fi(s)7 b Fo(;)26 b Fp(public)h(in)n(t)f Fi(id)8 b Fo(;)10
97 y Fp(public)27 b Fi(liveA)n(r)l(gs)7 b Fo(\()p Fp(string)27
b Fi(s)8 b Fo(,)28 b Fp(in)n(t)33 b Fi(id)12 b Fo(\))25
b Fh(f)79 180 y Fp(this)5 b Fo(.)t Fi(s)33 b Fo(=)25
b Fi(s)11 b Fo(;)30 b Fp(this)6 b Fo(.)t Fi(id)33 b Fo(=)25
b Fi(id)10 b Fo(;)10 263 y Fh(g)-60 346 y(g)-60 429 y
Fp(priv)-5 b(ate)27 b(v)n(oid)f Fi(liveBo)l(dy)7 b Fo(\()p
Fi(obje)l(ct)33 b(o)5 b Fo(\))26 b Fh(f)13 512 y Fi(liveA)n(r)l(gs)45
b(a)31 b Fo(=)26 b(\()p Fi(liveA)n(r)l(gs)6 b Fo(\))p
Fi(o)g Fo(;)10 596 y Fp(string)27 b Fi(s)32 b Fo(=)25
b Fi(a)6 b Fo(.)q Fi(s)i Fo(;)29 b Fp(in)n(t)k Fi(id)g
Fo(=)25 b Fi(a)6 b Fo(.)q Fi(id)k Fo(;)10 679 y Fh(f)79
762 y Fi(gr)l(ab)c Fo(\()o Fi(id)21 b Fo(\);)46 b Fi(r)l(ele)l(ase)26
b Fo(\(\);)79 845 y Fi(Console)6 b Fo(.)p Fi(WriteLine)g
Fo(\()p Fi(s)h Fo(\);)10 928 y Fh(g)-60 1011 y(g)-53
1094 y Fo([)g Fp(OneW)-7 b(a)n(y)o Fo(])-60 1177 y Fp(public)28
b(v)n(oid)e Fi(live)5 b Fo(\()p Fp(string)27 b Fi(s)6
b Fo(,)q Fp(in)n(t)26 b Fi(id)11 b Fo(\))26 b Fh(f)13
1260 y Fi(liveA)n(r)l(gs)45 b(a)31 b Fo(=)26 b Fp(new)f
Fi(liveA)n(r)l(gs)7 b Fo(\()p Fi(s)f Fo(,)p Fi(id)i Fo(\);)10
1343 y Fi(WaitCal)t(lb)l(ack)33 b(c)d Fo(=)c Fp(new)f
Fi(WaitCal)t(lb)l(ack)8 b Fo(\()p Fi(liveBo)l(dy)f Fo(\);)10
1426 y Fi(Thr)l(e)l(adPo)l(ol)i Fo(.)p Fi(QueueUserWorkItem)f
Fo(\()p Fi(c)t Fo(,)q Fi(a)e Fo(\);)-60 1509 y Fh(g)-129
1592 y(g)-152 1721 y Fo(W)-6 b(e)22 b(use)g(an)g(auxiliary)g(class)27
b Fi(liveA)n(r)l(gs)i Fo(to)22 b(pass)g(the)g(parameters)g(to)-152
1804 y(the)g(new)g(thread,)g(and)g(a)g(delegate)h(to)f(the)f(host)h(ob)
t(ject's)i Fi(liveBo)l(dy)-152 1887 y Fo(metho)r(d)19
b(to)g(resume)g(execution)g(within)h(the)f(same)g(ob)t(ject)h(con)n
(text.)-40 1970 y(More)47 b(generally)-6 b(,)51 b(for)c(a)f(c)n(hord)f
(con)n(taining)h(sev)n(eral)g(asyn-)-152 2053 y(c)n(hronous)21
b(metho)r(ds,)g(the)g(co)r(de)g(in)g(the)30 b Fi(live)c
Fo(metho)r(d)20 b(ab)r(o)n(v)n(e)g(w)n(ould)-152 2136
y(o)r(ccur)k(instead)f(of)h Fi(mQ)7 b Fo(.)p Fi(wakeup)f
Fo(\(\))22 b(to)i(\014re)f(the)f(pattern)h(in)g(metho)r(d)-152
2219 y Fi(sc)l(an)7 b Fo(\(\).)-152 2413 y Fp(5)89 b(Curren)n(t)30
b(Status)g(and)g(F)-7 b(uture)29 b(W)-7 b(ork)-152 2570
y Fo(W)h(e)28 b(ha)n(v)n(e)f(t)n(w)n(o)h(protot)n(yp)r(e)g(implemen)n
(tations)f(of)h(P)n(olyphonic)h(C)1790 2538 y Fn(])1820
2570 y Fo(.)-152 2653 y(The)j(\014rst)f(is)h(a)f(mo)r(difed)g(v)n
(ersion)h(of)g(the)f(`o\016cial')i(C)1472 2621 y Fn(])1533
2653 y Fo(compiler,)-152 2736 y(whic)n(h)38 b(is)g(written)g(in)g(C++,)
j(whilst)d(the)g(second)g(is)g(a)g(simpler)-152 2819
y(source-to-source)f(translator)g(written)f(in)g(ML.)g(The)g(latter)g
(has)-152 2902 y(pro)n(v)n(en)19 b(in)n(v)l(aluable)g(in)g(explaining)h
(the)f(language)i(to)e(others)h(and)f(is)-152 2985 y(also)27
b(considerably)f(more)f(straighforw)n(ard)i(to)f(mo)r(dify)f(and)g
(main-)-152 3068 y(tain,)f(though)f(it)g(do)r(es)h(not)f(cop)r(e)g
(with)g(the)g(full)h(language.)35 b(As)23 b(our)-152
3151 y(initial)30 b(exp)r(eriences)e(using)g(P)n(olyphonic)h(C)1140
3119 y Fn(])1198 3151 y Fo(ha)n(v)n(e)e(b)r(een)h(p)r(ositiv)n(e,)-152
3234 y(w)n(e)i(are)g(building)f(a)g(more)g(robust,)h(full-featured)g
(and)f(main)n(tain-)-152 3317 y(able)h(implemen)n(tation)d(built)i(on)g
(an)g(`exp)r(erimen)n(tation-friendly')-152 3400 y(C)-97
3368 y Fn(])-67 3400 y Fo(-in-C)104 3368 y Fn(])160 3400
y Fo(compiler)e(b)r(eing)g(pro)r(duced)g(b)n(y)f(another)h(group)g
(within)-152 3483 y(Microsoft)h(Researc)n(h.)-40 3566
y(W)-6 b(e)19 b(ha)n(v)n(e)g(written)g(a)g(n)n(um)n(b)r(er)f(of)h
(non-trivial)h(samples)f(in)g(P)n(oly-)-152 3649 y(phonic)27
b(C)152 3617 y Fn(])182 3649 y Fo(,)h(including)f(some)g(w)n(eb)g(com)n
(binators)g(along)h(the)f(lines)-152 3732 y(of)j([5],)g(an)e(animated)g
(v)n(ersion)h(of)g(the)f(dining)h(philosphers)f(and)g(a)-152
3815 y(distributed)23 b(sto)r(c)n(k-dealing)h(sim)n(ulation)g(built)f
(on)g(.NET's)i(remot-)-152 3898 y(ing)h(infrastructure.)456
3866 y Fm(7)-40 3981 y Fo(Amongst)d(the)g(other)g(areas)i(for)f
(further)f(w)n(ork)g(on)h(P)n(olyphonic)-152 4064 y(C)-97
4032 y Fn(])-41 4064 y Fo(whic)n(h)i(w)n(e)g(think)e(are)j
(particularly)f(in)n(teresting)g(are:)-152 4250 y Fp(Concurrency)k(T)n
(yp)r(es)75 b Fo(As)25 b(suggested)g(in)f(our)h(examples,)g(it)f(is)
-152 4333 y(relativ)n(ely)31 b(easy)f(to)g(state)h(and)e(v)n(erify)h
(in)n(v)l(arian)n(ts)g(in)g(p)r(olyphonic)-152 4416 y(classes,)c(often)
d(from)g(the)f(shap)r(e)h(of)h(the)e(c)n(hords)h(and)f(the)g(visibilit)
n(y)-152 4499 y(of)27 b(their)e(metho)r(ds.)-40 4582
y(Sev)n(eral)d(t)n(yp)r(e)e(systems)g(and)h(other)g(static)h(analyses)h
(ha)n(v)n(e)d(b)r(een)-152 4665 y(dev)n(elop)r(ed)33
b(in)g(similar)h(setting)g(to)f(automate)g(the)g(pro)r(cess,)j(and)-152
4748 y(c)n(hec)n(k)23 b(\(or)i(ev)n(en)e(infer\))h(at)g(compile)g(time)
f(some)h(b)r(eha)n(vioral)g(prop-)-152 4831 y(erties)j(suc)n(h)e(as)p
Black -87 4966 a(1.)p Black 42 w(There)h(is)g(one,)g(or)g(at)g(most)e
(one,)i(p)r(ending)f(message)h(for)h(this)14 5049 y(async)n(hronous)f
(metho)r(d,)f(or)h(for)g(this)g(set)g(of)g(metho)r(ds.)p
Black -152 5105 797 4 v -65 5153 a Fl(7)-33 5178 y Fj(Remoting)31
b(pro)n(vides)g(ob)t(ject-orien)n(ted)d(RPC)k(o)n(v)n(er)f(TCP)h
(\(binary\))f(or)-152 5245 y(HTTP)23 b(\(SO)n(AP\).)p
Black Black Black Black 2105 -69 a Fo(2.)p Black 42 w(Calls)35
b(to)e(this)g(metho)r(d)f(are)h(alw)n(a)n(ys)h(ev)n(en)n(tually)f(pro)r
(cessed)2206 14 y(\(partial)27 b(deadlo)r(c)n(k-freedom\).)2040
157 y(The)i(p)r(oten)n(tial)h(b)r(ene\014ts)e(are)h(ob)n(vious:)41
b(the)29 b(compiler)g(can)g(catc)n(h)2040 240 y(more)23
b(programming)g(errors,)j(and)d(otherwise)i(pro)r(duce)f(more)f(e\016-)
2040 323 y(cien)n(t)29 b(co)r(de.)45 b(While)30 b(these)f(to)r(ols)h
(are)g(still)g(rather)f(complex,)g(this)2040 406 y(is)i(a)g(v)n(ery)e
(activ)n(e)i(area)g(of)h(researc)n(h)f(in)f(concurrency)-6
b(.)48 b(\(Needless)2040 489 y(to)25 b(sa)n(y)-6 b(,)24
b(it)h(w)n(ould)f(b)r(e)h(m)n(uc)n(h)d(more)i(di\016cult)g(to)h(c)n
(hec)n(k)f(those)g(prop-)2040 572 y(erties)g(on)g(a)f(co)r(de)h(that)f
(directly)h(uses)g(threads)f(and)g(lo)r(c)n(ks)h(instead)2040
655 y(of)j(c)n(hords.\))2040 843 y Fp(Timeouts)33 b(and)h(Priorities)80
b Fo(In)28 b(terms)h(of)h(expressiv)n(eness,)g(it)2040
926 y(is)d(tempting)e(to)i(supplemen)n(t)d(the)i(syn)n(tax)g(for)h(c)n
(hords)f(with)h(some)2040 1009 y(declarativ)n(e)22 b(supp)r(ort)e(for)i
(priorities)h(or)e(timeouts)f(and,)i(more)f(gen-)2040
1092 y(erally)-6 b(,)35 b(to)e(pro)n(vide)g(a)g(\014ner)f(con)n(trol)h
(o)n(v)n(er)g(dynamic)e(sc)n(heduling.)2040 1175 y(W)-6
b(e)20 b(ha)n(v)n(e)g(a)h(plausible-lo)r(oking)h(design)f(for)g(a)g
(timeout)e(mec)n(hanism)2040 1258 y(whic)n(h)26 b(w)n(e)g(plan)g(to)f
(implemen)n(t)f(and)h(ev)l(aluate)h(so)r(on.)2040 1446
y Fp(Optimizations)80 b Fo(There)39 b(are)h(man)n(y)d(opp)r(ortunities)
j(for)g(opti-)2040 1529 y(mizing)c(the)f(simple-minded)e(implemen)n
(tation)h(describ)r(ed)i(here.)2040 1612 y(Some)23 b(of)h(these)g
(require)f(prop)r(er)h(static)g(analysis,)i(whereas)e(others)2040
1695 y(could)33 b(usefully)g(b)r(e)g(implemen)n(ted)e(on)h(the)h(basis)
h(of)f(more)g(naiv)n(e)2040 1778 y(compile-time)25 b(c)n(hec)n(ks:)p
Black 2126 1920 a Fh(\017)p Black 42 w Fo(Lo)n(w)n(er-lev)n(el)31
b(concurrency)f(con)n(trol.)48 b(There)31 b(are)g(situations)2206
2003 y(when)e(w)n(e)g(could)g(safely)h(`fuse')g(successiv)n(e)g
(critical)g(sections)2206 2086 y(whic)n(h)18 b(are)g(protected)g(b)n(y)
f(the)g(same)h(lo)r(c)n(k,)i(for)f(example)e(when)2206
2170 y(a)39 b(b)r(ounded)f(series)i(of)g(async)n(hronous)f(messages)g
(are)h(sen)n(t)2206 2253 y(to)29 b(the)f(same)h(ob)t(ject,)h(or)f(when)
g(a)g(c)n(hord)f(b)r(o)r(dy)g(sends)h(mes-)2206 2336
y(sages)g(to)e Fp(this)q Fo(.)38 b(Purely)27 b(async)n(hronous)g(c)n
(hords)g(whic)n(h)g(only)2206 2419 y(p)r(erform)i(v)n(ery)g(brief)g
(terminating)g(computations)g(\(suc)n(h)g(as)2206 2502
y(sending)23 b(other)f(messages\))h(can)g(also)g(b)r(e)g(compiled)e(to)
i(run)f(in)2206 2585 y(the)j(in)n(v)n(oking)h(thread,)f(rather)h(than)f
(a)h(new)g(one.)p Black 2126 2727 a Fh(\017)p Black 42
w Fo(Queue)c(optimization.)34 b(`A\016ne')23 b(metho)r(ds,)g(for)h
(whic)n(h)e(it)h(can)2206 2810 y(b)r(e)28 b(determined)f(that)h(there)g
(can)g(b)r(e)g(at)h(most)f(one)g(p)r(ending)2206 2893
y(call)33 b(on)f(a)g(particular)h(ob)t(ject,)i(ma)n(y)30
b(b)r(e)i(compiled)f(without)2206 2976 y(queues.)2040
3172 y Fp(6)89 b(Conclusions)2040 3329 y Fo(Async)n(hronous)36
b(concurren)n(t)g(programming)g(is)h(b)r(ecoming)g(more)2040
3412 y(imp)r(ortan)n(t)29 b(and)h(widespread)h(but)e(is)i(still)g
(extremely)e(hard.)48 b(W)-6 b(e)2040 3495 y(ha)n(v)n(e)33
b(designed)g(and)g(implemen)n(ted)e(a)j(Join-based)g(extension)f(of)
2040 3578 y(C)2095 3546 y Fn(])2150 3578 y Fo(whic)n(h)25
b(is)g(simple,)g(expressiv)n(e,)g(and)f(can)h(b)r(e)g(e\016cien)n(tly)g
(imple-)2040 3661 y(men)n(ted.)40 b(In)27 b(our)i(exp)r(erience,)g
(writing)g(correct)f(concurren)n(t)g(pro-)2040 3744 y(grams)c(is)g
(considerably)g(less)h(di\016cult)e(in)h(P)n(olyphonic)g(C)3738
3712 y Fn(])3791 3744 y Fo(than)g(in)2040 3827 y(ordinary)j(C)2406
3796 y Fn(])2463 3827 y Fo(\(though)f(w)n(e)i(w)n(ould)f(certainly)g
(not)g(go)h(so)f(far)h(as)f(to)2040 3910 y(claim)f(that)f(it)h(is)g
Fi(e)l(asy)7 b Fo(.)14 b(.)f(.)h(\).)2152 3993 y(The)19
b(in)n(tegration)h(of)f(the)f(Join-based)i(constructs)e(with)h(ob)t
(jects)2040 4076 y(and)j(the)f(existing)i(platform)e(supp)r(ort)h(for)h
(concurrency)e(is)h(not)g(en-)2040 4159 y(tirely)28 b(straigh)n(tforw)n
(ard)h({)f(our)g(implemen)n(tation)e(is)i(sligh)n(tly)g(con-)2040
4242 y(strained)j(b)n(y)f(the)g(threads)h(and)f(lo)r(c)n(ks)i(mo)r(del)
e(and)g(some)h(uses)g(of)2040 4325 y(existing)23 b(libraries)h(and)e
(framew)n(orks)g(require)h(a)f(little)h(`imp)r(edence)2040
4408 y(matc)n(hing'.)47 b(Nev)n(ertheless,)32 b(the)d(new)h(constructs)
h(seem)e(to)h(w)n(ork)2040 4491 y(w)n(ell)d(in)e(practice.)2040
4679 y Fp(Ac)n(kno)n(wledgemen)n(ts)75 b Fo(Thanks)28
b(to)h(Mark)g(Shin)n(w)n(ell,)g(who)g(did)2040 4762 y(the)24
b(initial)i(implemen)n(tation)e(w)n(ork)h(on)g(the)f(P)n(olyphonic)h(C)
3816 4730 y Fn(])3871 4762 y Fo(com-)2040 4845 y(piler)h(during)g(an)f
(in)n(ternship)g(at)h(Microsoft)i(Researc)n(h.)p Black
1902 5494 a(10)p Black eop
%%Page: 11 11
11 10 bop Black Black -152 -69 a Fp(References)p Black
-113 88 a Fo([1])p Black 42 w(Gul)29 b(Agha,)h(P)n(eter)f(W)-6
b(egner,)30 b(and)e(Akinori)h(Y)-6 b(oneza)n(w)n(a.)44
b Fi(R)l(e-)9 171 y(se)l(ar)l(ch)36 b(Dir)l(e)l(ctions)f(in)e(Concurr)l
(ent)k(Obje)l(ct-Oriente)l(d)f(Pr)l(o-)9 254 y(gr)l(amming)p
Fo(.)f(MIT)26 b(Press,)h(1993.)p Black -113 389 a([2])p
Black 42 w(Pierre)46 b(America.)91 b(Issues)46 b(in)e(the)h(design)g
(of)h(a)f(parallel)9 472 y(ob)t(ject-orien)n(ted)31 b(language.)51
b Fi(F)-6 b(ormal)32 b(Asp)l(e)l(cts)i(of)e(Comput-)9
555 y(ing)p Fo(,)26 b(1\(4\):366{411,)k(1989.)p Black
-113 690 a([3])p Black 42 w(A.)k(D.)f(Birrell.)60 b(An)32
b(in)n(tro)r(duction)i(to)g(programming)f(with)9 773
y(threads.)26 b(Researc)n(h)20 b(Rep)r(ort)g(35,)i(DEC)f(SR)n(C,)f(Jan)
n(uary)g(1989.)p Black -113 908 a([4])p Black 42 w(A.)f(D.)h(Birrell,)i
(J.)e(V.)f(Guttag,)i(J.)f(J.)g(Horning,)h(and)e(R.)g(Levin.)9
991 y(Sync)n(hronization)k(primitiv)n(es)f(for)h(a)g(m)n(ultipro)r
(cessor:)34 b(A)22 b(for-)9 1074 y(mal)i(sp)r(eci\014cation.)34
b(Researc)n(h)24 b(Rep)r(ort)g(20,)i(DEC)f(SR)n(C,)f(Au-)9
1157 y(gust)i(1987.)p Black -113 1292 a([5])p Black 42
w(Luca)g(Cardelli)i(and)e(Ro)n(w)n(an)g(Da)n(vies.)36
b(Service)26 b(com)n(binators)9 1375 y(for)33 b(w)n(eb)e(computing.)51
b Fi(Softwar)l(e)34 b(Engine)l(ering)p Fo(,)g(25\(3\):309{)9
1458 y(316,)27 b(1999.)p Black -113 1593 a([6])p Black
42 w(S.)g(Conc)n(hon)f(and)g(F.)h(Le)g(F)-6 b(essan)n(t.)37
b(Jo)r(caml:)g(Mobile)27 b(agen)n(ts)9 1676 y(for)g(Ob)t(jectiv)n
(e-Caml.)36 b(In)26 b Fi(First)i(International)h(Symp)l(osium)9
1759 y(on)43 b(A)l(gent)g(Systems)h(and)f(Applic)l(ations)g
(\(ASA'99\)/Thir)l(d)9 1842 y(International)37 b(Symp)l(osium)f(on)g
(Mobile)f(A)l(gents)i(\(MA'99\))p Fo(,)9 1925 y(pages)f(22{29.)h(IEEE)e
(Computer)f(So)r(ciet)n(y)-6 b(,)37 b(Octob)r(er)e(1999.)9
2008 y(Soft)n(w)n(are)41 b(and)f(do)r(cumen)n(tation)f(a)n(v)l(ailable)
i(from)f Fa(http://)9 2091 y(pauillac.inria.fr/jocaml)p
Fo(.)p Black -113 2226 a([7])p Black 42 w(Da)n(vid)32
b(L.)g(Detlefs,)j(K.)d(Rustan,)h(M.)g(Leino,)h(Greg)f(Nelson,)9
2309 y(and)19 b(James)h(B.)f(Saxe.)24 b(Extended)18 b(static)i(c)n(hec)
n(king.)k(Researc)n(h)9 2392 y(Rep)r(ort)i(159,)h(DEC)f(SR)n(C,)f
(Decem)n(b)r(er)g(1998.)p Black -113 2526 a([8])p Black
42 w(C.)42 b(F)-6 b(ournet)40 b(and)g(G.)h(Gon)n(thier.)80
b(The)41 b(join)g(calculus:)65 b(a)9 2609 y(language)53
b(for)f(distributed)f(mobile)g(programming.)110 b(In)9
2692 y Fi(Pr)l(o)l(c)l(e)l(e)l(dings)37 b(of)e(the)h(Applie)l(d)f
(Semantics)h(Summer)f(Scho)l(ol)9 2775 y(\(APPSEM\),)41
b(Caminha,)i(Septemb)l(er)f(2000)p Fo(.)77 b(T)-6 b(o)40
b(app)r(ear.)9 2858 y(Draft)62 b(a)n(v)l(ailable)h(from)f
Fa(http://research.microsoft.)9 2942 y(com/~fournet)p
Fo(.)p Black -113 3076 a([9])p Black 42 w(C.)44 b(F)-6
b(ournet)42 b(and)h(G.)g(Gon)n(thier.)86 b(The)43 b(re\015exiv)n(e)f(c)
n(hemi-)9 3159 y(cal)37 b(abstract)f(mac)n(hine)e(and)h(the)g
(join-calculus.)66 b(In)34 b Fi(Pr)l(o)l(c.)9 3242 y(POPL'96)p
Fo(,)26 b(pages)h(372{385.)h(A)n(CM,)f(Jan)n(uary)e(1996.)p
Black -152 3377 a([10])p Black 43 w(C.)39 b(F)-6 b(ournet,)41
b(C.)e(Lanev)n(e,)i(L.)d(Maranget,)43 b(and)38 b(D.)g(R)n(\023)-36
b(em)n(y)-6 b(.)9 3460 y(Inheritance)42 b(in)h(the)e(join-calculus)j
(\(extended)d(abstract\).)9 3543 y(In)31 b Fi(FST)h(TCS)h(2000:)45
b(F)-6 b(oundations)35 b(of)d(Softwar)l(e)i(T)-6 b(e)l(chnol-)9
3626 y(o)l(gy)41 b(and)g(The)l(or)l(etic)l(al)h(Computer)f(Scienc)l(e)p
Fo(,)k(v)n(olume)38 b(1974)9 3709 y(of)i Fi(LNCS)p Fo(,)f(pages)g
(397{408,)45 b(New)39 b(Delhi,)j(India,)g(Decem-)9 3792
y(b)r(er)30 b(2000.)i(Springer-V)-6 b(erlag.)46 b(F)-6
b(ull)30 b(v)n(ersion)g(a)n(v)l(ailable)h(from)9 3875
y Fa(http://research.microsoft.co)q(m/~f)q(ourne)q(t)p
Fo(.)p Black -152 4010 a([11])p Black 43 w(J.)21 b(Gosling,)i(B.)e(Jo)n
(y)-6 b(,)22 b(and)d(G.)i(Steele.)26 b(Threads)21 b(and)e(lo)r(c)n(ks.)
26 b(In)9 4093 y Fi(The)31 b(Java)g(L)l(anguage)h(Sp)l(e)l(ci\014c)l
(ation)p Fo(,)f(c)n(hapter)e(17.)g(Addison)9 4176 y(W)-6
b(esley)g(,)26 b(1996.)p Black -152 4311 a([12])p Black
43 w(Y.)k(Gurevic)n(h,)h(W.)e(Sc)n(h)n(ulte,)i(and)e(C.)i(W)-6
b(allace.)47 b(In)n(v)n(estigat-)9 4394 y(ing)26 b(ja)n(v)l(a)f
(concurrency)f(using)i(abstract)f(state)h(mac)n(hines.)32
b(In)9 4477 y(Y.)37 b(Gurevic)n(h,)j(P)-6 b(.)37 b(Kutter,)j(M.)e
(Odersky)-6 b(,)38 b(and)f(L.)g(Thiele,)9 4560 y(editors,)26
b Fi(A)n(bstr)l(act)k(State)e(Machines:)36 b(The)l(ory)28
b(and)f(Applic)l(a-)9 4643 y(tions)p Fo(,)k(v)n(olume)d(1912)i(of)g
Fi(L)l(e)l(ctur)l(e)i(Notes)g(in)e(Computer)h(Sci-)9
4726 y(enc)l(e)p Fo(,)c(pages)g(151{176.)h(Springer,)e(2000.)p
Black -152 4861 a([13])p Black 43 w(A.)k(Hejlsb)r(erg)h(and)e(S.)g
(Wiltam)n(uth.)45 b Fi(C)1197 4829 y Fn(])1258 4861 y
Fi(L)l(anguage)33 b(Sp)l(e)l(ci\014-)9 4944 y(c)l(ation)p
Fo(.)j(Microsoft)27 b(Corp)r(oration,)h(2000.)p Black
-152 5079 a([14])p Black 43 w(C.)48 b(A.)f(R.)f(Hoare.)99
b(Monitors:)78 b(An)46 b(op)r(erating)i(system)9 5162
y(structuring)43 b(concept.)86 b Fi(Communic)l(ations)44
b(of)f(the)i(A)n(CM)p Fo(,)9 5245 y(17\(10\):549{557,)31
b(Octob)r(er)25 b(1974.)p Black Black Black 2040 -69
a([15])p Black 43 w(C.)k(A.)e(R.)h(Hoare.)41 b Fi(Communic)l(ating)30
b(Se)l(quential)h(Pr)l(o)l(c)l(esses)p Fo(.)2201 14 y(Pren)n
(tice-Hall,)c(1985.)p Black 2040 157 a([16])p Black 43
w(S.)47 b(Kamin,)53 b(editor.)99 b Fi(Pr)l(o)l(c)l(e)l(e)l(dings)50
b(of)d(the)h(First)g(A)n(CM-)2201 240 y(SIGPLAN)42 b(Workshop)g(on)g
(Domain-Sp)l(e)l(ci\014c)g(L)l(anguages)p Fo(,)2201 323
y(P)n(aris,)27 b(F)-6 b(rance,)26 b(Jan)n(uary)g(1997.)p
Black 2040 466 a([17])p Black 43 w(A.)36 b(Kennedy)f(and)h(D.)h(Syme.)
65 b(Design)36 b(and)h(implemen)n(ta-)2201 549 y(tion)25
b(of)g(generics)h(for)f(the)f(.NET)h(Common)f(Language)h(Run-)2201
632 y(time.)e(In)c Fi(Pr)l(o)l(c)l(e)l(e)l(dings)24 b(of)d(the)i(A)n
(CM)e(SIGPLAN)h(Confer)l(enc)l(e)2201 715 y(of)h(Pr)l(o)l(gr)l(amming)i
(L)l(anguage)g(Design)f(and)g(Implementation)p Fo(.)2201
798 y(A)n(CM,)i(2001.)p Black 2040 941 a([18])p Black
43 w(James)42 b(R.)f(Larus)g(and)g(Mic)n(hael)h(P)n(ark)n(es.)82
b(Using)41 b(cohort)2201 1024 y(sc)n(heduling)35 b(to)f(enhance)h(serv)
n(er)f(p)r(erformance.)61 b(T)-6 b(ec)n(hnical)2201 1107
y(Rep)r(ort)33 b(MSR-TR-2001-39,)k(Microsoft)f(Researc)n(h,)g(Marc)n(h)
2201 1190 y(2001.)p Black 2040 1333 a([19])p Black 43
w(F.)49 b(Le)g(F)-6 b(essan)n(t)50 b(and)e(L.)i(Maranget.)105
b(Compiling)49 b(join-)2201 1416 y(patterns.)f(In)29
b(Uw)n(e)i(Nestmann)d(and)i(Benjamin)g(C.)h(Pierce,)2201
1499 y(editors,)e Fi(HLCL)g('98:)38 b(High-L)l(evel)31
b(Concurr)l(ent)g(L)l(anguages)p Fo(,)2201 1582 y(v)n(olume)e(16\(3\))i
(of)g Fi(Ele)l(ctr)l(onic)h(Notes)h(in)e(The)l(or)l(etic)l(al)i(Com-)
2201 1665 y(puter)h(Scienc)l(e)p Fo(.)f(Elsevier)f(Science)g
(Publishers,)h(Septem)n(b)r(er)2201 1748 y(1998.)p Black
2040 1891 a([20])p Black 43 w(D.)42 b(Lea.)82 b Fi(Concurr)l(ent)45
b(Pr)l(o)l(gr)l(amming)e(in)f(Java:)65 b(Design)2201
1974 y(Principles)32 b(and)h(Patterns)p Fo(.)51 b(Addison-W)-6
b(esley)g(,)30 b(second)h(edi-)2201 2057 y(tion)26 b(edition,)g(1999.)p
Black 2040 2200 a([21])p Black 43 w(INMOS)65 b(Limited.)154
b Fi(Oc)l(c)l(am)65 b(Pr)l(o)l(gr)l(amming)g(Manual)p
Fo(.)2201 2283 y(Pren)n(tice-Hall)26 b(In)n(t.,)g(1984.)p
Black 2040 2425 a([22])p Black 43 w(Satoshi)43 b(Matsuok)l(a)h(and)e
(Akinori)h(Y)-6 b(oneza)n(w)n(a.)85 b(Analysis)2201 2508
y(of)39 b(inheritance)f(anomaly)g(in)g(ob)t(ject-orien)n(ted)h
(concurren)n(t)2201 2591 y(programming)24 b(languages.)35
b(In)24 b(AghaW)-6 b(egnerY)g(oneza)n(w)n(a)25 b([1)q(],)2201
2674 y(c)n(hapter)g(4,)i(pages)f(107{150.)p Black 2040
2817 a([23])p Black 43 w(M.)h(Odersky)-6 b(.)35 b(F)-6
b(unctional)27 b(nets.)37 b(In)25 b Fi(Pr)l(o)l(c.)k(Eur)l(op)l(e)l(an)
h(Sym-)2201 2900 y(p)l(osium)e(on)g(Pr)l(o)l(gr)l(amming)p
Fo(,)g(v)n(olume)d(1782)i(of)g Fi(LNCS)p Fo(,)g(pages)2201
2983 y(1{25.)h(Springer)d(V)-6 b(erlag,)27 b(2000.)p
Black 2040 3126 a([24])p Black 43 w(Mic)n(hael)50 b(Philippsen.)102
b(Imp)r(erativ)n(e)47 b(concurren)n(t)h(ob)t(ject-)2201
3209 y(orien)n(ted)28 b(languages:)40 b(An)27 b(annotated)g
(bibliograph)n(y)-6 b(.)40 b(T)-6 b(ec)n(h-)2201 3292
y(nical)34 b(Rep)r(ort)f(TR-95-049,)j(In)n(ternational)e(Computer)e
(Sci-)2201 3375 y(ence)26 b(Institute,)f(Berk)n(eley)-6
b(,)26 b(CA,)g(1995.)p Black 2040 3518 a([25])p Black
43 w(J.)52 b(C.)g(Ramming,)k(editor.)110 b Fi(Pr)l(o)l(c)l(e)l(e)l
(dings)54 b(of)c(the)i(First)2201 3601 y(USENIX)44 b(Confer)l(enc)l(e)j
(on)d(Domain-Sp)l(e)l(ci\014c)i(L)l(anguages)p Fo(,)2201
3684 y(San)n(ta)26 b(Barbara,)h(California,)i(Octob)r(er)c(1997.)p
Black 1902 5494 a(11)p Black eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
