%!PS (but not EPSF; comments have been disabled)
%DVIPSCommandLine: dvips -o paper.ps paper.dvi
%DVIPSParameters: dpi=600, compressed, comments removed
%DVIPSSource:  TeX output 1998.07.24:1728
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
% PostScript prologue for pstricks.tex.
% Version 97 patch 2, 97/12/12
% For copying restrictions, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
0 } ifelse setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
% DG/SR modification end
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
def
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
% DG modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    (P) 0 get /BoldPentagon put
  /Metrics 13 dict def
  Metrics begin
    /Bullet 1000 def
    /Circle 1000 def
    /BoldCircle 1000 def
    /SolidTriangle 1344 def
    /Triangle 1344 def
    /BoldTriangle 1344 def
    /SolidSquare 886 def
    /Square 886 def
    /BoldSquare 886 def
    /SolidPentagon 1093.2 def
    /Pentagon 1093.2 def
    /BoldPentagon 1093.2 def
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle { -550 -550 550 550 } def
    /BoldCircle /Circle load def
    /Bullet /Circle load def
    /Triangle { -571.5 -330 571.5 660 } def
    /BoldTriangle /Triangle load def
    /SolidTriangle /Triangle load def
    /Square { -450 -450 450 450 } def
    /BoldSquare /Square load def
    /SolidSquare /Square load def
    /Pentagon { -546.6 -465 546.6 574.7 } def
    /BoldPentagon /Pentagon load def
    /SolidPentagon /Pentagon load def
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath { 0 0 500 0 360 arc closepath } def
    /Bullet { 500 500 Adjust CirclePath fill } def
    /Circle { 500 500 Adjust CirclePath .9 .9 scale CirclePath eofill } def
    /BoldCircle { 500 500 Adjust CirclePath .8 .8 scale CirclePath eofill } def
    /BoldCircle { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath {
      0  660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath
    } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath {
      -450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
      closepath
    } def
    /SolidSquare { SquarePath fill } def
    /Square { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon { PentagonPath .78 .78 scale PentagonPath eofill } def
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
% END pst-dots.pro
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For copying restrictions, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
TeXDict begin 40258431 52099146 1000 600 600 (paper.dvi)
@start /Fa 49 123 df<EB3C0F90387E1F80A7EBFE3F01FC1300003FB512F04814F8B6
12FCA36C14F83901F87E00AA007FB512F8B612FCA36C14F86C14F03903F0FC00EA07F1EB
E1F8A63803C0F01E297EA823>35 D<EB0380EB0FC0131FEB3F80EBFF005BEA01F8120348
5A485A5B485AA248C7FCA2123E127EA2127CA212FCA25AA87EA2127CA2127EA2123E123F
A26C7EA26C7E7F6C7E6C7E1201EA00FE7FEB3F80EB1FC0130FEB0380123476AD23>40
D<127012FC7E127FEA3FC0121FEA07E07F6C7E6C7E1200137EA27FA27F1480A2130FA214
C0A21307A8130FA21480A2131FA214005BA2137EA25B1201485A485A5BEA1FC0123F48C7
FC12FE5A127012347AAD23>I<EB0780497EAB007FB512F8B612FCA46C14F839000FC000
AB6D5A1E1E7EA223>43 D<121FEA3F80EA7FC013E0A4123F121F1207A2EA0FC0121FEA7F
80EAFF005A5A12700B12748823>I<123E127FEAFF80A5EA7F00123E0909738823>46
D<EB1F80EB7FE03801FFF8487F487F13F0380FC03F391F801F80EB000F4814C0003E1307
A248EB03E0A30078130100F814F0AB007CEB03E0A3007E1307003E14C0A2003F130F391F
801F80A2390FC03F003807F0FE13FF6C5B6C5B38007FE0EB1F801C2B7DA923>48
D<1318133C137CA213FC120112031207127F12FFA2137C127C1200B3A6387FFFFC14FEA3
14FC172A7AA923>I<EB7FC03803FFF04813FC001F7F48EBFF80EA7F80397E003FC000FE
EB0FE04813076CEB03F0A31401127C1238C7FC1403A2EC07E0A2EC0FC0141FEC3F801500
14FE1301EB03F8495A495AEB3FC0495A01FEC7FC485A485AD80FF013E0391FE001F0EA3F
8048B5FCB6FCA36C14E01C2A7DA923>I<EB7FC03801FFF0000713FC487F487F393FE07F
809038801FC0140F1407A3EA0E00C7120FA2EC1F80143F903801FF00EB7FFE495A5C806D
B4FC9038007F80EC1FC0EC0FE01407EC03F0A21401A2127C12FE1403A2EC07E048130F6C
EB1FC0387FC07F6CB512806C14006C13FC00035B38007FC01C2B7DA923>I<14FC497E13
03A2EB07DE130F149EEB1F1E133F133E137E137C13F8120113F0EA03E0120713C0120FEA
1F8013005A123E5A12FCB612F815FCA36C14F8C7EA1E00A7903807FFF84913FCA36D13F8
1E2A7EA923>I<001FB5FC481480A31500003EC8FCAAEB1FE0EBFFF8003F13FE80158090
38E03FC0EB800F90380007E0121EC7EA03F0A21401A2123812FEA21403A2EC07E048130F
007EEB1FC0397FC0FF806CB512006C5B00075B6C13F038007F801C2A7DA823>I<EB03F8
EB1FFE497E90B512804814C03803FE0F3807F01FEA0FE0EA1FC01380003FEB0F8090C8FC
127EA2EA7C01EB3FF038FCFFFCB57E8015809038C03FC09038000FE014075A48EB03F0A2
1401A3127CA2007E1303A27EEC07E0EB800F391FC01FC0390FF07F8090B512006C5B0001
5B6C13F0EB3FC01C2B7DA923>I<1270B612E015F0A439F8000FE0EC1FC000701480C7EA
3F00147E14FE5C495AA2495A5C13075C130F5C131FA291C7FC5BA2133E137EA2137CA313
FCA25BA813701C2B7DA923>I<EB3FC03801FFF8487F487F487F391FE07F80393F801FC0
EB000F007EEB07E0007C1303A4007E1307003E14C06CEB0F80EBC03F3907FFFE006C5BC6
13F0A2000313FC380FF0FF391F801F80393F000FC0007EEB07E0007C130300FC14F04813
01A56C1303007EEB07E0A2393F801FC0391FE07F8090B5FC6C1400000313FC6C5B38003F
C01C2B7DA923>I<EB3FC0EBFFF000037F4813FE487F391FE07F80383F803F397F001FC0
007E130F00FEEB07E05AA248130315F0A47EA2007E1307140F127F383FC03F6CB5FC7E6C
13FD6C13F3C613C390380803E0EB0007A2EC0FC0121F393F801F80143FEC7F0014FE1383
EBFFFC6C13F06C5B000313806C48C7FC1C2B7DA923>I<123E127FEAFF80A5EA7F00123E
C7FCAB123E127FEAFF80A5EA7F00123E091D739C23>I<5CEC0780EC1FC0143F147F9038
01FF80491300EB07FCEB1FF8495AEBFFC0485B4890C7FCEA0FFC485AEA7FE0485A5BA27F
6C7EEA1FF86C7EEA03FF6C7F6C7FEB3FF06D7EEB07FC6DB4FC6D13809038007FC0143F14
1FEC0780EC01001A247CA523>60 D<003FB512F04814F8B612FCA36C14F8C9FCA6007FB5
12F8B612FCA36C14F86C14F01E127E9C23>I<1230127812FE7E7FEA7FE06C7EEA0FF8EA
07FE6C7EC613C06D7E6D7EEB0FFC6D7E903801FF806D13C0147FA214FF491380903807FE
00495AEB3FF0495A495A000390C7FC485AEA0FF8EA3FF0485AEAFF8090C8FC5A12781230
1A247CA523>I<90380FE0E090383FF9F0EBFFFD4813FF5A3807FC3F380FF00F381FC007
A2383F80031300481301127EA2007CEB00E000FC1400A25AA97EA2127C007E14E0EC01F0
127F7EEB8003EA1FC0EC07E0380FF00F3907FC1FC06CB512806C14006C5BEB3FF8EB0FE0
1C2B7DA923>67 D<007FB512FCB612FEA37E3907C0003EA5151C1500A3140E141FA390B5
FCA5EBC01FA3140E91C7FCA9EA7FFEB5FCA36C5A1F297FA823>70
D<39FF8001FFA26D5AA3391EE00778A3EBF00FEB700EA2EB781EA2EB381CEB3C3CA2EB1C
38EB1E78A2EB0E70A3EB07E0A3EB03C0A290C7FCA939FFC003FFA520297FA823>77
D<387FFFC0B512F88014FF7E390F807F80EC1FC0140F6E7E1403A514074A5A141FEC7F80
90B5C7FCA214FC8080EB807F6E7E141F140FA61587ED8F80A215CFD87FF013DF39FFF807
FF1600806C486C5AC812F8212A7FA823>82 D<007FB51280B612C0A46C14801A067C7E23
>95 D<3803FF80000F13E04813F8487F80EB80FFEC3F80381F001FC7FC140F14FF137F00
03B5FC120F5A387FF00F130012FCA25A141F7E6C133F387F81FF90B512FC6C14FE7E0007
13C73901FE01FC1F1D7D9C23>97 D<B47E7FA41207A7EBC1FCEBC7FF01DF13C090B512E0
15F09038FE0FF8EBF8039038F001FCEBE000A249137EA2153EA5157E7F15FC7F14019038
F803F89038FE0FF090B5FC15E001DF138001CF1300380383F81F297FA823>I<EB3FF0EB
FFFC000313FF5A5A381FE07FEA3F80387F003E007E90C7FCA25AA25AA57EA2007E130700
7FEB0F80141FEA3FC0391FF07F006CB5FC6C5B6C5BC613F0EB3FC0191D7B9C23>I<ECFF
8015C0A41407A7EB7F873801FFE74813F7000F13FF5A13E0383F803F387F001F007E130F
A2481307A25AA56C130FA2127E141F007F133F383F807FEBE0FF6CB512FE7E000313F76C
13C738007F031F297EA823>I<EB3FC0EBFFF800037F4813FF481480381FF07F393F801F
C0EB000F007E130715E05AB6FCA415C000F8C8FC7EA2007EEB01C0007FEB03E0383F8007
13E0391FF81FC06CB5FC6C14800001EBFE006C6C5AEB1FE01B1D7D9C23>I<147F903801
FFC0010713E05B5BEB3FCF140F90383E07C091C7FCA4007FB51280B612C0A36C1480D800
3EC7FCB3383FFFFE487FA36C5B1B297EA823>I<EC01F090383F07FC9038FFDFFE000313
FF5A48147E381FE1FE9038807E18393F003F00A2003E7FA4003F5BA2381F807EEBE1FE6C
B45A485B5C001E13C0013FC7FC90C8FC121F1340380FFFFCECFF804814C04814F0397E00
07F8007C130048147CA248143CA36C147C6C14FC007FEB03F8EBE01F6CB512F0000F14C0
6C14800001EBFE0038003FF01F2E7E9D23>I<B47E7FA41207A7EBC1FCEBC7FF01DF1380
90B512C0A29038FE0FE0EBF807EBF00313E0A313C0AD39FFFE1FFF5CA38020297FA823>
I<133813FEA5133890C7FCA6EA7FFC487EA3127FEA003EB3387FFFFEB6FCA36C13FE182A
7AA923>I<EA7F80487EA3127F1203A7ECFFFC13C1A313C0EC3F00147E5CEBC1F8EBC3F0
EBC7E0EBCFC0EBDFE0EBFFF0A2EBFCF8497EEBF07EEBE03E497E1580EC0FC01407EC03E0
397FFE0FFFB55AA36C487E20297FA823>107 D<EA7FFEB5FCA37EEA001FB3AD007FB512
C0B612E0A36C14C01B297CA823>I<397E1F01F039FF7FC7FC9038FFEFFE14FF6C80390F
E1FE1FEBC1FC01C07FEB80F8A2EB00F0AE3A7FE3FE3FE026FFF3FF13F0A3267FE3FE13E0
241D819C23>I<38FF81FCEBC7FF01DF138090B512C0A23907FE0FE0EBF807EBF00313E0
A313C0AD39FFFE1FFF5CA380201D7F9C23>I<133F3801FFE0487F487F487F381FC0FE38
3F807F383E001F007E1480007C130F00FC14C0481307A66C130FA2007C1480007E131F6C
EB3F006D5A381FE1FE6CB45A6C5B6C5B6C5BD8003FC7FC1A1D7C9C23>I<38FF81FCEBC7
FF01DF13C090B512E015F03907FE0FF8EBF8039038F001FCEBE000A249137EA2153EA515
7E7F15FC7F14019038F803F89038FE0FF090B5FC15E001DF138001CF1300EBC3F801C0C7
FCAAEAFFFEA51F2C7F9C23>I<397FF00FE039FFF87FF8ECFFFC13FB6CB5FCC613F8ECC0
78EC800091C7FC5BA25BA35BAA387FFFFCB57EA36C5B1E1D7E9C23>114
D<3801FF9C000F13FE5A127FA2EAFF0000FC137E48133EA26C131C6C1300EA7FF0383FFF
80000F13E06C13F838007FFCEB01FEEB007F0070133F00F8131F7E143F7E38FF80FFEBFF
FE14FC14F814F000701380181D7B9C23>I<137013F8A7007FB51280B612C0A36C1480D8
00F8C7FCACEC01C0EC03E0A3EBFC07140F9038FE1FC0EB7FFF158090383FFE00EB0FFCEB
07F01B257EA423>I<39FF807FC001C013E0A400071303B01407140FEBE03F90B6FC7EA2
C613F3EB3FC1201D7F9C23>I<39FFF03FFCA5390F8007C000071480A2EBC00F00031400
A26D5A0001131EA2EBF03E0000133CA2EBF87CEB7878A2EB7CF8EB3CF0A2133F6D5AA36D
5A6D5A1E1D7E9C23>I<397FF00FFE39FFF81FFFA3397FF00FFE001FC712F86C14F0A57F
390783E1E0EB87F1A3EB8FF90003EB79C013CFA2EBDF7BA2EBDE3B00011480EBFE3FA2EB
FC1FA23900F80F00201D7F9C23>I<397FF07FF039FFF8FFF8A3397FF07FF03903E03E00
3801F03C3800F87CEB78F8EB7CF0EB3FE0131F6D5A5C1307497E497E133DEB3CF0EB7878
EBF07C0001133C497E3803C01F397FF03FF839FFF87FFCA3397FF03FF81E1D7E9C23>I<
39FFF03FFCA539078007C0158013C00003130F1500EA01E05CEBF01E1200A26D5A1378A2
6D5AA3EB1E7014F0130EEB0FE0A213075CA35CA2130F91C7FCA2EA3E1FEA7F1E133EEA7C
FC127F5B6C5A6C5AEA0F801E2C7E9C23>I<003FB512F04814F8A4397C000FF0EC1FE0EC
3FC00038EB7F80C7EAFF00EB01FC495A495A495A495A495A49C7FC13FE485AD807F81370
484813F8485A485A485AB6FCA46C14F01D1D7E9C23>I E /Fb 2
60 df<EA01E0EA03F0A4EA07E0A213C0120FA21380A2EA1F00A2121EA2123E123CA25AA3
127012F05A12600C1A7E9B12>48 D<146014E013FCEA03FF380787C0EA0E01381C03E000
3813F0A2387807F800701338A2130F38F00E3CA2131E131CA2133C133813781370A213F0
13E0A212F113C0007113381273387B8078A2003F1370EB00F06C13E0380F01C0EB8780EB
FF00EA1EFC001CC7FCA3162A7CA520>59 D E /Fc 1 60 df<191CA2D91FC0161ED97FF0
822601FFFC82486D832707F07F806F7E270FC01FC06F7E271F8007E082263F0003707E00
7E6D6C163C486E4AB5FC486D6C020714C048027C5C00606E023F1400C8003F91387F003C
92271F8001FC13F86F6C4848485A922707E007E05B923B03F83FC003C06FB548485A9227
007FFE0090C7FC70485BDC0FE0131E93C8121CA24A1A829F4D>59
D E /Fd 5 118 df<131FEB7FC03801E0EE3803C0FE3807807EEA0F0048133E121E003E
5B123C127CA2485BA448485A15E0A3903803E1C01307127039781DE380D83C391300381F
F0FE3807C03C1B1B789923>97 D<137CEA0FFCA2EA00F8A21201A213F0A21203A213E0A2
1207A213C0A2120FA21380A2121FA21300A25AA2123EA2127EA2EA7C38A3EAF870A21360
EA78E013C0EA3F80EA0F000E297BA712>108 D<3B07801F800FC03B0FE07FE03FF03B18
F1E0F0F0783B38F380F9C07C3B30FF007B803CD870FEEB7F0049137E49137C00E102FC13
7C495B1201A2484848485BA34C5A3907C003E018E0EE03E0A23C0F8007C007C1C0A2EFC3
8004031300271F000F8013C7EE01FC000E6DC75A331B7B9938>I<1338137CA25BA4485A
A4485AB512C0A23803E000485AA4485AA448C7FCA4123EEB0380A2EB0700127C130E130C
EA3C1C5BEA1FE0EA07C012267AA417>116 D<EA03E0486C1370D80C7813F8EA187C0038
EB01F01230127013F800E0EB03E0A2EA01F0A2EC07C0EA03E0A33907C00F801587A3EC1F
0EA2143F0003EB7F1C3901E0EF183900FF87F890383F01E0201B7B9925>I
E /Fe 1 111 df<380F03F0383F87FC3833DC1EEA63F8EAC3F013E0EA03C0A248485AA3
EC7820D80F00136014F015C014F1001EEB7F80000CEB3E001B127D9125>110
D E /Ff 19 122 df<EB3FC03803FFF0000F13FC487F809038C07F80381E001F001814C0
0010130FC713E01407A6EB03FF137F48B5FC1207001F13C7383FF007EA7F80EA7E005AA3
140F7E007F133FEBC0FF90B5FC7E6C13E76C1387D803FCC7FC1B247DA225>97
D<EB0FF8EB3FFF90B512E04814F05A3807F807390FE001E0391FC0006049130048C8FCA2
127EA35AA9127EA36C14106D1330001F14F0380FE001EBF80F6CB5FC6C14E0C614809038
7FFE00EB0FF01C247DA222>99 D<15FCB2EB3F80EBFFF0000313FC4813FE4813FFEBF81F
381FE007383FC001138048C7FC127EA35AA9127EA3007F1301EA3F801403381FE007380F
F81F90B5FC6C13FC6C13F8C613E090383F80001E357DB328>I<EB1FC0EB7FF848487E48
7F487F390FF07F80381FC01F90388007C0EA3F00EC03E0007E1301A2127C00FCEB00F0B6
FCA500F8C8FCA27EA2127C127EA27E6D13106C6C1370390FE001F0EBF80F6CB5FC6C14E0
C6148090387FFE00EB0FF01C247DA222>I<EB01FCEB0FFF5B5B5BEBFE07EBF801000113
005B1203ABB512F0A53803F000B3AA18357FB417>I<90391FC00F8090387FF0FF90B612
C05A5A2607F07FC7FC390FC01F80EB800FA248486C7EA76C6C485AA2EBC01F2607F07FC7
FCEBFFFE485B5C486C5AEB1FC090C9FCA37F380FFFFEECFFE06C804814FC48805A397F80
03FF007EC77E00FEEC3F8048141FA46C143F007FEC7F006D5B393FF007FE6CB55A6C5C00
0314E0C61480D91FFCC7FC22337EA126>I<12FCB2EB07F0EB3FFE497E90B51280B6FC90
38E07FC0EB801F9038000FE0A2481307A35AB3A41B347AB328>I<12FEA71200AC127EB3
AF07347BB313>I<12FCB3B3B006347AB313>108 D<EB07F038FC3FFE497E90B51280B6FC
9038E07FC0EB801F9038000FE0A2481307A35AB3A41B227AA128>110
D<EB07F0EB3FFE90B57E488048803907F80FF0390FE003F848486C7EEB800048C7127EA2
007E80A2007C8000FC1580A86C143F007E1500A2007F5C6C147E6D13FE6C6C485A6C6C48
5AEBF80F6CB55A000114C06C5CD93FFEC7FCEB07F021247EA226>I<EB03C0EAF81F133F
13FF12F912FBEBFC00EAFFF013C05B90C7FCA25AA35AB312227AA11A>114
D<EBFF80000713F04813FC487F5AEA7F00007E131C48130C91C7FCA47EEA7F8013F86CB4
7E6C13E06C13F800037FC67FEB0FFF1300EC3F80A2141FA312400060133F00781400B413
FFEBFFFE5C6C5B000F5B0001138019247EA21D>I<EA03F0AAB512FEA53803F000B3A37F
14023801FC1E90B5FCA27EEB7FFCEB3FC0182C7FAA1C>I<00FCEB07E0B3A7140F141F6C
133F6C13FF6CB5FC14F76C13E76C1307D807F8C7FC1B227AA028>I<00FC143F007E143E
157E127F6C14FCA27F001FEB01F8A2390FC003F0A33907E007E0A2D803F013C0140FA2D8
01F81380141FA2D800FC13005CEB7C3E137E147EEB3E7CA3EB1F7814F86D5AA320217FA0
23>I<00FCD907F0EB1F807E007E010FEC3F008115786C011F143E177EEC1E7C261F803E
147C033C13FC153E000F013C5CD9C07C1301151E151F2607E0785C02F81303ED0F830003
5EEBF0F001F114870001913807C7C014E0A201FBEB03CF00005E02C013EF1501017B92C7
FCD97F8013FFA2013F6D5A91C7FC31217FA034>I<007E143F6C5C6C6C13FE6D5B6C6C48
5A0007495A6C6C485A3801F80FD800FC5B90387E1F80D97F3FC7FCEB3F7E6D5A6D5A1307
6D5AA2497E497E131FEB3F3EEB3E1F017C7F9038FC0FC048486C7E48486C7EEA07E06E7E
48486C7E4848137E48C7127F48EC3F8000FEEC1FC0222180A023>I<00FE143F007E147E
A27E15FC7F001FEB01F813C0120FEC03F0EA07E015E0EBF007120315C03801F80F158012
00EBFC1F1500137CEB7E3E133EA2EB1F3C147CEB0F78A36D5AA26D5AA35C13075CA2130F
91C7FC5B131EEA203EEA387CEA3FFC5BA25BEA0FC020317FA023>I
E /Fg 9 127 df<0003B512E0120F5A4814C0D8780CC7FC12E0EAC01C120013181338A4
13781370A213F0A3485AA26C5A1B167D941D>28 D<EA0F80D83FE01306D873F0130C0061
1418D840F8133000001460017C13C090383C018090383E03001406EB1E0CEB1F186D5A14
E05C6D5A80A2130F497E13391371EBE1F0EA01C048487E38070078000E137C5A48EB3E04
48EB1E0C48EB1F1848EB0FF8C7EA03E01F217D9526>31 D<EB3FC03801FFF0000713FC38
0F807C381C001800301300A3EA39FCEA1FFEA2EA3BFC0060C7FC5AA414606C13E0387803
C0383FFF80381FFE00EA07F816177D951D>34 D<1338137CA2137813701300A7EA0780EA
1FC0EA38E01230EA60F0EAC1E0A3EA03C0A3EA0780A2EA0F0013041306EA1E0CA2131812
1CEA1E70EA0FE0EA07800F237DA116>105 D<000F017E13FC3A1F81FF83FF3B31C383C7
07803A61EE03CC039026EC01F813C0D8C1F813F013F001E013E00003903903C0078013C0
A2EE0F003907800780A2EE1E041706270F000F00130C163C1718A2001E011EEB1C70EE1F
E0000C010CEB07802F177D9536>109 D<000F13FC381FC3FF3931C707803861EC0301F8
13C0EAC1F0A213E03903C00780A3EC0F00EA0780A2EC1E041506D80F00130C143C151815
38001EEB1C70EC1FE0000CEB07801F177D9526>I<380F01F0381FC7F83831CE1CEA61F8
EBF03C00C1137C13E014383803C000A4485AA448C7FCA4121EA2120C16177D951D>114
D<EB3F80EBFFE03801E0F038038030EB00704813F0A2EB8040EBC00013FE3803FF806C13
C038003FE0EB03F0EA3000127800F813E0A24813C0EA600138780F80383FFE00EA07F814
177D951D>I<146014701478143CB512FE14FF14FEC712F8EB01F014C01480180B75A320>
126 D E /Fh 53 123 df<923803FF80031F13F092383F00F803F8133C4A48133E4A4813
7E17FE4A5A17FC17384A481300A3141F92C8FCA55C143E011FB612E0A217C09039007E00
07147C160F1780A214FC4A131F1700A301015C4A133EA3167E0103147C5C1718EEFC1CEE
F83C010715385C1778177016F0010F15F04AEBF8E01679EE3FC0011FEC0F0093C7FC91C9
FCA3133EA21238EA7E3C137CEAFE7812FC485AEA79E0EA3FC0000FCAFC2F4582B42B>12
D<ED03FE92391FFFC7C092387E03EF9239F800FF80913801F003EC03E0A2DA07C01400EE
01DFEE001F4A485B173EA3021F147E92C7127CA317FC4A5C143E011FB6FCA25F9039007E
0001147C16035FA214FC4A13075FA30101140F4A5CA3161F010392C7FC5C1706EE3F07EE
3E0F0107150EA24A141E171C163C010F153C4AEB3E38EE1E78705AEE03C0011F91C8FC91
CAFCA3133EA21238EA7E3C137CEAFE7812FC485AEA78E0EA3FC0000FCBFC324582B42D>
I<1560EC01E0EC03C0EC0700140E5C143C5C5C495A495A13075C49C7FC5B131E5B137C13
7813F85B12015B12035B1207A25B120FA290C8FC5AA2121E123EA3123C127CA31278A212
F8A35AAF12701278A21238A2123C121CA27EA27E6C7E12011B4A75B71F>40
D<14301438A28080A2140F801580A2140315C0A4140115E0A81403A415C0A31407A31580
140FA315005CA3141E143EA2143C147CA25CA25C13015C13035C13075C130F91C7FC131E
133E133C5B5B485AA2485A485A48C8FC121E5A12705A5A1B4A7EB71F>I<B51280A46C13
00110579911B>45 D<121C127F12FFA412FE12380808778718>I<EC01801403A2140714
0FEC1F005C14FF5BEB1FFEEB7FBEEB7E7E1320EB007CA214FCA25CA21301A25CA21303A2
5CA21307A25CA2130FA25CA2131FA291C7FCA25BA2133EA2137EA2137C13FCB512FCA319
3277B127>49 D<EC07F0EC3FFCECF81E903803E00F903907800780D90F0013C0011E1303
5B013814E0EB7980EB71C00170130701F014C013E0A201E1130FD9E380138090387F001F
013C140090C7123E5D5D4A5AEC1FE0903807FF804AC7FC6D7E90380007C06E7EA26E7EA5
14031218127EA21407485C5A00E0495AA26C495A007049C7FC147E00785B383C01F0381E
07E03807FF80D801FCC8FC233479B127>51 D<EC0FC0EC7FF0ECFFFC903803F07E903807
C03E49487EEB1F00013E7F017E14805BA2485AA2485A151FA212075BA2ED3F00A2485A5D
A2000714FEA21401140300035CEBE0070001130E3900F03DF8EB7FF1EB0FC190380003F0
A24A5AA25D4A5A141F003891C7FC007E133E00FE137E5C48485A48485A48485A38781F80
D87FFFC8FCEA1FFCEA07E0213478B127>57 D<161C163CA2167C16FCA21501821503A2ED
077E150F150E151CA21538A2157015F015E0EC01C0A2913803807F82EC0700A2140E141E
141C5CA25CA25C49B6FCA25B913880003F49C7EA1F80A2130E131E131C133C13385B13F0
5B12011203D80FF0EC3FC0D8FFFE903807FFFEA32F367BB539>65
D<DB1FF013C09238FFFC010203EBFF03913A0FF00F878091393F8003CF9139FE0001EF49
48EB00FFD903F01500D90FE080495A49488091C8123E137E13FE485A4848153CA2485AA2
48481538A2485A94C7FC123F5BA3127F90CBFCA412FEA2EE03C0A25F127E160794C7FC5E
160E007F151E6C5D5E6C6C147016F06C6C495A6C6CEB07C06C6C49C8FC6C6C133E6CB413
FC90387FFFF0011F13C0D903FEC9FC323775B437>67 D<0107B612C04915F017FC903A00
3F8001FEEE007FEF1F8092C7EA0FC0EF07E05CEF03F0147E170102FE15F8A25CA21301A2
5CA2130317035CA2130718F04A1407A2130F18E04A140F18C0011F151F18805CEF3F0013
3F177E91C85AA2494A5A4C5A017E4A5A4C5A01FE4A5A047EC7FC49495A0001EC0FF8007F
B612E0B7C8FC15F835337BB23A>I<0107B712F05B18E0903A003F80001F1707170392C7
FC17015C18C0147EA214FEA24A130EA20101EC1E03041C13804A91C7FC163C13035E9138
F001F891B5FC5B5EECE0011500130F5E5C1707011F01015BEEC00E0280141E92C7121C13
3F173C91C812381778495DA2017E14014C5A01FE14074C5A49141F00014AB45A007FB7FC
B8FC94C7FC34337CB234>I<0107B712E05B18C0903A003F80003F170F170792C7FC1703
5C1880147EA214FEA25C161C0101EC3C07043813004A91C7FCA20103147816704A13F015
0349B5FCA25EECE003130F6F5A14C0A2011F13035E1480A2013F90C9FCA291CAFCA25BA2
137EA213FEA25B1201387FFFFCB5FCA233337CB232>I<92391FE001809238FFF8030207
EBFE07913A1FF01F0F0091393F80079F9139FE0003DFD901F86DB4FCD907F05C49481300
495A4948147E49C8127C137E13FE485A48481578A2485AA248481570A2485A94C7FC123F
5BA3127F90CBFCA400FE91383FFFFCA25F9238003F8094C7FCA2007E5DA2167EA2007F15
FE7E5E6C6C1301A26C6C495A6D13076C6CEB0F786C6C133E3A00FF01FC3090387FFFF001
1F01C0C8FCD903FEC9FC313775B43B>I<0107B548B512C0495CA2903C003FC0000FF000
4B5CA292C75BA24A141F60147EA202FE143F95C7FC5CA201015D177E5CA2010315FE5F5C
91B6FC5B5F9138E00001A2010F14035F5CA2011F14075F5CA2013F140F5F91C7FCA24914
1F5F137EA201FE143F94C8FC5B00015D3B7FFFF01FFFFCB55BA23A337BB239>I<010FB5
1280A216009038003FC05DA292C7FCA25CA2147EA214FEA25CA21301A25CA21303A25CA2
1307A25CA2130FA25CA2131FA25CA2133FA291C8FCA25BA2137EA213FEA25B1201B512F8
A25C21337BB21E>I<91381FFFFE5C16FC9138003F80A31600A25D157EA315FE5DA31401
5DA314035DA314075DA3140F5DA3141F5DA3143F92C7FCA2121C007E5B00FE137EA214FE
485BEAF80100E05B495A387007E038780FC06C48C8FCEA1FFCEA07F0273579B228>I<01
07B512C05BA29026003FC0C7FC5DA292C8FCA25CA2147EA214FEA25CA21301A25CA21303
A25CA21307A25CA2130FA25C17E0011F140117C05C1603013F1580160791C7FCEE0F005B
5E017E143EA201FE5CED01FC4913030001EC1FF8007FB6FCB7FC5E2B337CB230>76
D<902607FFC0ED7FFC4917FF81D9003F4B1300611803023BED077CA2027BED0EFC610273
151C1838DAF1F01439F071F014E118E10101ED01C36102C1EC0383EF070301031607050E
5BEC80F8171C0107ED380F6102001470A249EDE01FDC01C090C7FC130EEE0380011E017C
5C933807003E011C140EA2013C4A137E187C01385C5E017816FC6F485B1370ED3FC001F0
EC80016000011500D807F81503277FFF803E90B512C0B5EB3C01151C46337BB245>I<90
2607FF8090383FFFC0496D5BA2D9001F913803F8004A6C6D5A6060EC3BF0027B140360EC
71F8A202F11407DAF0FC91C7FC14E0A20101017E5B170E14C0810103151EEE801CEC801F
A20107ECC03C030F1338140016E049010713781770010E14F01503011E15F0705A011C13
01A2013C14FD03005B133816FF0178147F5F0170143FA213F070C8FC1201EA07F8267FFF
807FB5140EA23A337BB239>I<ED1FE0913801FFFC913807E03F91391F800FC091393E00
03E002F8EB01F0495A4948EB00F8494814FC4948147C49C8127E133E017E153E49153F48
5AA2485A12075B120F5B121F177F5B123FA348C912FEA4EE01FC12FEEE03F8A217F01607
17E0160F007E16C0EE1F80A2EE3F006C157E5E5E6C6C495A000F4A5A6D495A0007EC1F80
6C6C013EC7FCD801F813FC39007E07F090383FFF80D907FCC8FC303775B43B>I<0107B6
12C04915F883903A003F8001FEEE003FEF1F8092C713C0170F5C18E0147EA214FEEF1FC0
5CA201011680173F4A1500177E010315FE5F4AEB03F8EE07E00107EC3FC091B6C7FC16F8
02E0C9FC130FA25CA2131FA25CA2133FA291CAFCA25BA2137EA213FEA25B1201387FFFF0
B5FCA233337CB234>I<0107B512FE49ECFFC017F0903A003F8007F8EE01FCEE007E92C7
127F835C1880147EA214FEEF7F005CA2010115FE5F4A13015F01034A5AEE0FC04A495A04
FEC7FC49B512F016C09138E003E0ED01F8010F6D7E167C4A137EA2131FA25CA2013F14FE
A291C7FCA24913015E137EEF01C001FE150318805B00011607277FFFF0001400B5ECFE0E
EE7E1CC9EA1FF8EE07E032357BB238>82 D<913901FC018091380FFF03023F13C791387E
07EF903A01F801FF0049487E4A7F495A4948133E131F91C7FC5B013E143CA3137E1638A2
93C7FC137FA26D7E14E014FE90381FFFC06D13F86D7F01017F6D6C7E020F7F1400153F6F
7E150FA4120EA2001E5D121CA2151F003C92C7FCA2003E143E5D127E007F5C6D485A9038
C007E039F3F80FC000F0B5C8FC38E03FFC38C00FF029377AB42B>I<0003B812C05A1880
903AF800FC003F260FC001141F0180150F01005B001EEE07001403121C003C4A5BA20038
0107140E127800705CA2020F141E00F0161CC74990C7FCA2141FA25DA2143FA292C9FCA2
5CA2147EA214FEA25CA21301A25CA21303A25CA21307A25C497E001FB512F05AA2323374
B237>I<3B3FFFF801FFFE485CA2D801FEC7EA1FC049EC0F80170049140EA2161E120349
141CA2163C1207491438A21678120F491470A216F0121F495CA21501123F90C75BA21503
5A007E5DA2150712FE4892C7FCA25D150E48141E151C153C153815786C5C5D007C130100
7E495A003EEB0F806C011EC8FC380FC0FC6CB45A000113E06C6CC9FC2F3570B239>I<B5
3CC03FFFF003FFF8601480280FF00001FCC7EA7F806C484AEC3E00193CA2193861150361
15074E5A030F140361031D4AC7FCA2DB38FC130EA203705C15F06C6C01E05C140103C05C
DA038014F060DA0700130160020E4A5AA24A4AC8FCA24A140E147802705C5C5FD9F1C014
781770D9F3805CA201F7C7EA7FC0A201FE5DA26C4892C9FCA249147E5B167C5B16784914
70453570B24D>87 D<902607FFFE90387FFFC0A39026001FF090380FF80003C014C0020F
5D6F91C7FC0207141E6F5B5F02035C6F485A02015C6F485A4CC8FC0200130EEDFE1EED7E
3C5EED7FF06F5A5E5E151F82A24B7E157F1577EDE7F0EC01C7EC038302077FEC0F01021E
7F143CEC38004A7F4A137E495A0103147F49487F49C77F131E49141F017C8113FC00074B
7EB5D88003B57EA295C7FC3A337CB239>I<EB03F0EB0FF890383E1C6090387C0FF0EBF8
07EA01F0EA03E00007EB03E0EA0FC0A2381F800715C0EA3F00A2140F481480127EA2141F
00FE14005A1506EC3F07EC3E0F150E147E007C141EECFE1CEB01FCD83C03133C393E07BE
38391F0E1E783907FC0FF03901F003C0202278A027>97 D<137EEA0FFE121F5B1200A35B
A21201A25BA21203A25BA21207A2EBC3E0EBCFF8380FDC3EEBF81F497E01E01380EA1FC0
138015C013005AA2123EA2007E131F1580127CA2143F00FC14005AA2147EA25CA2387801
F85C495A6C485A495A6C48C7FCEA0FFCEA03F01A3578B323>I<14FCEB07FF90381F0780
90383E03C0EBFC013801F8033803F0073807E00F13C0120F391F80070091C7FC48C8FCA3
5A127EA312FE5AA4007C14C0EC01E0A2EC03C06CEB0F80EC1F006C137C380F81F03803FF
C0C648C7FC1B2278A023>I<ED0FC0EC03FFA21680EC001FA31600A25DA2153EA2157EA2
157CA215FCA2903803F0F8EB0FF8EB3E1DEB7C0F496C5AEA01F0EA03E000071303D80FC0
5BA2381F8007A2D83F005BA2140F5A007E5CA2141F12FE4891C7FC1506EC3F075DEC3E0E
147E007C141EECFE1CEB01FCD83C03133C393E07BE38391F0E1E783907FC0FF03901F003
C0223578B327>I<EB03F8EB0FFEEB3E0F9038F807803801F003EA03E0EA07C0120FEA1F
801407D83F0013005C007E133EEB03F8387FFFE04848C7FC00FCC8FCA45AA4EC0180EC03
C0A2007CEB0780EC1F00003C133E6C13F8380F03E03807FF80D801FCC7FC1A2277A023>
I<151FED7FC0EDF0E0020113F0EC03E3A2EC07C316E0EDC1C091380FC0005DA4141F92C7
FCA45C143E90381FFFFEA3D9007EC7FC147CA414FC5CA513015CA413035CA413075CA313
0FA25CA3131F91C8FCA35B133E1238EA7E3CA2EAFE7812FC485AEA78E0EA3FC0000FC9FC
244582B418>I<143FECFF80903803E1E6903807C0FF90380F807FEB1F00133E017E133F
49133EA24848137EA24848137CA215FC12074913F8A21401A2D80FC013F0A21403120715
E01407140F141F3903E03FC00001137FEBF0FF38007FCF90381F0F801300141FA21500A2
5C143E1238007E137E5C00FE5B48485A387803E0387C0F80D81FFFC7FCEA07F820317CA0
23>I<EB0FC0EA03FFA25CEA001FA391C8FCA25BA2133EA2137EA2137CA213FCA29038F8
3F80ECFFE03901FBE0F09038FF80F8EC007849137C485A5B5BA2484813FC5D5BA2000F13
015D1380A2001F13035DEB0007EDC0C048ECC1E0020F13C0003E1481A2007E1483ED0380
007C1407160000FC140E151E48EB07F80070EB01F023357BB327>I<EB0180EB07E0A213
0FEB07C0EB038090C7FCABEA01F0EA03FCEA0F1E120E121C123C1238EA783E1270A2137E
EAF07CEA60FCC65AA212015BA212035BA2000713C0EBC1E0000F13C01381A21383EB0380
13071400130E131EEA07F8EA01F013337AB118>I<EB0FC0EA01FF5A5CEA001FA391C7FC
A25BA2133EA2137EA2137CA213FCA2491378EC01FE0001EB078FEC0E0F9038F01C3F1438
00031370ECE03E9038E1C01C9038E38000D807E7C7FC13EE5B13F8120F13FFEB9FC0EB83
F0EA1F81EB80F81300150C48141E151C123EA2007E143C1538127C157800FCEB787015E0
48EB3FC00070EB0F8020357BB323>107 D<133FEA07FF5A13FEEA007EA3137CA213FCA2
13F8A21201A213F0A21203A213E0A21207A213C0A2120FA21380A2121FA21300A25AA212
3EA2127EA2127C1318EAFC1C133CEAF838A21378137012F013F0EAF8E01279EA3FC0EA0F
00103579B314>I<2703C003F8137F3C0FF00FFE01FFC03C1E783C1F07C1E03C1C7CF00F
8F01F03B3C3DE0079E0026383FC001FC7FD97F805B007001005B5E137ED8F0FC90380FC0
0100E05FD860F8148012000001021F130360491400A200034A13076049013E130FF08180
0007027EEC83C0051F138049017C1403A2000F02FC1407053E130049495CEF1E0E001F01
015D183C010049EB0FF0000E6D48EB03E03A227AA03F>I<3903C007F0390FF01FFC391E
787C1E391C7CF01F393C3DE00F26383FC01380EB7F8000781300EA707EA2D8F0FC131F00
E01500EA60F8120000015C153E5BA20003147E157C4913FCEDF8180007153C0201133801
C013F0A2000F1578EDE070018014F016E0001FECE1C015E390C7EAFF00000E143E26227A
A02B>I<14FCEB07FF90381F07C090383E03E09038FC01F0EA01F83903F000F8485A5B12
0F484813FCA248C7FCA214014814F8127EA2140300FE14F05AA2EC07E0A2007CEB0FC015
80141FEC3F006C137E5C381F01F0380F83E03803FF80D800FCC7FC1E2278A027>I<011E
137C90387F81FF9039F3C387C09039E3EF03E03901E1FE01D9C1FC13F0EBC3F8000313F0
018314F814E0EA07871307000313C01200010F130316F01480A2011F130716E01400A249
EB0FC0A2013EEB1F80A2017EEB3F00017F133E5D5D9038FF81F09038FDC3E09038F8FF80
027EC7FC000190C8FCA25BA21203A25BA21207A25BB5FCA325307FA027>I<3903C00FC0
390FF03FF0391E78F078391C7DE03C393C3FC0FC00381380EB7F00007814F8D8707E1370
1500EAF0FC12E0EA60F812001201A25BA21203A25BA21207A25BA2120FA25BA2121FA290
C8FC120E1E227AA020>114 D<EB03F0EB1FFCEB3C1EEB780FEBF007EA01E0140F000313
1F13C0A2EBE00414007FEBFF8014E06C13F06C13F8EB7FFC1307EB00FE147E143E123800
FC133CA3147C00F013784813F0EAF001387803E0383C0F80381FFE00EA03F818227AA01F
>I<1303EB0F80A3131FA21400A25BA2133EA2137EA2137C387FFFF8A2B5FC3800F800A2
1201A25BA21203A25BA21207A25BA2120FA25B1460001F13F014E01300130114C0130300
1E1380EB07005BEA0F1EEA07F8EA01E015307AAE19>I<EA01F0D803FC1307D80F1E5B00
0E5C121C123C00385CD8783E133E1270A2017E137ED8F07C137CEA60FCC65A15FC00015C
5BA2140100035C13E0166002031370EDE0F0D807C014E0A20003EB07E116C09038E00FC1
EC1FC3000190383FE3809038F071E73A007FE0FF0090381F803C24227AA029>I<01F013
38D803FC13FCEA0F1E120E121C123C0038147CEA783E0070143CA2137ED8F07C1338EA60
FCC65A1578000114705BA215F0000314E05BA2EC01C0A2EBC003158014071500EBE00EA2
6C6C5A3800F878EB7FE0EB1F801E227AA023>I<D801F01538D803FC010E13FCD80F1E13
1E000E143E121C123C0038027E137CD8783E137C0070163CA2017E13FCD8F07C491338EA
60FCC65A0201147800014A137013F0A2020314F0000316E001E05BA2160117C001C013C0
0207EB0380A29039E00FE0071700021F130E3A01F03DF01E3A00F878F83C90393FF03FF0
90390FC00FC02E227AA033>I<011F137C90387FC1FF3A01E1E787803A03C0F703C09038
80FE0FEA07004813FC000E1580001E9038F80700001C91C7FC1301003C5B121812001303
5CA31307A25C1506010F130F150E14800038141ED87C1F131C00FC143C1538013F5B39F0
7FC0E03970F3C3C0393FE1FF80260F807EC7FC22227CA023>I<13F0D803FC1307D80F1E
130F000E141F121C123C0038143FD8783E133E1270A2017E137ED8F07C137CEA60FCC65A
15FC000114F85BA21401000314F013E0A2140315E0EA07C0A20003130715C0EBE00F141F
0001133F9038F07F8038007FEFEB1F8FEB001F1500A25C003E133E007E137E147C5C007C
5BEA7001495A38380780D83C1FC7FCEA0FFCEA07F020317AA025>I<903807801C90381F
E03C90383FF038017F13789038FFF8F03901F07CE0EBE01F3903C003C09038800780EC0F
00C7121E141C143C5C5C495AEB07C0495A011EC7FC5B5B4913704913F0000114E0485A38
078001390FC003C0381FF80790383E0F80393C1FFF00127838700FFE38F007F838E001E0
1E227CA01F>I E /Fi 25 127 df<ED07F0ED1FFEED781F913901E00F809139038007C0
DA070013E0020E13035C5C5C4A13075C13015C0103140F91C713C05B0106EC1F80A2010E
EC3F00010C147E913801FE7C90391C03FFF89039180703F0EDFFF8913801FE7C0138C77E
1330163F8213701360A301E05C5BA300015D167E5B16FE00035D7F4B5A4B5A486C5CD806
60495A0170495A6D49C7FCD80E1C137E390C0F01F8903803FFE0010090C8FC001C90C9FC
1218A312381230A312701260A312E0A22B447FB42B>12 D<EB1FC0D97FF0130348486C13
07486D1306486D130E486D130C261FC03F131C3A3E000F8018003C0107133848903803C0
3000700101137048010013604814E016E0C8EA60C01561ED718015331600A215371536A2
153E153CA21538A31530A21570A3156015E0A44A5AA44A5AA44AC7FCA328327FA028>I<
3903E001FC390FF807FF3A1C7C1E0FC0001890387807E039383EE00338303FC0D97F8013
F0127000601300137E00E01407D8C0FE14E0EA40FC1200150F12014914C0A2151F120349
1480A2153F1207491400A25D120F49137EA215FE121F495B0007C7FCC71201A25DA21403
A25DA21407A25DA2140FA25DEC038024327EA026>17 D<1307D90FC01338011F147C16FC
5CA2013F1301A202005BA2491303A2017E5CA201FE1307A2495CA20001140FA2495C1780
0003021F13C016C149EC8180A20007EC3F836D017F130016034B5A3A0FFC03CF869039FE
070F8E9039DFFE07FC9039C3F801F0D81FC0C9FCA25BA2123FA290CAFCA25AA2127EA212
FEA25A12382A327FA02E>22 D<013FB6128090B712C01203481680481600271F00C018C7
FC001C1438EA38010070143000601380EAE00300001470A2EB0700A25B15F0130E131EA2
013E7F133C137CA213FC497FA2000180A2485A157EA2D801C013382A217E9F2C>25
D<017FB512F048B612F85A5A4815E0261F0070C7FC123C1238485B126012E0EA0001A349
5AA31307A25C130FA3131FA291C8FC5BA35BA2137E133C25217E9F22>28
D<14FF010713E0011F13F8017F13FC3801FE00D803E0133CD80780131890C8FC120E120C
A4380E03C038073FF83803FC3CEBFFF8486C5A000EC8FC5A5A5A1260A212E05AA26C14E0
15C0007013010078EB0380003FEB1F00381FFFFE6C5B000313F0C613801E247EA124>34
D<123C127E12FFA4127E123C08087A8715>58 D<123C127EB4FCA21380A2127F123D1201
A412031300A25A1206120E120C121C5A5A126009177A8715>I<1530157815F8A215F014
01A215E01403A215C01407A21580140FA215005CA2143EA2143C147CA2147814F8A25C13
01A25C1303A25C1307A2495AA291C7FC5BA2131E133EA2133C137CA2137813F8A25B1201
A25B1203A2485AA25B120FA290C8FC5AA2121E123EA2123C127CA2127812F8A25A12601D
4B7CB726>61 D<1430A51478A800F0153CD8FF80EB07FC3A1FFCFCFFE00007B612800001
ECFE006C6C13F8011F13E0010390C7FCA3497FA290380FCFC0148790381F03E090383E01
F0EB3C004913780170133801F0133C48487F49130E491306262480A426>63
D<010FB712FEA218FC903A003FC000031700187C4B143CA2027F151C181892C8FCA25CA2
4A1303A201014A1338040613304A1500160E13035E4A137C91B512FC5B5EECF000163813
0F16305C1860011F027013E0046013C04A140104001380133F17034A15005F017F150EA2
91C8121E5F49157C5F4914030001ED1FF0B8FCA25F37337DB239>69
D<010FB712FCA218F8903A003FC00007170018785D1838147F183092C8FCA25CA25C1606
0101020E1370040C13604A1500A20103141C5E5C16F849B5FCA25EECF001010F13001660
5CA2011F14E05E5CA2013F91C8FCA25CA2137FA291CAFCA25BA25B487EB6FCA336337DB2
31>I<DB0FF81318DB7FFF13380203B5EAC078913A0FFC03E0F091393FC000F102FFC712
3BD901FC141FD907F815E04948140F49481407EB3F80017F16C049C81203485A5B000317
80485A485AA248481600A2485A94C7FC127F5BA312FF90CBFCA4480207B512C05DA29239
0007F8005FA2160FA25F127F161FA26C6C5D163F6C7E6C6C4A5A6C6C14FF6C6CEB01CFD8
01FEEB07872800FFC03F07C7FC90393FFFFC03010F01F0C8FC0101138035377CB43C>I<
90260FFFE092380FFFC06161D9003FEFE0004F5A19DFDA33F05EF0019F0273ED033F97C7
FC02631506180C02E35EDAE1F8EC187E14C118300101EE60FE61028115C0EF0180010316
81DA80FC90380301F81400170649ED0C0361010615181730010E017E140705605B010C15
C0A2011C913801800F610118EC030016060138013F141F4C5C01305CA201704A133F96C8
FC01605C6F5A01E05E4C137E000192C7FCD807F016FEB5D8801E90387FFFFC151C150C4A
337CB24A>77 D<010FB612F017FE83903B003FC0007FC0EF1FE0EF07F05DEF03F8147FA2
92C713FCA25CEF07F85CA2010116F0170F4A15E0EF1FC00103ED3F80EF7F004A14FEEE03
FC0107EC1FF091B612C04CC7FC02F0C9FC130FA25CA2131FA25CA2133FA25CA2137FA291
CAFCA25BA25B1201B512FCA336337DB231>80 D<03FF13180207EBE038021FEBF8789139
7F00FCF802FCEB1FF0D901F0130F4948130749481303494814E0A249C71201A2013E15C0
A3137E1780A2017F91C7FC8080EB3FF014FF15F06D13FE6D6D7E6D806D80010080020F7F
1400150F6F7E150315011500A2120CA2001C5D1218A2150100385D003C14035E4B5A007E
4A5A007F141F6D49C7FCD87BE0137C39F9FC03F839F07FFFE0D8E01F138026C003FEC8FC
2D377CB42F>83 D<B500F0903801FFFCA3D803FEC8EA3F8049ED1E00171C5F0001163017
7017605FA24C5A6D4AC7FC120016065EA25E16386D14305E6D14E05E4B5AA24BC8FCEC80
06A2013F5B5DA25D1570ECC0605DEB1FC15D02C3C9FCA214C614ECA2EB0FF8A25C5CA25C
5C130791CAFC130636357CB22D>86 D<147F903803FFC090380FC0F090383F0038137C49
13F83801F0013803E0031207EA0FC090388001F0001F90C7FC123F90C8FCA25A127EA45A
A3127C150C151C15386C147015E06CEB03C0390F800F003807C07E3801FFF038007F801E
227EA021>99 D<ED0F80ED3FE0ED7870913801F0F815E31403A2020713F0A291380FC1C0
EDC000A4141F5DA4143F92C7FC011FB512805B1600D9007FC7FC147EA414FE5CA513015C
A413035CA413075CA4130F5CA45C131FA291C8FC121CEA7F1E133EA2EAFE3C5B1278EA70
F0EA3FC0EA0F8025457CB425>102 D<D801E013FE3A07F803FF803A0E3E0F07E0001C90
383C03F039181F7001003813E026303FC07F12700060138014001503D8E07F5CEA407E12
00150701FE5C5B150F5E120149131FEE8080EE81C00003023F13804914011603037F1300
0007147E495CED3E0E5E000FEC1E3849EB0FF0D80380EB03C02A227EA02E>110
D<EB0380EB0FC0A3131FA21480A2133FA21400A25BA2137E387FFFFEA2B5FC3800FC00A2
1201A25BA21203A25BA21207A25BA2120FA25B1408001F131C14181380143814701460EB
00E0EB01C0380F8380EB8700EA07FEEA01F817307FAE1C>116 D<90391F801F8090397F
E07FE09039E0F0E0703A01C0F9C0F83903807D833807007F000E1403000C15F0001C137E
0018EC01C002FEC7FC00385B1210C7FC13015CA31303A25C1640010714E016C0001C5B00
7E1401010F148000FE1403011FEB0700011B130E39F839F01C397070F878393FE07FE039
0F801F8025227EA02C>120 D<13F0D803FCEB01C0D8071EEB03E0D80E1F1307121C0038
13800030140F013F14C000701300126049131FD8E07E14801240EA00FE49133F00011500
5BA25D0003147E5BA215FE5D5BA214015DEBF00314070001130F3900F83FF0EB3FFBEB0F
C3EB00075DA20007130FD81F805B003F495AA24AC7FCEB007E003E137C00385B381803F0
381E07C0D807FFC8FCEA01F823317EA026>I<156015F081A2157C157EB7FC1680A21600
C7EA01FCEC03F04A5A5D5D6EC7FC211072B526>126 D E /Fj 11
120 df<126012F87E127E7EEA1F80EA0FC0EA07E0120313F0120113F8120013FC137CA2
137EA2133EA9137EA2137CA213FC13F8120113F0120313E01207EA0FC0EA1F80EA3F0012
7E5A5A12600F2D7BA71F>41 D<387FFFFEB6FCA36C13FE18057D931F>45
D<123C127E12FFA4127E123C1200A9123C127E12FFA4127E123C081975981F>58
D<3803FFC0001F13F84813FCA2387F00FE007E137E007C133EA248131FB3A36C133F007C
133EA2007E137E007F13FE383FFFFCA26C13F8000313C018267DA41F>79
D<137F3801FFC0000713E04813F8EA1FC1383F00FC007E137C147E5A143EB512FEA314FC
00F8C7FC7EA2007E131C007F133E383F807E381FE0FE380FFFFC6C13F8000113F038007F
8017197D981F>101 D<EB01FCEB07FF011F13805B141F137E90387C0F0091C7FCA4387F
FFFCB57EA26C5BD8007CC7FCB1383FFFF8487FA26C5B19247FA31F>I<EA7FFC487EA212
7FEA003EB3AA007FB5FCB61280A26C140019247DA31F>108 D<137E3803FFC04813E048
13F0381FC3F8383F00FC007E137E007C133EA248131FA66C133F007C133EA2007E137E6C
13FC381FC3F8380FFFF06C13E06C13C038007E0018197D981F>111
D<387FE03F39FFF0FFC001F313E0EA7FF73801FFE714879038FE03C091C7FC5B5BA35BA9
387FFFF0B5FCA27E1B197F981F>114 D<397FF0FFE0D8FFF913F0A2D87FF013E0390780
1E00A2EBC03E0003133CA36C6C5AA36C6C5AA3EB79E0A3137F6D5AA36D5A6DC7FC1C197F
981F>118 D<397FE07FE039FFF0FFF0A2397FE07FE0391E000780A4001F130F6C140013
0FEB1F8FEB3FCFA3000713CE1339A2EBB9DEA2EBF0FE00035BA33801E0781C197F981F>
I E /Fk 47 122 df<14FF010F13C090383F01E090387C00F0EBF001EA01E01203EA07C0
6E5A92C7FCA6EC0FF8B6FCA23807C000B3A2486C487E3A7FFC0FFF80A221297FA826>12
D<1238127C12FEA6127CAA1238AA12101200A5123812FEA5123807297BA813>33
D<1238127C12FE12FFA2127F123B1203A31206A3120C121812381270122008127BA713>
39 D<1306130C13181330136013E0EA01C0EA0380A2EA07005A120E121EA2121C123CA3
5AA512F85AAB7E1278A57EA3121C121EA2120E120F7EEA0380A2EA01C0EA00E013601330
1318130C13060F3B7AAB1A>I<12C012607E7E7E120E7EEA0380A2EA01C013E0120013F0
A213701378A3133CA5133E131EAB133E133CA51378A3137013F0A213E0120113C0EA0380
A2EA0700120E120C5A5A5A5A0F3B7DAB1A>I<1238127C12FE12FFA2127F123B1203A312
06A3120C121812381270122008127B8613>44 D<B5FCA410047F8E16>I<1238127C12FE
A3127C123807077B8613>I<EB3F803801FFF03803E0F83807803C48487E001E7F003E14
80A2003C1307007C14C0A400FC14E0AE007C14C0A36CEB0F80A36CEB1F006C131E6C6C5A
3803E0F86CB45A38003F801B277EA521>48 D<13381378EA01F8121F12FE12E01200B3AB
487EB512F8A215267BA521>I<1238127C12FEA3127C12381200AB1238127C12FC12FEA2
127E123E1206A3120CA31218A212301270122007247B9813>59 D<140EA2141FA34A7EA3
EC6FC0A2ECEFE014C7A290380183F0A390380301F8A201067F1400A249137EA2011C137F
01187FA24980013FB5FCA2903960000FC0A201E080491307A248486D7EA2000381150112
07D81FC0497ED8FFF890383FFFE0A22B2A7EA931>65 D<B612F015FE3A07F0003F800003
EC07C0ED01F06F7E167C82A282EE0F80A3EE07C0A317E0A917C0A2160F1780A2EE1F00A2
163E5E5E4B5AED07E00007EC3F80B600FEC7FC15F02B287EA732>68
D<B512C0A23807F8006C5AB3B0487EB512C0A212287EA718>73 D<90B512C0A2903801FE
006D5AB3A9123812FEA3130100FC5B387803F000705B383C0FC0D80FFFC7FCEA03FC1A29
7EA722>I<B512E0A2D807F8C8FC6C5AB3A416C0A315011680A31503A21507150FED3F00
000714FFB7FCA222287EA729>76 D<D8FFF0EDFFF06D5C0007EEFE0000035E017CEC037C
A26D1406A26D140CA36D6C1318A26D6C1330A36D6C1360A26D6C13C0A3903900F80180A2
91387C0300A2EC3E06A36E5AA2EC0F98A3EC07F0A26E5AEA0780D80FC015FE3CFFFC01C0
1FFFF0A234287DA73C>I<D8FFF0903807FFE07FD803FC9038007E006D143C1618137F6D
7E6D7EA26D7E6D7E6D7EA26D7E6D7E147FA2EC3F80EC1FC0EC0FE015F01407EC03F8EC01
FCEC00FEA2157FED3F98ED1FD8A2ED0FF815071503A215011500486C1478487ED8FFFC14
3816182B287EA731>I<90387F80203903FFF06039078078E0380E000E48130748130300
7813010070130012F0A21560A27E1500127C127FEA3FE013FF6C13F06C13FC000313FFC6
1480010F13C0010013E0EC0FF014031401EC00F8A200C01478A46C1470A26C14F06C14E0
6CEB01C000EFEB078039E3E01F0038C0FFFC38801FF01D2A7DA825>83
D<007FB7FCA23A7E003F003F0078150F007081006081A200E01680481501A5C791C7FCB3
A64A7E013FB5FCA229287EA72F>I<B539C007FFE0A2D807F8C7EA7E006C48143C1618B3
A816386C6C143016706C6C1460017C14E0017E495A6D495A90260F8007C7FC903807E03E
903801FFF89038003FC02B297EA731>I<B590B5EB3FFEA2D80FF8D90FF8EB07F06C486D
48EB03E00003EF01C003031580A26C6C6EEB0300A36C6CD906FC1306A26D160E017ED90C
7E130CA2017F027F131C6D496C1318A290261F80386D5AED301FA290260FC0706D5AED60
0FA26D6C486C6C5AA214F0903B03F18003F180A202F914F3902801FB0001FBC7FCA202FF
14FF6D486D5AA2027E5C027C147CA202381438A33F297FA743>87
D<1204120E121C121812301260A312C0A312DC12FE12FFA2127F123E121C08127CA713>
96 D<13FE3807FFC0380F03E0381C00F0003E1378003F137C143C143E121EC7FCA3EB3F
FEEA01FF3807F03EEA1FC0EA3F00127EA2481418A3147E127EECDF38393F838FF0390FFE
0FE03903F807C01D1C7E9A21>I<EA0F8012FFA2121F120FAAEB81FCEB8FFF9038BC0FC0
9038F003E09038C001F0EB800015F815FC157CA2157EA7157CA215FC15F89038C001F015
E090387003C0390E3C0F80390C0FFF00380003F81F297EA725>I<EB3FC0EBFFF83803E0
3C3807C00E380F801F381F003F123EA2007E131E007C1300A212FCA7127C127E1403123E
6C1306EA0F803807C00C3803F0383800FFE0EB3F80181C7E9A1E>I<EC03E0143FA21407
1403AAEB3F833801FFE33803E03B3807800F380F0007481303123E127E127CA212FCA712
7CA2127E123E001E1307001F130F390F801FF03903E073FE3801FFE339007F03E01F297E
A725>I<133F3801FFE03803E1F0380F80F8381F007C143E123E007E131E141F127C12FC
A2B6FCA200FCC7FCA4127C127E1403123E6C1307380F800E3807C01C3803E0783800FFE0
EB3F80181C7E9A1E>I<EB07E0EB3FF0EB7C78EBF0FCEA01E01203EBC078000713301400
A8B51280A23807C000B3A2487EEA7FFEA216297FA815>I<90387E03E03901FF9FF03807
C3FC380F00F048EBF800001E1378003E137CA6001E1378001F13F86C5BEBC3E0380DFF80
D81C7EC7FC90C8FCA3121E380FFFF014FC6C13FF001F1480393E001FC000781307EC03E0
481301A40078EB03C0007C13076CEB0F80390FC07E003803FFF838007FC01C277E9921>
I<EA0F8012FFA2121F120FAAEB81FCEB8FFF90389C0F809038B007C013E09038C003E0A3
1380AF391FC007F039FFF83FFEA21F287EA725>I<120EEA3F80A5EA0E00C7FCA7EA0780
12FFA2121F120FB3121FEAFFF8A20D287EA713>I<130EEB3F80A5EB0E0090C7FCA7EB0F
80EA01FFA2EA001F130FB3A8127812FCEB1F00A2133EEA707CEA3FF8EA0FE0113483A715
>I<EA0F8012FFA2121F120FABEC3FF8A2EC1FC01500143C5C14E0EB81C0EB8380018FC7
FCEB9F8013BFEBF7C0EBC3E0EB81F0801380147C80143FEC1F80EC0FC0D81FC013E039FF
F83FFCA21E287EA723>I<EA0F8012FFA2121F120FB3AFEA1FC0EAFFF8A20D287EA713>I<
260F81FC137F3BFF8FFF03FFC0903A9C0F8703E03B1FB007CC01F0D80FE013D8903AC003
F000F8A301805BAF486C486C487E3CFFF83FFE0FFF80A2311A7E9937>I<380F81FC38FF
8FFF90389C0F80391FB007C0EA0FE09038C003E0A31380AF391FC007F039FFF83FFEA21F
1A7E9925>I<EB3F80EBFFE03803E0F83807803C48487E001E7F003E1480A248EB07C0A3
00FC14E0A7007C14C0A2007E130F003E1480001E1400001F5B380F803E3803E0F86CB45A
38003F801B1C7E9A21>I<380F81FC38FF8FFF9038BC0FC0391FF007E0390FC003F0EB80
0115F8EC00FCA2157C157EA7157C15FCA2EC01F801C013F0EC03E09038F007C09038BC1F
8090388FFF00EB83F80180C7FCA7487EEAFFF8A21F257E9925>I<380F07C038FF1FF0EB
38F8EA1F71EA0F6113C1EBC0F014005BAF487EEAFFFCA2151A7E991A>114
D<3803F840380FFEC0EA3C07EA7803EA7001EAF000A37E6C1300EA7FC013FC6CB4FC6C13
80000713C0C613E0130738C003F0130113007EA26C13E0130100F813C038EE078038C7FF
00EA81FC141C7E9A1A>I<13C0A41201A312031207120F121FB512E0A23807C000AC1430
A73803E060A23801F0C03800FF80EB3F0014257FA31A>I<390F8003E000FF133FA2001F
1307000F1303B01407A20007130F9038C01BF03903E073FE3801FFE339007F83E01F1B7E
9925>I<39FFF807FEA2390FE001F001C013E0000714C013E000031480EBF00300011400
A23800F806A2EB7C0CA2EB7E1CEB3E18A26D5AA2EB0FE0A36D5AA26D5AA21F1A7F9823>
I<3BFFF8FFF07FE0A23B1FC01FC01F80000F90390F800E00A20007150CEC1FC02603E01B
5B15E0143B2601F0315B15F0D9F86013700000156015F89039FCC078E0017CEB7CC0137D
90393F803D80153FEC001F6D91C7FCA2011E7F010E130EA22B1A7F982F>I<39FFF81FFC
A2390FF00FE0D807E01380D803F013003801F80E00005BEB7C386D5AEB3FE06D5A130F13
0780497EEB1DF8EB38FCEB707EEBE03E48487E0003EB0F80000714C0001F14E039FFE01F
FEA21F197F9823>I<39FFF807FEA2390FE001F001C013E0000714C0EA03E01580EBF003
000114006D5A0000130613FCEB7C0CA26D5AA26D5AA214F06D5AA26D5AA26D5AA291C7FC
A213061230EA780EEAFC0C131C1318485AEA70E0EA3FC06CC8FC1F257F9823>I
E /Fl 6 55 df<1360EA01E0120F12FF12F11201B3A3387FFF80A2111C7B9B1C>49
D<EA03FCEA0FFF383C0FC0387003E0387801F0EAFC0014F8A214781278C712F814F0A2EB
01E0EB03C0EB0780EB0F00131C5B13E03801C018EA0380EA0600481338383FFFF05AB5FC
A2151C7D9B1C>I<EA01FC380FFF80381E07C0383001E0007C13F01300127EEA7C010038
13E0EA0003EB07C0EB1F803803FE005B38000780EB03C0EB01E0EB00F014F81230127812
FCA214F0EA7801387003E0383C07C0380FFF00EA03FC151D7D9B1C>I<EB01C013031307
130FA2131B1333137313E3EA01C3EA038313031206120C121C1238127012E0B512FEA238
0003C0A6EB7FFEA2171C7E9B1C>I<001C13E0EA1FFF14C0140013FC0018C7FCA513FCEA
1BFF381F07C0381C01E01218EB00F0C7FC14F8A2127012F8A214F01301006013E0387003
C0383C0F80380FFF00EA03F8151D7D9B1C>I<EB3F80EBFFC03803C0E0380700F0EA0E01
121C383800E014001278127013FF00F3138038F601C038F400E000F813F01470481378A4
1270A200781370123814E0381C01C0380F03803807FF00EA01FC151D7D9B1C>I
E /Fm 6 55 df<13E01201120712FF12F91201B3A7487EB512C0A212217AA01E>49
D<EA01FC3807FF80381C0FC0383003E0386001F0EB00F812F86C13FCA2147C1278003013
FCC7FC14F8A2EB01F0EB03E014C0EB0780EB0F00131E13385B5B3801C00CEA0380380600
185A5A383FFFF85AB512F0A216217CA01E>I<13FF000313C0380F03E0381C00F014F800
3E13FC147CA2001E13FC120CC712F8A2EB01F0EB03E0EB0FC03801FF00A2380003E0EB00
F01478147C143E143F1230127812FCA2143E48137E0060137C003813F8381E03F0380FFF
C00001130018227DA01E>I<14E01301A213031307A2130D131D13391331136113E113C1
EA01811203EA07011206120C121C12181230127012E0B6FCA2380001E0A6EB03F0EB3FFF
A218227DA11E>I<00101330381E01F0381FFFE014C01480EBFE00EA1BF00018C7FCA513
FE381BFF80381F03C0381C01E0381800F014F8C71278A2147CA21230127812F8A2147848
13F8006013F0387001E01238381E07803807FF00EA01F816227CA01E>I<EB0FC0EB7FF0
3801F0383803C0183807803C380F007C121E001C1338003C1300A2127C1278EB7FC038F9
FFE038FB80F038FE0038143C48131EA248131FA41278A36C131EA2001C133C001E13386C
1370380781E03801FFC038007F0018227DA01E>I E /Fn 34 118
df<123C127EB4FCA21380A2127F123D1201A312031300A25A1206120E5A5A5A12600915
7A8714>44 D<130C133C137CEA03FC12FFEAFC7C1200B3B113FE387FFFFEA2172C7AAB23
>49 D<EB3FC03801FFF03807C0FC380E007E487FEC1F80003F14C0A2EB800F1300A2000C
131FC7FC1580A2EC3F00143E5C5CEB03F0EBFFC014F0EB00FC143FEC1F8015C0140F15E0
A2EC07F0A21238127C12FEA3EC0FE012F8006014C00070131F6C1480001EEB3F00380780
FC3801FFF038007FC01C2D7DAB23>51 D<EB1FC0EBFFF03803E07C3807801E48487E001E
EB0780A248EB03C0A4123E1407003F1480381FC00F01E01300EBF81E6C6C5A3807FFF86C
13E0C6FCEB3FF8EBFFFC3803C7FFD807831380D81F0013C0001E133F48EB1FE0007C1307
0078EB03F012F84813011400A46C14E000781301007C14C0003C13036CEB0780390F800F
003807E03C3801FFF038003FC01C2D7DAB23>56 D<EB3F80EBFFF03803E0783807C03E48
487E48487E003E14801407007E14C0127C00FC14E01403A315F0A5007C1307127EA2003E
130F7E6C131F3807803B3803E0F33800FFC390383F03E013001407A215C0A2140F001E14
80003F14005C143E143C003E5B001C5B380E03E03807FF80D801FEC7FC1C2D7DAB23>I<
4A7E4A7EA34A7EA24A7EA3EC1BF81419A2EC30FCA2EC70FEEC607EA24A7EA349486C7EA2
010380EC000FA201066D7EA3496D7EA2011FB57EA29038180001496D7EA349147EA201E0
147F4980A20001ED1F801203000716C0D80FF0EC3FE0D8FFFC0103B5FCA2302F7EAE35>
65 D<B612FCEDFF803A03F8000FC00001EC03F06F7E6F7E82167E167FA6167E16FE5E4B
5A4B5AED0FE0ED7F8090B6C7FC16E09039F80003F0ED01FC6F7E167F821780161F17C0A6
1780163F17005E16FEED03FC0003EC0FF0B712C04BC7FC2A2D7DAC32>I<DA1FF013C091
38FFFE01903903F00F8390390F8001E3013FC71277017C143F4848141F4848140F484814
07A248481403121F491401123F90C8FC481500A300FE1600AB127F17C0A27E7F001F1501
6D1580120F6C6C1403EE07006C6C14066C6C140ED8007C5C013F147890390F8001E09039
03F00FC0902600FFFEC7FCEC1FF02A2F7CAD33>I<B712FCA23903F800030001EC007C16
3E161E160EA21606A3160716031518A21600A31538157815F890B5FCA2EBF80015781538
1518A592C7FCAB487EB512F8A2282D7EAC2E>70 D<DA1FF013C09138FFFE01903903F00F
8390390F8001E3013FC71277017C143F4848141F4848140F48481407A248481403121F49
1401123F90C8FC481500A300FE1600A992381FFFFEA2007F9138001FE0EE0FC0A27E7F12
1F7F120F6C7EA26C7E6C6C141FEA007C013F143FD90F8013F3903903F007C10100B51200
DA1FF813002F2F7CAD37>I<B512F0A23803FC006C5AB3B3A3487EB512F0A2142D7EAC19>
73 D<B512F8A2D803FCC8FC6C5AB3A7160CA41618A41638A2167816F81501ED07F00003
141FB7FCA2262D7EAC2C>76 D<D8FFF8923807FFC06D5D0003EFF00000015F01BE151BA2
019F1533A3D98F801463A2D987C014C3A2D983E0EB0183A3D981F0EB0303A2D980F81306
A3027C130CA26E1318A36E1330A291380F8060A2913807C0C0A3913803E180A2913801F3
00A3EC00FEA2157C487ED80FF04B7EB5D93801B512C0A23A2D7DAC41>I<D8FFF8903803
FFFC7F00019138003FC06DEC0F006D1406EBBF80A2EB9FC0EB8FE0138780EB83F8138180
EB80FE147E147FEC3F80EC1FC0140F15E0EC07F0140315F8EC01FC140015FE157FED3F86
151F16C6ED0FE6150716F6ED03FE1501A21500167E163EA2486C141ED80FF0140EB5FC16
062E2D7DAC35>I<B612FCEDFF803A03F8000FE00001EC03F0ED00F882167E167F821780
A617005E167E5E5EED03F0ED0FE090B6128003FCC7FC01F8C9FCB2487EB512F0A2292D7E
AC30>80 D<90383F80303901FFF0703807C07C390F000EF0001E13074813034813011400
127000F01470A315307EA26C1400127E127FEA3FE013FE381FFFE06C13FC6C13FF000114
80D8003F13E013039038003FF0EC07F81401140015FC157C12C0153CA37EA215787E6C14
706C14F06CEB01E039F78003C039E3F00F0038E07FFE38C00FF01E2F7CAD27>83
D<007FB712F8A29039000FC003007C150000701638A200601618A200E0161CA248160CA5
C71500B3A94A7E011FB512E0A22E2D7EAC33>I<13FF000713C0380F01F0381C00F8003F
137C80A2143F001E7FC7FCA4EB07FF137F3801FE1FEA07F0EA1FC0EA3F80EA7F00127E00
FE14065AA3143F7E007E137F007FEBEF8C391F83C7FC390FFF03F83901FC01E01F207D9E
23>97 D<EA07C012FFA2120F1207AC14FE9038C7FF809038CF03E09038DC01F09038F800
7C49137E49133E497F1680A2150F16C0A9ED1F80A216005D6D133E6D5B01B05B9038BC01
F090380E07E0390607FF80260001FCC7FC222F7EAD27>I<EB1FE0EB7FFC3801F01E3803
E0073907C01F80EA0F80EA1F005A003EEB0F00007E90C7FCA2127C12FCA9127EA215C07E
6C130101801380380FC0033907E007003801F03E38007FF8EB1FC01A207E9E1F>I<15F8
141FA214011400ACEB0FE0EB7FF83801F81E3803E0073807C003380F8001EA1F00481300
123E127EA25AA9127C127EA2003E13017EEB8003000F13073903E00EFC3A01F03CFFC038
007FF090391FC0F800222F7EAD27>I<EB1F80EBFFF03803E0783807C03E380F801E381F
001FEC0F80123E007E130715C0127C12FCA3B6FCA200FCC8FCA5127EA2003E14C0123F6C
1301390F80038001C013003803E00F3801F03C38007FF8EB1FC01A207E9E1F>I<EB03F0
EB0FFCEB3E1EEB7C3F13F8EA01F0A23803E00C1400AAB512E0A23803E000B3A6487E387F
FF80A2182F7FAE16>I<013F13F89038FFC3FE3903E1FF1E3807807C000F140C391F003E
00A2003E7FA76C133EA26C6C5A00071378380FE1F0380CFFC0D81C3FC7FC90C8FCA3121E
121F380FFFF814FF6C14C04814F0391E0007F848130048147C12F848143CA46C147C007C
14F86CEB01F06CEB03E03907E01F803901FFFE0038003FF01F2D7E9D23>I<EA07C012FF
A2120F1207AC14FE9038C3FF809038C703E09038DE01F013F8496C7EA25BA25BB2486C48
7E3AFFFE1FFFC0A2222E7EAD27>I<EA0780EA0FC0EA1FE0A4EA0FC0EA0780C7FCA8EA07
C012FFA2120F1207B3A5EA0FE0EAFFFCA20E2E7EAD14>I<EA07C012FFA2120F1207B3B3
A3EA0FE0EAFFFEA20F2E7EAD14>108 D<2607C07FEB07F03BFFC3FFC03FFC903AC783F0
783F3C0FCE01F8E01F803B07DC00F9C00F01F8D9FF8013C04990387F000749137EA24913
7CB2486C01FEEB0FE03CFFFE0FFFE0FFFEA2371E7E9D3C>I<3807C0FE39FFC3FF809038
C703E0390FDE01F0EA07F8496C7EA25BA25BB2486C487E3AFFFE1FFFC0A2221E7E9D27>
I<EB1FE0EB7FF83801F03E3803C00F3907800780390F0003C04814E0003EEB01F0A248EB
00F8A300FC14FCA9007C14F8A26CEB01F0A26CEB03E0A2390F8007C03907C00F803901F0
3E0038007FF8EB1FE01E207E9E23>I<3807C0FE39FFC7FF809038CF03E0390FDC01F039
07F800FC49137E49133E49133FED1F80A3ED0FC0A8151F1680A2ED3F00A26D137E6D137C
5D9038FC01F09038CE07E09038C7FF80D9C1FCC7FC01C0C8FCA9487EEAFFFEA2222B7E9D
27>I<380781F838FF87FEEB8E3FEA0F9CEA07B813B0EBF01EEBE000A45BB0487EB5FCA2
181E7E9D1C>114 D<1360A413E0A312011203A21207121FB512F0A23803E000AF1418A7
14383801F03014703800F860EB3FE0EB0F80152A7FA81B>116 D<D807C013F800FF131F
A2000F130100071300B21401A314033803E007EC0EFC3A01F81CFFC038007FF890391FE0
F800221F7E9D27>I E /Fo 50 123 df<EC07FF91B512E001078090391FFC01FC90383F
E0009039FFC001FE48EB80031400484A7E496D5AA36F5AED007093C7FCA4ED3FFFB8FCA4
3903FE0001B3A7277FFFF03F13F8A42D347FB331>12 D<120FEA3FC0EA7FE0EAFFF0A6EA
7FE0EA3FC0EA0F000C0C7A8B19>46 D<147814F81303131FEA03FFB5FCA3EAFC1F1200B3
B2007FB512FEA41F317AB02C>49 D<EB1FFC90B57E000314E0000F14F8391FE03FFC393F
800FFF48487E6D6C1380D8FFC014C06D7E16E080A36C5A6C5A6CC7FCC8FC16C05C16805C
16004A5A4A5A5D4A5AEC3FC04A5A02FEC7FC495A495A903907E001E0EB0FC0EB1F809038
3E00034914C05B4848130748B6FC5A5A5A5A5AB71280A423317CB02C>I<EB0FFC90387F
FF8048B512F03903F01FF83907C00FFE380F8007486C6C7E01F01480123F13F8A5D81FF0
14006C485AD803805BC7FC4A5A4A5A4A5AECFFC0013F90C7FC14FCECFFC09038001FF0EC
0FFC6E7E6E7E16806E13C0A2000F15E0EA3FC0EA7FE0EAFFF0A416C0A2495AD87FC01480
49481300003F5B391FF01FFE6CB512F8000314E0C61480D91FFCC7FC23327CB02C>I<15
1F5D5DA25D5C5C5C5CA25C143D147D14F9EB01F114E1EB03C1EB0781130FEB1F01133E13
3C137813F01201EA03E0EA07C01380EA0F00121E123E5A5AB712FEA4C700031300A80103
B512FEA427317EB02C>I<000C140ED80FE013FE90B5FC5D5D5D5D5D92C7FC14FC14F091
C8FC1380A6EB87FE9038BFFFC090B512F09038FC0FF89038E003FE01C07F497E01001480
000E6D13C0C8FCA216E0A3121FEA7F807F487EA316C05B5CD87F801480D87C0014006C5B
393F8007FE391FE01FFC0007B512F06C14C0C691C7FCEB1FF823327CB02C>I<EC7FC090
3803FFF0010F13FC90383FE07E90387F801F4848485A4848EBFF8048485A13F8120FEA1F
F0A2123F6E13004848133C92C7FCA2142039FFE1FF8001E713E001EF13F89038FE03FC49
6C7E01F87F6E13805B16C0A24914E0A5127FA5123F16C0121F6D1480000F5B01F814006C
6C485A6C6C485A6CB55A6C6C5B011F13C0D907FEC7FC23327CB02C>I<123C123F90B612
F8A44815F016E016C0168016005D007CC7127E00785C4A5A00F8495A48495A4A5A4A5AC7
FC4AC7FC147E14FE5C13015C1303A2495AA2130FA2131FA25C133FA4137FA96D5AA2010F
C8FC25337BB12C>I<EB07FE90383FFFC090B512F03903F807FC3907C000FE4848137F81
48C71380151F5A7FA27F7F01F8133F01FE14006D6C5A6CEBE0FEECF1FC6CEBFFF815E06C
5C6C14F06C806C6C7F48B57E4880D80FF31480D81FE014C0383FC03FEB800F48486C13E0
140148EB007F48143F151FA2150FA216C07E6C141F6D14806C6C133F6DEB7F00391FF803
FE0007B512F86C5CC66C13C0D90FFCC7FC23327CB02C>I<EB07FC90383FFF8090B512E0
3903FE0FF03907F807F848486C7E001F6D7E003F80497E007F1580A212FF16C0A416E0A6
007F5BA2123F5CEA1FF0000F5B6C6C5A3803FFFEC65BD93FF013C0EB00805CA2EA078026
1FE0011380EA3FF01600A24A5AA24A5A49485A391F801FF09038C07FE06CB512806C91C7
FC000113FC38003FC023327CB02C>I<ED1F80A24B7EA24B7EA34B7EA24A7FA34A7FA24A
7F15CFA2020F7F1587021F801503023F80EC3E01A2027E80EC7C0002FC804A137FA20101
814A133F0103814A131FA249B67EA24981A290271F8000077F91C77EA24982013E80017E
82017C80A201FC8249157FB500F0013FB512F0A43C347DB343>65
D<B712FEEEFFC017F817FEC69039C0001FFF04071380040113C0A27013E0A2EF7FF0A6EF
FFE0A24C13C0A24C138093380FFE00EE3FFC91B612F017C017F89139C00007FE933803FF
80040013C018E0EF7FF018F8173FA218FCA618F8A2177FEFFFF04C13E05E040F13C0B912
005F17F0178036337DB23F>I<DBFFE01338021F01FE137891B6EA80F8010315E1010F90
38E00FF7903A1FFE0001FFD97FF8EB007FD9FFE0143F4849141F4849140F4890C8120748
5A1703485A1701123F5B007F1600A349160012FFAB127F7F1878A2123F7F001F17F818F0
6C7E6D15016CEE03E06C7F6C6DEC07C06C6DEC0F80D97FF8EC3F00D91FFE14FE903A0FFF
E007FC010390B512F0010015C0021F49C7FC020013F035357BB340>I<B712FCEEFFC017
F817FEC69039E0003FFF040313C004007F717EEF1FF8717E841707848319808319C0A419
E0AB19C0A419805FA219004D5A170F604D5A4D5AEFFFE004035B041F5BB848C7FC17F817
C004FCC8FC3B337DB244>I<B812FEA4C69038E0000FEE01FF82838383A283A3DB01E013
801707A4030390C7FCA21507151F91B5FCA4ECE01F1507150318F01501A2EF01E0A392C7
FCA21703A2EF07C0A2170F171F173F17FF1607B91280A434337DB23A>I<B812FCA4C690
38E0001FEE03FE16011600177E173EA2171EA3923803C01F170FA403071300A2150F153F
91B5FCA4ECE03F150F1507A21503A592C8FCABB612F8A430337DB238>I<B612E0A4C6EB
E000B3B3A7B612E0A41B337DB221>73 D<B612F8A4C601E0C8FCB3A81778A417F817F0A3
1601A21603A21607160F161F167F923803FFE0B8FCA42D337DB235>76
D<B500E093387FFFF86E93B5FCA26E5DC6F1F800D9F7FCED03DFA3D9F3FEED079FA2D9F1
FFED0F1FA201F06D141EA26E6C143CA26E6C1478A26E6C14F0A36E6CEB01E0A26E6CEB03
C0A26E6CEB0780A26E6CEB0F00A26EEB801EA26F6C5AA36F6C5AA26F6C5AA292380FF9E0
A26FB45AA26F5BA26F90C7FCA3B526F000FE011FB512F8A2167C16384D337DB254>I<91
3803FF80027F13FC49B6FC0107010113C0903A1FF8003FF0D93FE0EB0FF8D9FFC0EB07FE
48496D7E4890C76C13804980000717C04848ED7FE0A24848ED3FF0A2003F17F8A2007F17
FC49151FA300FF17FEAB007F17FCA26D153FA2003F17F8A36C6CED7FF0A26C6CEDFFE000
0717C06D5C6C17806C6D4913006C6D495AD97FF0EB1FFCD91FF8EB3FF0903A07FF01FFC0
010190B5C7FC6D6C13FC020713C037357BB342>79 D<B712F8EEFF8017E017F8C69039E0
007FFCEE0FFE707E701380A27013C0A218E0A718C0A24C1380A24C13004C5AEE7FFC91B6
12F017C04CC7FC02E0C9FCB3B612E0A433337DB23C>I<B712E016FEEEFFC017F0C6D9E0
0013FCEE1FFEEE07FF707FA2707FA284A660A24C5B95C7FC4C5AEE1FFCEEFFF891B612C0
94C8FC83DAE0037F03007FEE3FF083707EA2707EA583A4193CA2188082F0C07CB6D8E003
147870EBE1F070EBFFE0053F13C0CA000313803E347DB242>82 D<D90FFC137090397FFF
80F048B512E1000714FB390FF803FF391FE0007F4848133F49130F007F140790C7FC1503
481401A36D1300A27F6D140013F8387FFFC014FCECFFE06C14F86C14FE816C1580000315
C06C15E06C6C14F0131F010014F8140F9138007FFC153F151F150F00F01407A21503A27E
A216F86C14076C15F07E6DEB0FE001E0131F01FEEB7FC000FDB61200D8F87F5BD8F01F13
F8D8E00113C026357BB331>I<003FB812F8A4D9F003EB801FD87F80ED03FC0100150100
7E1600007C177CA20078173CA400F8173E48171EA4C71600B3A9011FB612F0A437327DB1
3E>I<B66CB639800FFFFCA400019026C0000101C0C7EA1F001B1E6E6F143E6C6F163CA2
6E6E6C147C017F19786E4A6C14F8013F61A26E496D1301011F616E497F010F03CF4A5AA2
6E01076D13076D03875DA29226800F03EB800F6D96C7FCDBC01F6E5A6DDA1E01141EA2DB
E03EECE03E6DDA3C00143CDBF07C14F0027F0178017F5BA2DBF8F8ECF8F8023F49013F5B
A2DBFDE0EB1FFD021F5F03FF15FF6E496D5BA36E496D5BA26E90C76C90C8FCA36E486E5A
A24B140002005EA20378157856347EB25B>87 D<EB7FFE0003B512E04814F8390FF00FFC
391FF803FF806E138016C0157F6C5A6C5AEA0180C8FCEC7FFF010FB5FC90B6FC0003EBF0
7F000F1300EA1FF8485A485A485A5BA315FF7F007F5B6D4813E03A3FF80FBFFF000FB512
1F0003EBFC0F39007FE00728217EA02B>97 D<EA01FC12FFA4120F1207ADEC07FC91387F
FF8001FDB512E09039FFF00FF89138C007FC91380003FE496D7E496D1380A217C0167FA2
17E0A917C0A216FF1780A26D4913006D495A9138C007FC9039F3F01FF801E1B512E0D9C0
7F13809026800FF8C7FC2B347EB331>I<903807FF80013F13F090B512FC3903FE01FE48
48487EEA0FF8EA1FF0EA3FE0A2007F6D5A496C5A153000FF91C7FCA9127F7FA2003FEC07
807F6C6C130F000FEC1F00D807FE133E3903FF80FCC6EBFFF8013F13E0010790C7FC2121
7DA027>I<ED01FC15FFA4150F1507ADEB07FE90383FFFC790B512F70003EB01FF3907FC
003F4848131F4848130F48481307A2127F5BA212FFA9127FA27F123F150F6C6C131F6C6C
133F6C6C497E2603FE03B512E0C6B512E7013F1387903807FC072B347DB331>I<903803
FF80013F13F090B512FC48EB03FE3907FC007F4848EB3F804848EB1FC05B003FEC0FE012
7F5B16F012FF150790B6FCA301C0C8FCA4127F7F123F16F06C7E000F14016C6CEB03E0D8
03FEEB0FC03A01FF807F806C6CB51200011F13FC010313E024217EA029>I<EC3FE09038
03FFF8010F13FC90383FF1FE90387FC3FFEBFF83481303A2EA03FEEC01FEA2EC00781500
A7B512FEA4D803FEC7FCB3A7387FFFF8A420347EB31B>I<16F890390FFC07FE90387FFF
9F48B6127F3907FC0FFC380FF003001F14FED9E001133E003FECFF1C1600A6001F5CEBF0
03000F5C3907FC0FF890B512E0486C1380D90FFCC7FC48C9FCA37F7F90B512F015FE6CEC
FF8016E06C15F06C15F84815FC121F393F80001F48C7EA03FE481401481400A46C14016C
6CEB03FC6C6CEB07F86C6CEB0FF0D80FFCEB7FE00003B61280C6ECFE00010F13E028327E
A12C>I<EA01FC12FFA4120F1207ADEC03FF020F13C0023F13F09138FC0FF89039FDE007
FCEBFFC04A6C7E1400A25BA25BB2B539E07FFFF0A42C347DB331>I<EA03F0487E487E48
7EA66C5A6C5A6C5AC8FCA8EA01FC12FFA4120F1207B3A5B512C0A412357DB418>I<EA01
FC12FFA4120F1207ADED7FFFA4ED1FC04B5A037EC7FC5DEC03F8EC07E04A5AEC3F804AC8
FC4A7E90B5FC8181ECBFF0EC3FF89038FC1FFCEBF80F6E7E6E7E6E7F82806F7E6F7E6F7E
B539C07FFFC0A42A347DB32F>107 D<EA01FC12FFA4120F1207B3B3A6B512E0A413347D
B318>I<2703F803FEEB03FE00FF903B1FFFC01FFFC0027FD9E07F7F913BF81FF0F81FF0
903CF9E00FF9E00FF8260FFBC0EBFBC06CB4486CB4486C7E02001400495CA3495CB2B500
E0B500E0B512E0A443217CA04A>I<3901F803FF00FF010F13C0023F13F09138FC0FF890
39F9E007FC380FFBC06CB4486C7E1400A25BA25BB2B539E07FFFF0A42C217DA031>I<90
3803FF80011F13F090B512FE48EB01FF3A07FC007FC0D80FF0EB1FE0001F15F049130F00
3F15F8491307007F15FCA300FF15FEA8007F15FCA26D130F003F15F8001F15F06D131F6C
6CEB3FE06C6CEB7FC03A01FF01FF006CEBFFFE013F13F80103138027217EA02C>I<3901
FC07FC00FF90387FFF8001FDB512E09039FFF01FF89138C007FC000790380003FE498049
6D1380A26F13C0A3EE7FE0A9EEFFC0A34B1380A26D4913006D495A9138C00FFC9138F03F
F801FDB512E0D9FC7F1380DA0FF8C7FC91C9FCABB512E0A42B307EA031>I<3901F81F80
00FFEB7FF0ECFFF89038F9E3FC9038FBC7FE380FFF876C1307A213FEEC03FCEC01F8EC00
60491300B1B512F0A41F217EA024>114 D<9038FFE1C0000713FF5A383F803F387E000F
14075A14037EA26C6CC7FC13FCEBFFE06C13FC806CEBFF80000F14C06C14E0C6FC010F13
F0EB007F140F00F0130714037EA26C14E06C13076CEB0FC09038C01F8090B5120000F913
FC38E03FE01C217DA023>I<133CA5137CA313FCA21201A212031207001FB51280B6FCA3
D807FCC7FCB0EC03C0A79038FE078012033901FF0F006C13FEEB3FFCEB0FF01A2F7EAE22
>I<D801FC14FE00FF147FA4000F140700071403B21507A2150F151F6C6C497E6C6C01FB
13F06CEBFFF3013F13C3903807FE032C217DA031>I<B539C007FFC0A4D807FEC7EAF800
00035D6D13016C5D14806C4A5AA2ECC007017F5CECE00F013F91C7FC6E5A011F131EECF8
3E010F133CECFC7C01071378ECFEF801035B14FF6D5BA26D5BA26E5AA26EC8FCA2141E2A
217EA02F>I<B53B83FFFC03FFE0A43D07FC001FE0003E00183C6D167C00036F1378033F
14F86C6C6E5B157F9139807BFC016C5FDAC0FB1303017FD9F1FE5B14C19139E1E0FF0701
3F5E9139F3C07F0F011F038FC7FC14F7903A0FFF803FDEA29238001FFE6D5DA26D486D5A
A24A130701015DA26D486D5A4A13013B217EA040>I<B539C03FFF80A400039039000FC0
006C01805B6C4AC7FC90387FC03E6D6C5A6E5A90381FF9F0EB0FFF6D5B6D5B6D5B7F816E
7E4A7E497FEB03EF903807C7FC90380FC3FE90381F83FFD93F017FD97E007F496D7E496D
7E4848131FD8FFFE90387FFFC0A42A217EA02F>I<B539C007FFC0A4D807FEC7EAF80000
035D6D13016C5D14806C4A5AA2ECC007017F5CECE00F013F91C7FC6E5A011F131EECF83E
010F133CECFC7C01071378ECFEF801035B14FF6D5BA26D5BA26E5AA26EC8FCA2141EA25C
A2147C003E1378007F13F8486C5A1381EB83E0EB87C0495AD87F3FC9FCEA3FFEEA1FF8EA
07E02A307EA02F>I<001FB6FCA39038E007FE9038800FFCEB001F001EEB3FF8003E14F0
EC7FE0003C13FF4913C01580491300C65A495A495A5C133F90387FF00FEBFFE014C04813
805A48EB001F5B4848131E001F143E4848137E4913FE387FE003B6FCA320217EA027>I
E /Fp 18 120 df<EA03E0EA0FF0EA1FF813FCEA3FFEA213FFA27EA27E1203EA007FA213
7E13FEEA01FC1203EA07F8EA3FF0127FEAFFE0EA7F801300123C1019708B30>44
D<120FEA3FC0EA7FE0A2EAFFF0A4EA7FE0A2EA3FC0EA0F000C0C6E8B30>46
D<EC1FE0ECFFF8010313FE010F7F4914804914C090397FF03FE09038FF800F4890380007
F0D803FC13033A07F801FBF89038F007FF380FE01F4A13FCEA1FC0495A003FEBFF0F9038
00FE07903901FC03FE007FEBF801EA7E03ECF000A2EAFE0700FC49137EAA00FE6D13FED8
7E0314FCA2ECF801D87F0114F8003FEBFC03903900FE07F0903880FF0F001F90387FFFE0
6D6C13C0EA0FE06E13803A07F007FE009038F801F86C6CC7127C6CB414FE6CEB80039038
7FF01F6DB512FC6D14F86D14E0010314C00100EBFE00EC1FF0273A7CB830>64
D<EB3FFC48B57E4814E04880488048809038F00FFE9038E001FF806F7E6C48133F6C4880
C8121FA491B5FC130F137F48B6FC12075A48EBC01F383FFC00EA7FE0138048C7FC5AA46C
143FA26C6C137F9038C001FF263FF80FEBFFC06CB712E0A2000714F76C14C3C6020013C0
D93FF090C7FC2B2A7CA830>97 D<ECFFE0010713FC011F7F017F7F90B612804815C048EB
807F3907FC003F485A485A49EB1F804848EB0F004990C7FC127F90C9FCA25A5AA87E7EA2
7F003FEC07C06DEB0FE06C7E6D131F6C6C14C0D807FE133F9039FFC0FF806C90B5FCC615
006D5B011F13F801075B01011380232A7AA830>99 D<913801FFE04A7F5CA28080EC0007
AAEB03FE90381FFF874913E790B6FC5A5A481303380FFC00D81FF0133F49131F485A150F
4848130790C7FCA25AA25AA87E6C140FA27F003F141F6D133F6C7E6D137F390FF801FF26
07FE07EBFFC06CB712E06C16F06C14F76D01C713E0011F010313C0D907FCC8FC2C397DB7
30>I<49B4FC010713E0011F13F8017F7F90B57E488048018113803A07FC007FC0484813
3FD81FE0EB1FE0150F484814F0491307127F90C7FCED03F85A5AB7FCA516F048C9FC7E7E
A27F003FEC01F06DEB03F86C7E6C7E6D1307D807FEEB1FF03A03FFC07FE06C90B5FC6C15
C0013F14806DEBFE00010713F8010013C0252A7CA830>I<D903FC13FF90261FFF8713C0
4913DF90B712E05A5A2607FE07138F903AF801FE07C048486C6CC7FCA2497F001F814913
3FA56D137F000F92C7FC6D5BA26C6C485AEBFE0790B55A5D485C15C001DF5BD9C3FCC8FC
01C0C9FCA37F7F6CB512F015FF6C15C04815F0488148813A3FE0001FFE0180130148C812
7F007E8100FE168048151FA56C153F007FED7F006D5C6C6C495A01F013076CB4EB7FFC6C
90B55A6C5D000115C06C6C91C7FC011F13FC010113C02B3E7DA730>103
D<14E0EB03F8A2497EA36D5AA2EB00E091C8FCA9381FFFF8487F5AA27E7EEA0001B3A900
3FB612C04815E0B7FCA27E6C15C023397AB830>105 D<EA7FF8487EA4127F1200AB0203
B512804A14C017E0A217C06E14809139001FE0004B5A4B5A4BC7FC4A5A4A5AEC0FF84A5A
4A5A4A5A4A5A01FD7F90B57E8114F7ECE3F8ECC1FCEC81FEEC00FF497F496D7E6F7E826F
7E15076F7E6F7E3B7FFFF81FFFE0B56C4813F017F8A217F06C496C13E02D387FB730>
107 D<02FC137E3B7FC3FF01FF80D8FFEF01877F90B500CF7F15DF92B57E6C010F138726
07FE07EB03F801FC13FE9039F803FC01A201F013F8A301E013F0B3A23C7FFE0FFF07FF80
B548018F13C0A46C486C01071380322881A730>109 D<EC01FE3A3FFC0FFF80267FFE3F
13E000FF90B57E90B67E7E6C9038FE07FCC6EBF8039138E001FE14C0EC8000A291C7FCA2
5BB3A23B3FFFF81FFFF8486D4813FCB500FE14FEA26C01FC14FC6C496C13F82F2880A730
>I<49B4FC010F13E0013F13F8497F90B57E0003ECFF8014013A07FC007FC04848EB3FE0
D81FE0EB0FF0A24848EB07F8491303007F15FC90C71201A300FEEC00FEA86C14016C15FC
A26D1303003F15F86D13076D130F6C6CEB1FF06C6CEB3FE06D137F3A07FF01FFC06C90B5
12806C15006C6C13FC6D5B010F13E0010190C7FC272A7CA830>I<EC03FE3A3FFC1FFF80
267FFE7F13E000FF90B57E90B612FC6C816CEBFE07C69038F001FF4A6C13804A137F4AEB
3FC091C7121F4915E0160FA217F01607A8160FA217E07F161F6EEB3FC0A26EEB7F806E13
FFDAF00313009138FC0FFE91B55A5E495C6E13C0021F90C7FCEC03FC91C9FCAD383FFFF8
487FB57EA26C5B6C5B2C3C80A730>I<ED07F83A3FFF803FFF486DB51280B512C302CF14
C06C13DF6C9038FFFC3FD8001F13E09238801F809238000F004A90C7FC5C5C5CA25CA45C
AF003FB512FC4880B7FCA26C5C6C5C2A287EA730>114 D<90381FFC1E48B5129F000714
FF5A5A5A387FF007EB800100FEC7FC4880A46C143E007F91C7FC13E06CB4FC6C13FC6CEB
FF806C14E0000114F86C6C7F01037F9038000FFF02001380007C147F00FEEC1FC0A2150F
7EA27F151F6DEB3F806D137F9039FC03FF0090B6FC5D5D00FC14F0D8F83F13C026780FFE
C7FC222A79A830>I<D83FFCEB3FFC486C497E00FF14FFA2007F147F003F143F00001400
B3A41501A2150315076D130F903A7FC07FFFF891B612FC6D15FE7F6D4913FC6D9038F87F
F8010001C0C7FC2F2880A630>117 D<3B3FFFC01FFFE0486D4813F0B515F8A26C16F06C
496C13E0D807E0C7EA3F00A26D5C0003157EA56D14FE00015DEC0F80EC1FC0EC3FE0A33A
00FC7FF1F8A2147DA2ECFDF9017C5C14F8A3017E13FBA290393FF07FE0A3ECE03FA2011F
5C90390F800F802D277FA630>119 D E /Fq 2 104 df<153FEC03FFEC0FE0EC3F80EC7E
00495A5C495AA2495AB3AA130F5C131F495A91C7FC13FEEA03F8EA7FE048C8FCEA7FE0EA
03F8EA00FE133F806D7E130F801307B3AA6D7EA26D7E80EB007EEC3F80EC0FE0EC03FFEC
003F205B7AC32D>102 D<12FCEAFFC0EA07F0EA01FCEA007E6D7E131F6D7EA26D7EB3AA
801303806D7E1300147FEC1FC0EC07FEEC00FFEC07FEEC1FC0EC7F0014FC1301495A5C13
075CB3AA495AA2495A133F017EC7FC485AEA07F0EAFFC000FCC8FC205B7AC32D>I
E /Fr 21 123 df<123C127E12FFA4127E123C08087A9615>1 D<0060153000F815F86C
1401007EEC03F06CEC07E06C6CEB0FC06C6CEB1F806C6CEB3F006C6C137E6C6C5B6C6C48
5A90387E03F06D485A90381F8FC090380FDF806DB4C7FC6D5A6D5AA2497E497E90380FDF
8090381F8FC090383F07E090387E03F0496C7E48486C7E4848137E48487F4848EB1F8048
48EB0FC048C7EA07E0007EEC03F048EC01F848140000601530252475A43C>I<130E131F
A639700E01C000F8EB03E000FE130F00FF131F397F8E3FC0391FEEFF003803FFF8C613E0
EB3F80A2EBFFE0000313F8381FEEFF397F8E3FC039FF0E1FE000FE130F00F813030070EB
01C0D8001FC7FCA6130E1B207BA226>I<ED0FFF92B512F0020314FC020F14FF91263FF8
0113C0913AFF80001FF04948C7EA07F8D907F8EC01FED90FE0EC007FD91F80ED1F8049C9
6C7E017E707E49707E4848707E4916004848177C0007187E49173E484883A248CBEA0F80
A2003EF007C0A2003C1803007C19E0A200781801A200F819F0A2481800A96C1801A20078
19E0A2007C1803A2003C19C0003E1807A26CF00F80A26C6CEF1F00A26C6C173E6D177E00
03187C6C6C5F6D16016C6C4C5A017E4C5A6D4C5A6D6C4B5AD90FE0037FC7FCD907F8EC01
FED901FEEC07F86D6C6CEB1FF0913A3FF801FFC0020FB6C8FC020314FC020014F0030F90
C9FC44477CB54D>13 D<EB1FC0EBFFF8487F000713FF4814804814C04814E0A24814F0A2
B612F8AA6C14F0A26C14E0A26C14C06C14806C1400000113FC6C5BEB1FC01D1E7CA126>
15 D<007FB812C0B912E0A26C17C0CCFCAC007FB812C0B912E0A26C17C0CCFCAC007FB8
12C0B912E0A26C17C033247CA43C>17 D<023FB512FC49B612FE1307011F15FCD93FE0C8
FC01FFC9FCEA01FCEA03F0485A485A5B48CAFC5A123E5AA21278A212F8A25AA67EA21278
A2127CA27E123F7E6C7E7F6C7E6C7EEA01FC6CB4FCEB3FE06DB612FC010715FE1301D900
3F14FC91C9FCAC001FB712FC4816FEA26C16FC2F3E7AB03C>I<013F16402601FFE015E0
4813F8487F4813FF4880D83FC06D1301273E001FE014C048D907F8130300786D6C130700
70D900FFEB0F8000F091387FE07F486EB512006F5B03075B6F5B03005B0040ED1F803312
7C9B3C>24 D<187018F0A2841878A2187C183C183E84A2727E727E85727E727E727E197F
007FBA12C0BB12F0A26C19C0CCEA7F0019FC4E5A4E5A4E5A614E5A4EC7FCA2183E183C18
7C1878A218F860A2187044287CA64D>33 D<15F0A214014A5A5D14074A5AA24ACBFC143E
5C91B912E04918F05B010F18E0D91F80CBFC017FCCFC13FCEA07F8EA1FE0EAFF80A2EA1F
E0EA07F8C67E137FEB1F806DB912E0010318F07F6D18E0027CCBFC80806E7EA26E7E1403
816E7E1400A2442A7CA74D>40 D<17F0A283177C173C173E83A2717E717E717E007FB87E
B97E846C17FFCBEA1F80F00FE0F003F0F001FE9538007F80F11FF0A2F17F80953801FE00
F003F0F00FE0F01F80007FB9C7FCB912FC606C5FCAEA03E04D5A4D5A4DC8FCA2173E173C
177C5F5FA2442A7CA74D>I<91383FFFF849B512FC1307011F14F8D93FE0C7FC01FFC8FC
EA01FCEA03F0485A485A5B48C9FC5A123E5AA21278A212F8A25AB712F816FCA216F800F0
C9FC7EA21278A2127CA27E123F7E6C7E7F6C7E6C7EEA01FC6CB4FCEB3FE06DB512F80107
14FC1301D9003F13F8262E7AA933>50 D<0060ED018000F0ED03C06C1507A20078168000
7C150FA2003C1600003E5DA26C153EA26C153C6D147CA26C6C5CA200035D90B6FCA26C5D
A29038F000036C6C495AA201785C017C130FA2013C91C7FC013E5BA26D133EA26D133CEC
807CA201071378ECC0F8A2903803E1F0A201015B14F3A26DB45AA26E5AA36EC8FCA3141E
140C2A3680B32B>56 D<156015F0B3B3AB007FB812E0B912F0A26C17E034347CB33D>63
D<EC07E0143FECFE00EB03F8495A495A5C131F5CB3A5133F91C7FC137E5BEA03F8EA7FE0
48C8FCEA7FE0EA03F8C67E137E7F80131FB3A580130F806D7E6D7EEB00FEEC3FE014071B
4B7BB726>102 D<12FCEAFFC0EA07F0EA01FC6C7E137F7F80131FB3A580130F6D7E6D7E
EB01FC9038007FC0EC1FE0EC7FC0903801FC00EB03F0495A495A131F5CB3A5133F91C7FC
5B13FE485AEA07F0EAFFC000FCC8FC1B4B7BB726>I<EB0180EB03C01307A21480130FA2
EB1F00A2131E133EA25BA2137813F8A2485AA25B1203A2485AA25B120FA248C7FCA2121E
123EA25AA2127812F8A41278127CA27EA2121E121FA26C7EA212077FA26C7EA212017FA2
6C7EA21378137CA27FA2131E131FA2EB0F80A2130714C0A21303EB0180124A79B71E>I<
126012F07EA21278127CA27EA2121E121FA26C7EA212077FA26C7EA212017FA26C7EA213
78137CA27FA2131E131FA2EB0F80A2130714C0A41480130FA2EB1F00A2131E133EA25BA2
137813F8A2485AA25B1203A2485AA25B120FA248C7FCA2121E123EA25AA2127812F8A25A
1260124A7CB71E>I<126012F0B3B3B3B31260044B78B715>I<131E133FA8131EA7130CA2
007CEB0F8039FFCCFFC090B5FCA213CC397C0C0F80000090C7FC131EA5133FB3A4131EAD
130CA51A467CB423>121 D<131E133FA7131EA5130C007CEB0F8039FFCCFFC090B5FCA2
13CC397C0C0F80000090C7FC131EA5133FA7131E90C8FC131E133FA7131EA5130C007CEB
0F8039FFCCFFC090B5FCA213CC397C0C0F80000090C7FC131EA5133FA7131E1A457CB423
>I E /Fs 69 127 df<00101320007C13F838FE01FCAAEAFC00007C13F8A90038137016
1778AE27>34 D<EB01C0EB03E0130F131FEB3FC0EB7F80EBFE00485A5B1203485A5B485A
A2485AA248C7FCA3127EA45AAC127EA47EA36C7EA26C7EA26C7E7F6C7E12017F6C7EEB7F
80EB3FC0EB1FE0130F1303EB01C0133A73B327>40 D<127012F812FE7E6C7E6C7EEA0FE0
6C7E12037F6C7E1200137EA27FA2EB1F80A3EB0FC0A4EB07E0ACEB0FC0A4EB1F80A3EB3F
00A2137EA25B1201485A5B1207485AEA3FC0485A48C7FC5A12F81270133A7AB327>I<13
0F497EA60078EB81E000FEEB87F000FF138FEBDFBF6CB512E06C14C0000F1400000313FC
C613F0A2000313FC000F13FF003F14C04814E039FFDFBFF0EB1F8F00FE13870078EB81E0
0000EB8000A66DC7FC1C207BA627>I<120FEA3FC013E0EA7FF0A213F8A2123FA2120F12
0113F01203EA07E0121FEA7FC0EAFF8013005A12700D14738927>44
D<007FB512F8B612FCA46C14F81E067C9927>I<121EEA7F80A2EAFFC0A4EA7F80A2EA1E
000A0A728927>I<1538157C15FCA2140115F8140315F0140715E0140F15C0141F158014
3F1500A25C147E14FE5C13015C13035C13075C130F5CA2131F5C133F91C7FC5B137E13FE
5B12015B12035BA212075B120F5B121F5B123F90C8FC5A127E12FE5AA25A12781E3A7CB3
27>I<130E131FA25B5BA25B5A5A127FB5FCA213BFEA7E3F1200B3AA003FB512805A15C0
1580A21A2F79AE27>49 D<EB3FE03801FFF84813FE000FEBFF804814C0393FE07FE0EB80
0F397F0007F0007EEB03F800FE13015A6C14FC1400A3127CC8FCA2140115F8A2140315F0
1407EC0FE0EC1FC0143FEC7F80ECFF00495A495A495A495A495A495A495A01FEC7FC485A
D807F81378484813FC485A485A48B5FCB6FCA36C14F81E2F7CAE27>I<EB1FF8EBFFFE00
03EBFF80000F14C015E0391FF01FF0393FC007F8EB800115FC1400A26CC7FC1204C8FC14
0115F81403EC07F0140FEC3FE090381FFFC0491380A215E06D13F09038001FF8EC03FC14
01EC00FE157E157F153FA21238127C12FEA2157F48147E6C14FE007FEB01FCEB8003393F
F01FF86CB512F06C14E000031480C6EBFE00EB1FF820307DAE27>I<14FF010713C0011F
13F04913F890B5FC48EB81FC3803FE0113F8EA07F0EA0FE09038C000F8001F1400485A90
C8FCA25A127EEB0FF838FE3FFE48B51280B612C015E09038F80FF09038E007F890388001
FC90C7FC15FE48147E157F153FA3127EA3127F6C147F157E6C6C13FE9038C001FC120F90
38F007F83907F81FF06CB512E06C14C06C148090383FFE00EB0FF820307DAE27>54
D<EB0FF0EB7FFE48B512804814C0000F14F0EBF81F391FE007F8393F8001FC90C7FC4814
FE007E147EA56C14FCEB8001391FC003F8390FE007F03907FC3FE00001B5128039007FFE
006D5A90B5FC000314C0390FF00FF0391FC003F8393F8001FC90C7FC007E147EA248143F
A6007E147EA2007F14FE393F8001FC391FE007F8EBF81F6CB512F06C14E0000114803900
7FFE00EB0FF020307DAE27>56 D<121EEA7F80A2EAFFC0A4EA7F80A2EA1E00C7FCAC121E
EA7F80A2EAFFC0A4EA7F80A2EA1E000A20729F27>58 D<120FEA3FC0A2EA7FE0A4EA3FC0
A2EA0F00C7FCAC120FEA3F8013C0127F13E0A3123FA2120F120713C0120FA2EA3F80EA7F
005A5A12F812700B2A739F27>I<15101578EC01FC1403140FEC1FF8EC7FF0ECFFC04913
80903807FE00495AEB3FF0495A48485A4890C7FCEA0FFEEA1FF8EA7FF0EAFFC05BA27FEA
7FF0EA1FF8EA0FFEEA03FF6C13C06C6C7E6D7EEB0FFC6D7E903801FF806D13C0EC7FF0EC
1FF8EC0FFC14031401EC007815101E287CAA27>I<007FB512FEB7FCA4003F14FEC9FCA6
003FB512FEB7FCA46C14FE20127D9F27>I<1230127812FE7E13C06C7EEA3FF8EA0FFC6C
7E3801FF806C7FEB3FF06D7EEB0FFEEB03FF6D13C09038007FE0EC3FF8EC0FFC1407A214
0FEC3FF8EC7FE0903801FFC0491300EB0FFEEB1FF8495AEBFFC0485BD807FEC7FC485AEA
3FF8EA7FE0485A90C8FC5A127812301E287CAA27>I<EB01FE903807FF80011F13C0017F
13E090B512F048EB03F83803FC013907F000FC390FE01F7C9038C07FFE381F80FF130148
5A393E07F1FF007E13E0397C0FC07FEC803FA2EAFC1F00F8EB001FA800FCEB803FD87C0F
133EA2ECC07E397E07E0FC003E13F1393F03FFF86C6C13F0018013E0390FC07FC09038E0
1F1E3907F0003FD803FC137F3901FF03FF6CEBFFFE6D13FC011F13F0010713C001011300
202E7DAD27>64 D<EB03F0497EA2497EA4143CEB1F3EA5EB3F3FA3EB3E1FA2017E7FA449
6C7EA548486C7EA390B5FCA24880A3EBF003A248486C7EA4000F803A7FFC0FFF8000FF15
C06D5A497E007F1580222F7EAE27>I<007FB5FCB612C08115F87E3907E003FCEC00FE15
7E157F81A6157EA25D1403EC0FF890B55A15C015F081819038E000FE157FED3F80151FA2
ED0FC0A6151F1680153FED7F004A5A007FB55AB65A5D15E06C1480222E7FAD27>I<9038
03F80E90381FFE1F90383FFFBF90B6FC5A3803FE0F3807F803497E48487E485A49137FA2
48C7123FA25A127E151E150012FE5AAA7E127EA2151E007F143F7EA26C7E157F6D137E6C
6C13FE3907F001FCEBF8033903FE0FF86CB512F06C14E0013F13C06D1300EB03F820307D
AE27>I<007FB61280B712C0A37E3907E0000FA6ED078092C7FCA4EC07804A7EA390B5FC
A5EBE00FA36E5A91C8FCA4ED03C0ED07E0A7007FB6FCB7FCA36C15C0232E7FAD27>69
D<007FB61280B712C0A37E3907E0000FA6ED078092C7FCA4EC07804A7EA390B5FCA5EBE0
0FA36E5A91C8FCAC387FFF80B57EA36C5B222E7EAD27>I<903807F03890381FFC7C9038
7FFFFC90B5FC5A3803FC1F3807F00F380FE007EBC003001F13011380123F90C7FCA2127E
A2157892C7FC5AA8EC1FFF4A1380A3007E6D1300EC00FCA36C1301A21380121FEBC00312
0FEBE0073807F00F3803FC1F6CB5FC7EEB7FFE90381FFC78D907F0C7FC21307DAE27>I<
007FB512E0B612F0A36C14E039001F8000B3B2007FB512E0B612F0A36C14E01C2E7BAD27
>73 D<90381FFFF84913FCA36D13F89038001F80B3AC127CA212FEA2EC3F005C387F81FE
13FF6C5B6C5B000713E0C690C7FC1E2F7BAD27>I<387FFFC080B5FC7E5CD803F0C8FCB3
AAED0780ED0FC0A7007FB6FCA2B7FC7E1680222E7FAD27>76 D<D87FE0EB7FE0486CEBFF
F0A26D5A007F15E0000F150001B813DFEBBC03A3EBBE07019E139FA3EB9F0FA2018F131F
A2149FA2EB879EA4EB839C14FCA3EB81F8A2EB80F01400AAD87FF0EBFFE0486C4813F0A3
6C486C13E0242E7FAD27>I<3A7FF003FFE0486C4813F0A213FC007F6D13E00007903800
3E0013DEA313CFA3148013C714C0A213C314E0A213C114F0A3EBC0F8A31478147CA2143C
143EA2141E141F140FA3EC07BEA3EC03FEEA7FFCEAFFFE1401A26C486C5A242E7FAD27>
I<EBFFFC0007EBFF80001F14E0A24814F0EBC00F397F8007F8EB0003007E1301A348EB00
FCB3A76C1301007E14F8A3007F1303EB8007393FE01FF090B5FC6C14E0A200071480C6EB
FC001E307CAE27>I<007FB5FCB612E081816C803907E003FEEC00FF81ED3F80151F16C0
150FA6151F1680153FED7F005DEC03FE90B55A5D5D5D92C7FC01E0C8FCADEA7FFEB5FCA3
6C5A222E7FAD27>I<387FFFF0B512FE6E7E816C803907E01FF014076E7E1401811400A5
14015D14034A5A141F90B55A5D5DA281EBE01F6E7E14076E7EA816F0EDF1F8A4397FFE01
FBB5EBFFF08016E06C48EB7FC0C8EA1F00252F7FAD27>82 D<90387FC0E03901FFF1F000
0713FF5A5AEA3FE0EB801F387F000F007E130712FE5A1403A3EC01E06C90C7FC127E127F
EA3FC013F86CB47E6C13F86C13FE6CEBFF80C614C0010F13E0010013F0140FEC07F81403
140115FC1400127812FCA46CEB01F8A26C130390388007F09038F01FE090B5FC15C01500
00F85B38701FF81E307CAE27>I<007FB61280B712C0A439FC03F00FA60078EC07800000
91C7FCB3AB90B512C04880A36C5C222E7EAD27>I<D87FE0EB7FE0486CEBFFF0A36C48EB
7FE0001FC7EA0F80A76C6CEB1F00A614F0EB81F83907C3FC3EA4149CEBC79EA30003143C
A301E7137CEBEF9FA2140FA200011478A49038FE07F8A300005CA2EBFC0390387801E024
2F7FAD27>87 D<387FFFF0B512F8A314F000FCC7FCB3B3ACB512F014F8A36C13F0153A71
B327>91 D<387FFFF0B512F8A37EEA0001B3B3ACEA7FFFB5FCA36C13F0153A7EB327>93
D<007FB512F8B612FCA46C14F81E067C7E27>95 D<3803FFC0000F13F04813FC4813FF81
1380EC1FC0381F000F000480C71207A2EB0FFF137F0003B5FC120F5A383FFC07EA7FC013
0012FE5AA46C130F007F131FEBC0FF6CB612806C15C07E000313F1C69038807F8022207C
9F27>97 D<EA7FE0487EA3127F1203A914FF01F313C090B512F08181EC81FE49C67E49EB
3F8049131F16C049130FA216E01507A6150F16C07F151F6DEB3F80157F6DEBFF009038FF
83FEECFFFC5D5D01F313C02601E0FEC7FC232E7FAD27>I<EB0FFF017F13C048B512E048
14F05A380FF807EA1FE0393FC003E0903880008048C8FC127EA212FE5AA67E127EA2007F
14F0393F8001F813C0381FE003390FF80FF06CB5FC6C14E06C14C06C6C1300EB0FF81D20
7B9F27>I<EC3FF04A7EA3143F1401A9EB0FE1EB7FFD48B5FC5A5A380FF83F381FE00F38
3FC007EB8003EA7F00007E1301A212FE5AA67E007E1303A2127F6C1307EB800F381FE01F
380FF03F6CB612C06C15E06C13FD38007FF9D91FE013C0232E7EAD27>I<EB0FF8EB3FFE
90B51280000314C04814E0390FFC0FF0391FE003F8EBC001D83F8013FC48C7FC127E157E
12FEB612FEA415FC00FCC8FC7E127E127F6C143C6D137E6C7E01F013FE390FFC07FC6CB5
FC000114F86C14F0013F13C0903807FE001F207D9F27>I<EC1FF0ECFFF84913FC4913FE
5BEB0FF014C0011F137CEC8000A6007FB512F0B612F8A36C14F039001F8000B3A4003FB5
12C04814E0A36C14C01F2E7EAD27>I<153F90391FC0FF80D97FF313C048B612E05A4814
EF390FF07F873A1FC01FC3C0EDC000EB800F48486C7EA66C6C485AEBC01FA2390FF07F80
90B5C7FC5C485BEB7FF0EB1FC090C9FCA27F6CB5FC15E015F84814FE4880EB8001007EC7
EA3F80007C140F00FC15C0481407A46C140F007C1580007F143F6C6CEB7F009038F807FF
6CB55A000714F86C5CC614C0D90FFCC7FC23337EA027>I<EA7FE0487EA3127F1203A914
7F9038F1FFC001F713F090B5FC8114C1EC01FCEBFE005B5BA25BB03A7FFF83FFE0B500C7
13F0A36C018313E0242E7FAD27>I<130F497E497EA46D5A6DC7FC90C8FCA7383FFF8048
7FA37EEA000FB3A4007FB512F0B6FC15F815F07E1D2F7BAE27>I<143C147E14FFA4147E
143C1400A73801FFFE4813FFA37EC7123FB3B0147E1238007C13FE38FE01FC1303B512F8
14F06C13E06C13803807FE0018407CAE27>I<EA7FE07F12FF127FA21201A991383FFFC0
4A13E0A36E13C0913803F8004A5A4A5A4A5A4A5A02FFC7FCEBF1FEEBF3FCEBF7F8EBFFFC
8080143F496C7E496C7E01F87FEBF0076E7E6E7E816E7E157E3A7FFFC1FFF002C313F8B5
12E36C13C316F0252E80AD27>I<387FFF80B57EA37EEA000FB3B2007FB512F8B612FCA3
6C14F81E2E7CAD27>I<397F07C01F3AFF9FF07FC09039FFF9FFE091B57E7E3A0FFC7FF1
F89038F03FC001E0138001C01300A3EB803EB03A7FF0FFC3FF486C01E3138001F913E701
F813E36C4801C313002920819F27>I<387FE07F39FFF1FFC001F713F090B5FC6C800003
13C1EC01FCEBFE005B5BA25BB03A7FFF83FFE0B500C713F0A36C018313E024207F9F27>
I<EB1FE0EB7FF83801FFFE487F481480390FF03FC0391FC00FE0393F8007F0EB00034814
F8007E1301A248EB00FCA76C1301007E14F8A2007F1303393F8007F0A2391FE01FE0390F
F03FC06CB512806C14006C5B38007FF8EB1FE01E207C9F27>I<387FE0FFD8FFF313C090
B512F0816C800003EB81FE49C67E49EB3F8049131F16C049130FA216E01507A6150F16C0
7F151F6DEB3F80157F6DEBFF009038FF83FEECFFFC5D5D01F313C0D9F0FEC7FC91C8FCAC
387FFF80B57EA36C5B23317F9F27>I<90380FF03C90383FFE7E90B5FC000314FE5A380F
FC1F381FE007EBC003383F800148C7FC127EA200FE147E5AA67E007E14FEA2007F1301EA
3F80EBC003381FE007380FF81F6CB5FC7E6C147E38007FFCEB0FF090C7FCAC91381FFFF8
A24A13FC6E13F8A226317E9F27>I<397FFC03FC39FFFE0FFF023F13804A13C0007F90B5
FC39007FFE1F14F89138F00F809138E002004AC7FC5CA291C8FCA2137EAD007FB57EB67E
A36C5C22207E9F27>I<9038FFF3800007EBFFC0121F5A5AEB803F38FC000F5AA2EC0780
6C90C7FCEA7F8013FC383FFFF06C13FC000713FF00011480D8000F13C09038003FE01407
0078EB03F000FC1301A27E14036CEB07E0EBE01F90B512C01580150000FB13FC38707FF0
1C207B9F27>I<133C137EA8007FB512F0B612F8A36C14F0D8007EC7FCAE1518157EA415
FE6D13FC1483ECFFF86D13F06D13E0010313C0010013001F297EA827>I<397FE01FF848
6C487EA3007F131F00031300B21401A21403EBFC0F6CB612E016F07EEB3FFE90390FF87F
E024207F9F27>I<3A7FFC0FFF80486C4813C0A36C486C13803A07C000F800EBE0010003
5CA2EBF00300015CA2EBF80700005CA390387C0F80A36D48C7FCA3EB3F3FEB1F3EA214FE
6D5AA36D5AA26D5A22207E9F27>I<3A7FFE07FFE000FF15F06D5A497E007F15E03A0F80
001F00A36D5B0007143EA414F0EBC1F83903E3FC7CA4EBE79EA200011478A301F713F8A2
EBFF0F6C5CA3EBFE0790387C03E024207F9F27>I<393FFC1FFF486C5A168016006C487E
3901F807E06C6C485A4A5A017E90C7FC6D5AEB1F7E5C6D5A13076D5A5C80497E130F497E
143EEB3E3FEB7E1F90387C0F8001F87F00016D7E3803F0033A7FFE1FFF80A2B54813C06C
486C1380A222207E9F27>I<3A7FFC0FFF80486C4813C0A36C486C13803A07E000F80000
0313015D13F00001130301F85B1200A26D485A137CA290387E0F80133EA2011F90C7FC5C
A2130F149E14BE130714FC1303A25C1301A25CA213035CA213075C1208EA3E0F007F5B13
1FD87E7FC8FCEA7FFE6C5A5B6C5AEA07C022317E9F27>I<001FB512FE4814FFA4903800
01FEEC03FCEC07F8EC0FF0001EEB1FE0C7EA3FC0EC7F80ECFF00495A495A495AEB1FE049
5A495A49C7FC485A4848131E4848133F485A485A485A485AB7FCA46C14FE20207E9F27>
I<EC07F8EC3FFC14FF130315F8903807FE00EB0FF05C5CB0131FEB7F80EA3FFFB5C7FC5B
A27F003F7FEA007FEB1FC0130FB08080EB07FE903803FFF815FC1300143FEC07F81E3A7C
B327>I<127812FCB3B3B3A21278063A70B327>I<EA7F80EAFFF013FC13FF7E00017F3800
3FC0131F130FB080EB07F8ECFFF06D13FC7FA25B4913F0ECF800EB0FE05CB0131F133F48
B45A007F90C7FCB5FC13FC13F0EA7F801E3A7CB327>I<3901F003803903FC07C0000F13
0F381FFE1F393FFF7F80397FBFFF0038FE1FFE486C5A00F813F0387003E01A0A7AAD27>
I E /Ft 85 124 df<4A7E4A7EA34A7EA34A7EA44A7E141BA2EC33FC1431A2EC61FE1460
A24A7E81A2D901807F153FA2D903007F151FA2010680150FA249801507A249801503A249
801501A249801500A2498082A200011680163F487ED80FF0ECFFC0D8FFFE010F13FFA330
367EB535>3 D<91393FE00FE0903A01FFF83FF8903A07E01EF83C903A1F800FF07E903A
3F001FE0FE017E133F4914C0485A1738484890381F8000ACB812C0A33B03F0001F8000B3
A7486C497EB50083B5FCA32F357FB42D>11 D<EC1FE0ECFFFC903803F01E90390FC00780
EB1F8090393F000FC0017E131F5BA2485AED0F8092C7FCA9ED0FC0B7FCA33901F8001F15
0FB3A6486CEB1FE0267FFFC1B5FCA328357FB42B>I<EC1FF891B512C0903803F00F9038
0FC01FEB1F80EB3F00137E5B150F485AACB7FCA33901F8000FB3A7486CEB1FE0267FFFE3
B5FCA328357FB42B>I<DA1FE013FF9126FFFC0713E0903B03F01E1F80F0903B0FC0077E
003CD91F805B90273F001FF8137E017E4A13FE495CA248485C030F147C95C7FCA9187EB9
12FEA33B01F8000FC000187EB3A6486C496C13FF297FFFC1FFFE0F13F8A33D357FB440>
I<15065D151C15181538903807F03090383FFE609038F80FE03901E003C048486C7ED807
807F390F00037848147C001EEB063C003EEB0E3E140C48497EA2143000FC017013801460
14E014C0EB0180130314005BD87C0614005B007E5CD83E18133E1338D81F305B5BD80FE0
5B6C48485A6C6C485A3901F80F802603BFFEC7FCEB07F00006C9FC120E120C121C12185A
212E7EA626>28 D<123C127E12FFA8127EAB123E123CAB1218A61200A7123C127E12FFA4
127E123C08367AB515>33 D<123C127EB4FCA21380A2127F123D1201A412031300A25A12
06120E120C121C5A5A126009177AB315>39 D<14C01301EB0380EB0F00130E5B133C5B5B
A2485A485AA212075B120F90C7FC5AA2121E123EA3123C127CA55AB0127CA5123C123EA3
121E121FA27E7F12077F1203A26C7E6C7EA213787F131C7F130FEB0380EB01C01300124A
79B71E>I<12C07E1270123C121C7E120F6C7E6C7EA26C7E6C7EA27F1378137C133C133E
A2131E131FA37F1480A5EB07C0B0EB0F80A514005BA3131E133EA2133C137C137813F85B
A2485A485AA2485A48C7FC120E5A123C12705A5A124A7CB71E>I<156015F0B3A4007FB8
12C0B912E0A26C17C0C800F0C8FCB3A4156033327CAB3C>43 D<123C127EB4FCA21380A2
127F123D1201A412031300A25A1206120E120C121C5A5A126009177A8715>I<B512F0A5
14057F921A>I<123C127E12FFA4127E123C08087A8715>I<1530157815F8A215F01401A2
15E01403A215C01407A21580140FA215005CA2143EA2143C147CA2147814F8A25C1301A2
5C1303A25C1307A2495AA291C7FC5BA2131E133EA2133C137CA2137813F8A25B1201A25B
1203A2485AA25B120FA290C8FC5AA2121E123EA2123C127CA2127812F8A25A12601D4B7C
B726>I<EB0FE0EB7FFCEBF83E3903E00F803907C007C0EB8003000F14E0391F0001F0A2
4814F8A2003E1300007E14FCA500FE14FEB2007E14FCA56CEB01F8A36C14F0A2390F8003
E03907C007C0A23903E00F803900F83E00EB7FFCEB0FE01F347DB126>I<13075B5B137F
EA07FFB5FC13BFEAF83F1200B3B3A2497E007FB51280A319327AB126>I<EB3FC0EBFFF0
000313FC380F80FF391E007F80001CEB3FC048EB1FE048130F15F00060130712FC6C14F8
7E1403A3007E1307123CC7FC15F0A2140F15E0EC1FC0A2EC3F801500147E5C495A5C495A
495A495A49C7FC133E133C4913185B485A48481330485A48C7FC001C1470001FB512F05A
5AB612E0A31D327CB126>I<EB1FE0EBFFFC4813FF3907E03F80390F001FC0001EEB0FE0
001CEB07F0123F018013F8140313C01380A2381F0007C7FC15F0A2EC0FE015C0141FEC3F
80EC7E00EB01F8EB7FE014FCEB003FEC1FC0EC0FE0EC07F015F8140315FC140115FEA312
7EB4FCA415FC48130312780070EB07F86C14F0003C130F001FEB1FE0390FE03F800003B5
1200C613FCEB1FE01F347DB126>I<EC01C0A214031407A2140F141FA2143F147F146F14
CF1301EB038F140F1307130E130C131C13381330137013E013C0EA018012031300120612
0E120C5A123812305A12E0B71280A3C7380FC000A94A7E0107B51280A321337EB226>I<
000C14C0380FC00F90B5128015005C5C14F014C0D80C18C7FC90C8FCA9EB0FC0EB7FF8EB
F07C380FC03F9038001F80EC0FC0120E000CEB07E0A2C713F01403A215F8A41218127E12
FEA315F0140712F8006014E01270EC0FC06C131F003C14806CEB7F00380F80FE3807FFF8
000113E038003F801D347CB126>I<14FE903807FF80011F13E090383F00F0017C137039
01F801F8EBF003EA03E01207EA0FC0EC01F04848C7FCA248C8FCA35A127EEB07F0EB1FFC
38FE381F9038700F809038E007C039FFC003E0018013F0EC01F8130015FC1400A24814FE
A5127EA4127F6C14FCA26C1301018013F8000F14F0EBC0030007EB07E03903E00FC03901
F81F806CB51200EB3FFCEB0FE01F347DB126>I<1230123C003FB6FCA34814FEA215FC00
70C7123800601430157015E04814C01401EC0380C7EA07001406140E5C141814385CA25C
A2495A1303A3495AA2130FA3131F91C7FCA25BA55BA9131C20347CB126>I<EB0FE0EB7F
FC90B5FC3903F01F803907C007C0390F0003E0000EEB01F0001E1300001C14F8003C1478
A3123EA2003F14F86D13F0EBC001D81FF013E09038F803C0390FFE07803907FF0F006C13
DE6C13F87EEB3FFE8001F713C0D803E313E0D8078013F0390F007FF8001E131F003EEB07
FC003C1303481301EC007E12F848143EA2151EA37E153C1278007C14787E6C14F0390F80
03E03907F01FC00001B5120038007FFCEB1FE01F347DB126>I<EB0FE0EB7FF8EBFFFE38
03F83F3907E00F80390FC007C0D81F8013E0EC03F0EA3F0048EB01F8127EA200FE14FC14
00A415FEA5007E1301A2127F7E1403EA1F80000F13073807C00E3803E01C3801F0383800
7FF090381FC0FC90C7FC1401A215F8A215F01403001F14E0383F800715C0140FEC1F8090
38003F00001C137E381F01FC380FFFF0000313C0C690C7FC1F347DB126>I<123C127E12
FFA4127E123C1200B0123C127E12FFA4127E123C08207A9F15>I<123C127E12FFA4127E
123C1200B0123C127E12FE12FFA3127F123F1203A412071206A3120E120C121C12381230
12701260082F7A9F15>I<007FB812C0B912E0A26C17C0CCFCAC007FB812C0B912E0A26C
17C033147C9C3C>61 D<EBFFC0000313F8380F00FE001C133F48EB1F804814C0140F00FC
14E07EA4127CC7EA1FC0A2EC3F80EC7F0014FE14F8495A495A5C495AA249C7FC130EA213
0C131CA21318A890C8FCA7133C137E13FFA4137E133C1B357CB424>63
D<15E0A34A7EA24A7EA34A7EA3EC0DFE140CA2EC187FA34A6C7EA202707FEC601FA202E0
7FECC00FA2D901807F1507A249486C7EA301066D7EA2010E80010FB5FCA249800118C77E
A24981163FA2496E7EA3496E7EA20001821607487ED81FF04A7ED8FFFE49B512E0A33336
7DB53A>65 D<B7FC16E016F83A03FC0003FE0001EC00FFEE7F80EE3FC0161F17E0160F17
F0A617E0161F17C0EE3F80EE7F0016FEED03FC90B612F05E9039FC0007FCED00FEEE3F80
EE1FC0EE0FE017F0160717F8160317FCA617F81607A2EE0FF0EE1FE0163FEE7FC0000391
3803FF00B75A16F816C02E337DB236>I<DA03FE130C91393FFF801C91B512E0903A03FE
01F83C903A0FF0003C7CD91FC0EB0EFCD97F80130701FEC7120348481401000315005B48
48157C485A173C485A171C123F5B007F160CA390C9FC481600AB7E6D150CA3123F7F001F
161C17186C7E17386C6C15306C6C15706D15E012016C6CEC01C0D97F80EB0380D91FC0EB
0F00D90FF0131ED903FE13FC0100B512F0023F13C0DA03FEC7FC2E377CB437>I<B77E16
F016FE3A01FE0001FF00009138003FC0EE0FE0707E707E707E707E177E177FEF3F80A2EF
1FC0A3EF0FE0A418F0AA18E0A3171F18C0A21880173F18005F17FE5F4C5AEE07F04C5AEE
3FC000014AB45AB748C7FC16F8168034337EB23B>I<B812C0A3D803FCC7127F0001150F
EE03E01601A21600A21760A403061330A41700150EA2151E157E90B512FEA39038FC007E
151E150EA21506170CA3171892C7FCA41738A21770A217F01601160316070003157FB812
E0A32E337DB234>I<B81280A3D803FCC7FC0001151FEE07C01603A21601A21600A41760
150CA31700A2151CA2153C15FC90B5FCA3EBFC00153C151CA2150CA592C8FCAB487EB512
FEA32B337DB232>I<DA03FE130C91393FFF801C91B512E0903A03FE01F83C903A0FF000
3C7CD91FC0EB0EFCD97F80130701FEC7120348481401000315005B4848157C485A173C48
5A171C123F5B007F160CA390C9FC4893C7FCAA0303B512E07E7F92390003FE00705A123F
7F121FA26C7E7F12076C7E7F6C6C14036C7E6D6C1307D91FC0EB0E7CD90FF0EB1C3CD903
FEEBF81C0100B5EAF00C023F01C0C7FCDA03FEC8FC33377CB43C>I<B5D8FE03B512F8A3
000190C73807FC006C486E5AB390B7FCA349C71203B3A3486C4A7EB5D8FE03B512F8A335
337EB23A>I<B512FEA3000113006C5AB3B3A7487EB512FEA317337EB21C>I<017FB5FCA3
9038003FE0EC1FC0B3B1127EB4FCA4EC3F805A0060140000705B6C13FE6C485A380F03F0
3803FFC0C690C7FC20357DB227>I<B500FE903807FFF8A3000190C7000113006C48EC00
FC17F04C5A4C5A4CC7FC160E5E5E5E5E4B5A4B5A4BC8FC150E5D5D15F84A7E14034A7EEC
0EFF5C4A6C7E4A6C7EECE01FD9FFC07F4A6C7E4A6C7E5B6F7E6F7EA26F7E707EA2707E70
7E160F83707E707EA283486C913807FF80B500FE013F13FCA336337EB23C>I<B512FEA3
D803FEC9FC6C5AB3A9EE0180A416031700A45EA25E5E5E5E16FE00031407B7FCA329337D
B230>I<D8FFFC923801FFF86D5DA20003EFFE00D801BFED06FCA3D99F80140CA2D98FC0
1418A3D987E01430A2D983F01460A3D981F814C0A3D980FCEB0180A2027EEB0300A36E13
06A26E6C5AA36E6C5AA36E6C5AA26E6C5AA36E6C5AA3913800FD80A2037FC7FCA3486C13
3ED80FF04B7EB5011C90387FFFF8A33D337CB246>I<D8FFFE91381FFFF87F80C6030013
006E143CD9DFE01418EBCFF0A2EBC7F8EBC3FCA2EBC1FEEBC0FF6E7EA26E7E6E7EA26E7E
6E7E6E7EA26E7E6E7EA2ED7F80ED3FC0ED1FE0A2ED0FF0ED07F8A2ED03FCED01FEED00FF
A2EE7F98EE3FD8A2EE1FF8160F1607A216031601A2486C1400D807F81578B500C01438A2
171835337EB23A>I<EC07FC91387FFFC0903901FC07F0903907E000FCD90F80133E013F
C76C7E017E6E7E496E7E48486E7E48486E7EA248486E7E000F8249157E001F167FA24848
ED3F80A2007F17C0A290C9121FA24817E0AB6C17C06D153FA3003F17806D157FA2001F17
006D5D000F5E6C6C4A5AA26C6C4A5A00015E6C6C4A5A017E4A5A6D4A5AD91FC0017FC7FC
D907E013FC903901FC07F09039007FFFC0DA07FCC8FC33377CB43C>I<B612FEEDFFC016
F03A03FC0007FC0001EC00FE167FEE3F80EE1FC017E0160FA217F0A617E0A2EE1FC0A2EE
3F80EE7F0016FEED07F890B65A168001FCC9FCB3A2487EB512F8A32C337DB234>I<EC07
FC91387FFFC0903901FC07F0903907E000FC4948137E013FC7EA1F80017E6E7E496E7E48
486E7E00038249140148486E7E000F8249157E001F167FA24848ED3F80A2007F17C0A390
C9121F4817E0AB6C17C0A26D153FA2003F1780A26D157F001F1700A2270FE001F013FE00
07D907FC5B9039F00E0E013B03F80C0703F8000190391C0383F03B00FC180187E0017EEC
CFC0013FECDF8090271F9C00FFC7FCD907EC13FC902701FE07F013609038007FFF913807
FC7091C7007813E0A2EE7C01EE7E0393387F07C0EE3FFFA21880821800705A705AEE01F0
33447CB43C>I<B612FCEDFF8016F03A01FE0007FC0000EC01FEED007F707E707E83160F
83A65FA24C5AA24C5A047EC7FC4B5AED0FF090B612C093C8FC9039FE001FC0ED07F06F7E
6F7E150082167E167FA583A5180C17C0A2043F131C486C1618B500FEEB1FE0040F133893
3807F070C93801FFE09338003F8036357EB239>I<90381FE00390387FFC0748B5FC3907
F01FCF390F8003FF48C7FC003E80814880A200788000F880A46C80A27E92C7FC127F13C0
EA3FF013FF6C13F06C13FF6C14C06C14F0C680013F7F01037F9038003FFF140302001380
157F153FED1FC0150F12C0A21507A37EA26CEC0F80A26C15006C5C6C143E6C147E01C05B
39F1FC03F800E0B512E0011F138026C003FEC7FC22377CB42B>I<007FB712FEA3903980
07F001D87C00EC003E0078161E0070160EA20060160600E01607A3481603A6C71500B3AB
4A7E011FB512FCA330337DB237>I<B500FE90381FFFF8A3000190C813006C48153C1718
B3AF1738017F1530A217706D6C1460011F15E06E495A010F14036D6C495A6D6C49C7FCD9
01FC131E6DB413FC91383FFFF0020F13C0020190C8FC35357EB23A>I<B500F0903803FF
F8A3D807FEC8EA7FC06C48ED1F000001161E6D151C00001618A26D15386D1530A26D6C5C
A26E14E0011F5DA26D6C495AA28001074AC7FCA26D6C1306A28001015CA26E131C010014
18806E5BA2ED8070023F1360A26E6C5AA215E1020F5BA2DA07F3C8FCA215FBEC03FEA36E
5AA26E5AA31570A235357EB23A>I<B5D8F007B539800FFFF0A3000390C7273FF0000113
00D801FC6E48EB007C1A386D140F00001930836D020715706D1860A26E496C14E0013F60
A26ED919FC1301011F60A26ED930FE1303010F95C7FCA26ED9607F5B01071706A26E9039
C03F800E0103170CA2913BFC01801FC01C01011718A2913BFE03000FE03801001730A2DA
FF06EB07F0027F5EA2038CEB03F8023F5EA203D8EB01FC021FEDFD80A203F0EB00FF020F
93C8FCA24B800207157EA24B143E0203153CA24B141C020115184C357FB24F>I<267FFF
FC90B512C0A3000101E090381FF80026007F80EB0FC0013F6E5A6E91C7FC6D6C130E010F
140C6E5B6D6C133801035C6E13606D6C13E06D6C485A5EDA7F83C8FCEC3FC715C6EC1FEC
EC0FFC5D14076E7EA26E7E815C6F7E9138063FC0140E4A6C7E9138180FF0EC380702707F
91386003FCECC0010101804A6C7E49C77E4981010E6E7E010C6E7E131C496E7E01786E7E
13FCD807FEEC1FFEB56C90B512F8A335337EB23A>I<B500F8ECFFFEA300030180EC3FE0
6C90C8EA1F806CEE0E006D6C5C6D6C141817386D6C14305F6D6C14E06D6C5C16016D6C5C
6D6C49C7FC5E6D6C13065E91387F801C91383FC018163891381FE0306E6C5A16E06E6C5A
EDF980EC03FF6E90C8FC5D1400B14A7E91B512FCA337337FB23A>I<003FB612FCA39039
F80007F813C090C7EA0FF0003EEC1FE0123C0038EC3FC00078EC7F801270EDFF004A5AA2
0060495AA24A5A4A5AC7FC4A5A4A5AA24A5A4AC7FCA2495A495AA2495A495AA24948130C
495AA2495A49C7FCA24848141CA2485A485A1638485A4848147816F84848130148481307
153FB7FCA326337CB22F>I<EAFFF0A4EAF000B3B3B3ADEAFFF0A40C4B79B715>I<EAFFF0
A41200B3B3B3AD12FFA40C4B7FB715>93 D<12035A120E5A12181238123012701260A212
E05AA412DEB4FC1380A2127FA2EA3F00121E09177BB315>96 D<EB7F803803FFF0380F80
FC381C003E003F133F6D6C7E6E7EA26E7EEA1F00C7FCA4EB01FF131FEBFF873803FC07EA
0FF0EA1FC0EA3F80127F13004815C05AA3140FA26C131F6C133B3A3F8071F180391FC1E1
FF2607FFC013003900FE003C22237DA126>I<EA03F012FFA312071203AEEC3F80ECFFE0
9038F3C0F89038F7007E01FE7F49EB1F8049EB0FC05BED07E016F0A2150316F8AA16F015
0716E0A2ED0FC07F6DEB1F8001ECEB3F0001CF137C90388381F8903801FFE0C76CC7FC25
357EB32B>I<EB07F8EB3FFF9038FC07C03901F000E03903E003F03807C007120FEA1F80
123F90380003E04890C7FCA2127E12FEAA127FA26C14187F001F14386D1330000F14706C
6C13E03903F001C03900FC0F8090383FFE00EB07F01D237EA122>I<153FEC0FFFA3EC00
7F81AEEB07F0EB3FFCEBFC0F3901F003BF3907E001FF48487E48487F8148C7FCA25A127E
12FEAA127E127FA27E6C6C5BA26C6C5B6C6C4813803A03F007BFFC3900F81E3FEB3FFCD9
0FE0130026357DB32B>I<EB0FE0EB7FFCEBF83F3903F00F80D807E013C0390FC007E038
1F800315F0EA3F0014014814F8127EA212FEA2B6FCA248C8FCA5127E127FA26C1418A26C
6C1338000F14306D13706C6C13E03901F003C03900FC0F00EB3FFEEB07F01D237EA122>
I<EB01FCEB07FF90381F078090383E0FC0EB7C1F13FCEA01F8A20003EB070049C7FCACB5
12F0A3D803F0C7FCB3A7487E387FFFE0A31A357FB417>I<151F90391FC07F809039FFF8
E3C03901F07FC73907E03F033A0FC01F83809039800F8000001F80EB00074880A66C5CEB
800F000F5CEBC01F6C6C48C7FCEBF07C380EFFF8380C1FC0001CC9FCA3121EA2121F380F
FFFEECFFC06C14F06C14FC4880381F0001003EEB007F4880ED1F8048140FA56C141F007C
15006C143E6C5C390FC001F83903F007E0C6B51280D91FFCC7FC22337EA126>I<EA03F0
12FFA312071203AEEC1FC0EC7FF09038F1E0FC9038F3807C9038F7007E13FE497FA25BA2
5BB3486CEB7F80B538C7FFFCA326347EB32B>I<EA0780EA0FC0EA1FE0A4EA0FC0EA0780
C7FCAAEA07E012FFA3120F1207B3A6EA0FF0B5FCA310337EB215>I<EB03C0EB07E0EB0F
F0A4EB07E0EB03C090C7FCAAEB03F013FFA313071303B3B01238127C00FE13E0130714C0
130F007C138038381F00EA1FFCEA07F0144384B217>I<EA03F012FFA312071203AF9138
03FFE0A36E1300EC00F8EC01E05D4A5A020FC7FC141C5C5C14F0EBF3F8EBF7FC13FEEBFC
7EEBF87F496C7E141F6E7E8114076E7E8114016E7E81486CEBFF80B500C313F0A324347E
B329>I<EA07E012FFA3120F1207B3B3A7EA0FF0B5FCA310347EB315>I<2703F01FE013FF
00FF90267FF80313C0903BF1E07C0F03E0903BF3803E1C01F02807F7003F387FD803FE14
70496D486C7EA2495CA2495CB3486C496C487EB53BC7FFFE3FFFF0A33C217EA041>I<39
03F01FC000FFEB7FF09038F1E0FC9038F3807C3907F7007EEA03FE497FA25BA25BB3486C
EB7F80B538C7FFFCA326217EA02B>I<EB07F0EB3FFE9038FC1F803901F007C03903C001
E000078048486C7E48C7127CA248147E003E143E007E143FA300FE1580A8007E1500A36C
147EA26C147C6D13FC6C6C485A00075C3903F007E03900FC1F80D93FFEC7FCEB07F02123
7EA126>I<3903F03F8000FFEBFFE09038F3C0F89038F7007ED807FE7F6C48EB1F804914
C049130F16E0ED07F0A3ED03F8A9150716F0A216E0150F16C06D131F6DEB3F80160001FF
13FC9038F381F89038F1FFE0D9F07FC7FC91C8FCAA487EB512C0A325307EA02B>I<9038
07F00390383FFC07EBFC0F3901F8038F3807E001000F14DF48486CB4FC497F123F90C77E
5AA25A5AA9127FA36C6C5B121F6D5B000F5B3907E003BF3903F0073F3800F81EEB3FF8EB
0FE090C7FCAAED7F8091380FFFFCA326307DA029>I<3803E07C38FFE1FF9038E38F8090
38E71FC0EA07EEEA03ECA29038FC0F8049C7FCA35BB2487EB512E0A31A217FA01E>I<EB
FF06000713CE381F00FE003C133E48131E140E5A1406A27EA200FE90C7FC6C7EEA7FFC38
3FFFC014F0000F7F6C7FC67FEB0FFF1300EC3F8000C0131F140F6C1307A37E15006C5B6C
130E6C5B38F7807838E1FFE038C07F8019237EA11E>I<1330A51370A313F0A21201A212
031207381FFFFEB5FCA23803F000AF1403A814073801F806A23800FC0EEB7E1CEB1FF8EB
07E0182F7FAD1E>I<D803F0133F00FFEB0FFFA30007EB007F000380B35DA35D12016D48
13800000903803BFFC90387E073FEB1FFED907F8130026227EA02B>I<B5EBFFF0A3D80F
F0EB3F800007EC1F000003140E150C6D131C00011418A26C6C5BA26D1370017E1360137F
6D5BA290381F8180A214C3010F90C7FCA2EB07E6A214FE6D5AA26D5AA36D5AA214602421
7E9F29>I<B53A1FFF81FFF0A33C07F801FC003F8001F049EB1E0000030100141C816C6C
017C1318A26D017E1338000002FE1330A290267E01FF5B159F168090263F030F5BA216C0
903A1F8607C180A202C613E390260FCC0390C7FCA2D907FC13F6ECF80116FE6D486C5AA3
6D481378A36D48133034217F9F37>I<B53801FFF8A32603FE0013806C48EB7C00000014
78017E1370017F5B90383F81C090381F8380D90FC3C7FCEB07E614FE6D5A6D5A6D7E8080
5B9038039F809038071FC09038060FE0EB0C0790381C03F0496C7E01707FEBF000000180
000FECFF8026FFFC0313FCA326207F9F29>I<3A7FFF807FF8A33A07F8001FC00003EC0F
800001EC070015066C6C5BA26D131C017E1318A26D5BA2EC8070011F1360ECC0E0010F5B
A2903807E180A214F3010390C7FC14FBEB01FEA26D5AA31478A21430A25CA214E05CA249
5A1278D8FC03C8FCA21306130EEA701CEA7838EA1FF0EA0FC025307F9F29>I<003FB512
F0A2EB000F003C14E00038EB1FC00030EB3F800070137F1500006013FE495A13035CC648
5A495AA2495A495A49C7FC153013FE485A12035B48481370485A001F14604913E0485A38
7F000348130F90B5FCA21C207E9F22>I<B712F8A22502809426>I
E /Fu 27 118 df<ED7F80913803FFE091380F80F891383C007C02F87FD901E07F494814
804948130F49C7FC010E15C0131EEB1C18EB3C1CEB380C0178141F17801370A2021C133F
6D4814004A5BD91FE0137ED90F805B90C8FC4B5A4B5A4B5AED1F8003FFC7FCECFFFC15F0
A2EC00FC153E153F8182150F82A4151FA2121E127F153F485DA3484AC7FC12F800E014FE
5D14016C495A0070495A0078EB0FC00038495A6C017EC8FC380F01F83803FFE0C690C9FC
2A3F78BC2E>51 D<171C173C177CA217FCA216011603A21607A24C7EA2161DA216391679
167116E1A2ED01C1A2ED038115071601150EA2031C7FA24B7EA25D15F05D4A5AA24A5AA2
4AC7FC5C140E5C021FB6FC4A81A20270C7127FA25C13015C495AA249C8FCA2130E131E13
1C133C5B01F882487ED807FEEC01FFB500E0017FEBFF80A25C39417BC044>65
D<9339FF8001C0030F13E0033F9038F803809239FF807E07913A03FC001F0FDA0FF0EB07
1FDA1FC0ECBF00DA7F806DB4FC4AC77E495AD903F86E5A495A130F4948157E4948157C49
5A13FF91C9FC4848167812035B1207491670120FA2485A95C7FC485AA3127F5BA312FF5B
A490CCFCA2170FA2170EA2171E171C173C173817786C16706D15F04C5A003F5E6D140300
1F4B5A6D4AC8FC000F151E6C6C5C6C6C14F86C6C495A6C6CEB07C090397FC03F8090261F
FFFEC9FC010713F0010013803A4272BF41>67 D<49B812F0A390260003FEC7123F180F4B
1403A2F001E014075DA3140F5D19C0A2141F5D1770EFF003023F02E013804B91C7FCA216
01027F5CED8003A2160702FFEB1F8092B5FCA349D9003FC8FC4A7F82A20103140E5CA216
1E0107141C5CA293C9FC130F5CA3131F5CA3133F5CA2137FA25C497EB612E0A33C3E7BBD
3B>70 D<DCFF8013E0030713F0033F9038FC01C09239FFC03E03913A03FC000F07DA0FF0
EB078F4A48903803DF80DA7F80EB01FF4AC8FC495A4948ED7F00495A495A494881494815
3E495A13FF91C9FC4848163C12035B1207491638120FA2485A95C7FC485AA3127F5BA312
FF5BA34BB512FE90C7FCA292C71380A295C7FCA25EA25FA216037E6D5DA2003F15077F00
1F5E6D140F6C6C141F0007153F6C6CEC7BF0D801FE14F16C6CEB03E090393FE01F806DB5
EA0060010701F890C8FC9038007FC03B4273BF46>I<49B6FC5BA2D9000313005D5DA314
075DA3140F5DA3141F5DA3143F5DA3147F5DA314FF92C7FCA35B5CA313035CA313075CA3
130F5CA3131F5CA3133F5CA2137FA25C497EB67EA3283E7BBD23>73
D<49B612C0A25FD9000390C8FC5D5DA314075DA3140F5DA3141F5DA3143F5DA3147F5DA3
14FF92C9FCA35B5CA313035C18C0EF01E0010716C05C17031880130F4A140718005F131F
4A141EA2173E013F5D4A14FC1601017F4A5A16074A131F01FFECFFF0B8FCA25F333E7BBD
39>76 D<49B5933807FFFC496062D90003F0FC00505ADBBF805E1A771AEF1407033F9238
01CFE0A2F1039F020FEE071F020E606F6C140E1A3F021E161C021C04385BA2F1707F143C
023804E090C7FCF001C0629126780FE0495A02705FF00700F00E0114F002E0031C5BA2F0
3803010116704A6C6C5D18E019070103ED01C00280DA03805BA2943807000F1307020002
0E5C5FDB03F8141F495D010E4B5CA24D133F131E011CDAF9C05CEEFB80197F013C6DB4C7
FC013895C8FC5E01784A5C13F8486C4A5CD807FE4C7EB500F04948B512FE16E01500563E
7BBD52>I<902601FFFE020FB5FC496D5CA2D900016D010013C04AEE3F00193E70141C19
3CEC07BFDB3FE01438151F1978020F7FDA0E0F15708219F0EC1E07021C6D5CA203031401
023C7FDA38015DA2701303EC7800027002805BA2047F130702F014C04A013F91C7FCA271
5A0101141F4AECF00EA2040F131E010315F84A151C1607EFFC3C0107140391C7143817FE
040113784915FF010E16708218F0131E011C6F5AA2173F133C01385E171F137813F8486C
6F5AEA07FEB500F01407A295C8FC483E7BBD44>I<49B77E18F018FC903B0003FE0003FE
EF00FF4BEC7F80F03FC00207151F19E05DA2020F16F0A25DA2141FF03FE05DA2023F16C0
187F4B1580A2027FEDFF00604B495A4D5A02FF4A5A4D5A92C7EA3FC04CB4C7FC4990B512
FC17E04ACAFCA21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA25CA2137FA25C
497EB67EA33C3E7BBD3E>80 D<92390FF001C0ED7FFE4AB5EA0380913907F80FC791390F
C003EF91391F8001FF4AC71300027E805C495A4948143EA2495AA2010F153C5CA3011F15
38A38094C7FC80A214FC6DB4FC15F015FE6DEBFFC06D14F06D14FC6D80143F020F7F0201
80EC001F150303007F167F163FA2161FA212075A5F120EA2001E153F94C7FCA2163E003E
157E167C003F15FC4B5A486C5C4B5A6D495AD87DE0EB1F80D8F8F849C8FC017F13FE39F0
3FFFF8D8E00F13E048C690C9FC32427ABF33>83 D<147E49B47E903907C1C38090391F80
EFC090383F00FF017E137F4914804848133F485AA248481400120F5B001F5C157E485AA2
15FE007F5C90C7FCA21401485C5AA21403EDF0385AA21407EDE078020F1370127C021F13
F0007E013F13E0003E137FECF3E1261F01E313C03A0F8781E3803A03FF00FF00D800FC13
3E252977A72E>97 D<EC1FE0ECFFF8903803F03E903807C00F90381F8007D93F00138001
7E131F49137F485A485A000715005B000F147E484890C7FCA2485AA3127F90C9FCA35A5A
A6481403007E5C5D151E003E5C5D6C5CEC03E0390F800F802603E07EC7FC3801FFF83800
3FC0212977A72A>99 D<EE3F80ED1FFF1700A2ED007FA2167EA216FEA25EA21501A25EA2
1503A25EA21507A25E147E903801FF8F903807C1CF90391F80EFC090383F00FF017E137F
5B48486D5A485AA2485A000F92C7FC5B001F5CA24848137EA215FE127F90C75AA214015A
485CA2140316384814F0A21407167891380FE070127C021F13F0007E013F5B003E137FEC
F3E1261F01E35B3A0F8781E3802703FF00FFC7FCD800FC133E294077BE2E>I<EC3F8090
3801FFE0903807E0F890381F803CEB3E0001FC131E485A485A12074848133E49133C121F
4848137C15F8EC03F0397F000FE0ECFF80B5EAFC0014C048C8FCA45AA61506150E151E00
7C143C15786C14F0EC01E06CEB07C0390F801F003807C0FC3801FFF038007F801F2976A7
2A>I<167C4BB4FC923807C78092380F83C0ED1F87161FED3F3FA2157EA21780EE0E004B
C7FCA414015DA414035DA30103B512F8A390260007E0C7FCA3140F5DA5141F5DA4143F92
C8FCA45C147EA414FE5CA413015CA4495AA4495AA4495A121E127F5C12FF49C9FCA2EAFE
1EEAF83C1270EA7878EA3FE0EA0F802A5383BF1C>I<EC03F0EC0FFC91383E0E1C9138FC
077E903901F003FE1303903807E001D90FC013FCEB1F80A2EB3F004914F8137E01FE1303
A2484814F0A2150712034914E0A2150F12074914C0A2151FA216805B153F1203ED7F006D
5BA200015B0000495A9038F80F7E90387C1EFEEB1FF8903807E0FC90C7FC1401A25DA214
03A25D001C1307007F5C48130F5D4A5A4AC7FC48137E00F85B387C03F0381FFFC0D803FE
C8FC273B7CA72A>I<EB01FC13FF5CA21303A25CA21307A25CA2130FA25CA2131FA25CA2
133FA291C8FCEC03F890387F0FFE91383E0F80D97E7813C0ECE007D9FFC013E014801400
A2485A5BA25B0003140F16C05BA20007141F16805BA2000F143F16005B5D001F147EEDFE
074913FCA2003F0101130FEDF80E1300161E48ECF01CA2007E1538A200FE1570020013E0
48EC7FC00038EC1F0028407ABE2E>I<1478EB01FCA21303A314F8EB00E01400AD137C48
B4FC38038F80EA0707000E13C0121E121CEA3C0F1238A2EA781F00701380A2EAF03F1400
12005B137E13FE5BA212015BA212035B1438120713E0000F1378EBC070A214F0EB80E0A2
EB81C01383148038078700EA03FEEA00F8163E79BC1C>I<EB07F0EA03FF14E0A2EA000F
A214C0A2131FA21480A2133FA21400A25BA2137EA213FEA25BA21201A25BA21203A25BA2
1207A25BA2120FA25BA2121FA25BA2123FA290C7FCA25A1307127EA2EAFE0F130E12FCA2
131E131CA2EA7C381378EA3C70EA1FE0EA0780144079BE17>108
D<D801F0D93F80137F3D07FC01FFE003FFC03D0F3E07C1F80F83F03D0E1F0F00FC1E01F8
001E011C90387C3800001C49D97E707F003C01F05C0038157F4A5C26783FC05C12704A91
C7FC91C7127E00F003FE1301494A5CEA007EA20301140301FE5F495CA203031407000160
495C180F03075D0003051F13E0494A1480A2030FEC3F810007F001C0495CA2031F91383E
0380120F494AEC0700A2033F150E001FEF1E1C4991C7EA0FF80007C7000EEC03E0432979
A74A>I<D801F0EB3F803A07FC01FFE03A0F3E07C1F83A0E1F0F00FC001E011C137C001C
49137E003C13F012385C38783FC012705C91C7FC00F015FE495CEA007EA2150101FE5C5B
A2150300015D5B15075E0003020F13704914C0A2031F13F00007ED80E05B1681EE01C012
0F49EC0380A2EE0700001FEC0F0E49EB07FC0007C7EA01F02C2979A733>I<EC1FC0ECFF
F8903803F07C90380FC01FEB1F8090393F000F80017E14C0491307484814E0485A12075B
000F15F0485AA2485AA2ED0FE0127F90C7FCA2151F4815C05AA2ED3F80A2ED7F00A24814
7E007C5C007E13015D4A5A003E495A6C495A4A5A260F803EC7FC3807C0FC3801FFF03800
3F80242977A72E>I<D801F013FC3A07FC07FF803A0F3E0F03C0260E1F1C13E0001EEB38
0F001C1370003CEBE01F123814C0D8783F14C00070903880070092C7FC91C8FC12F05BEA
007EA313FE5BA312015BA312035BA312075BA3120F5BA3121F5B0007C9FC232979A726>
114 D<EC7F80903801FFE0903807C0F890381F003C013E131C013C131E017C133E49137E
15FEA2000114FCA215706D13007FEBFFC014FC6C13FF15806D13C06D13E0010F13F01300
140F14071403120C123F387F80011403D8FF0013E0A300FCEB07C000F0EB0F8012700078
EB1F006C133C381F01F83807FFE0C690C7FC1F297AA725>I<EB01C0EB03F01307A25CA2
130FA25CA2131FA25CA2133FA291C7FCA2007FB51280B6FC1500D8007EC7FC13FEA25BA2
1201A25BA21203A25BA21207A25BA2120FA25BA2121F141C1380A2003F133C1438EB0078
147014F05C495AEA1F03495A6C48C7FCEA07FCEA01F0193A78B81E>I<137C48B4141C26
038F80137EEA0707000E7F001E15FE121CD83C0F5C12381501EA781F007001805BA2D8F0
3F1303140000005D5B017E1307A201FE5C5B150F1201495CA2151F0003EDC1C0491481A2
153F1683EE0380A2ED7F07000102FF13005C01F8EBDF0F00009038079F0E90397C0F0F1C
90391FFC07F8903907F001F02A2979A731>I E /Fv 36 122 df<121EEA7F8012FF13C0
A213E0A3127FEA1E601200A413E013C0A312011380120313005A120E5A1218123812300B
1C798919>44 D<121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A798919>46
D<EB01C013031307131F137FEA07FFB5FC139FEAF81F1200B3B3ACEB7FF0B612F8A31D3D
78BC2D>49 D<EB03FC90381FFF8090387C07E09038F001F83901E0007C48487F48487F48
C7FCED0F80121E16C0003E1407A4123FA26DEB0F807F6C6C131F6D140001FC133E6C6C5B
9038FF80786C6D5A6CEBF3E06CEBFF806C91C7FC133F6D13C06D7F013F13F801787F4848
6C7E3903E01FFF48486C1380260F800313C048487E489038007FE0003E143F007E141F00
7CEC0FF01507481403A31501A46C15E0007C1403A2007E15C06C14076CEC0F806DEB1F00
6C6C133ED807F05B3901FC03F86CB512E0011F1380D903FCC7FC243F7CBC2D>56
D<EB03FCEB1FFF90387E07C09038FC03F048486C7E48486C7E4848137C000F147E484813
7F81003F15805B007F15C0A2151F12FF16E0A516F0A5127F153FA36C7EA2001F147F120F
6C6C13FF6D13DF000313013900F8039F90387E0F1FD91FFE13E0EB07F090C7FCA2ED3FC0
A41680157FD80F801400487E486C13FEA24A5A5D49485AEB8007391E000FE0001F495A26
0FC07FC7FC3803FFFE6C13F838003FC0243F7CBC2D>I<15074B7EA34B7EA34B7EA34B7E
A34B7E15E7A2913801C7FC15C3A291380381FEA34AC67EA3020E6D7EA34A6D7EA34A6D7E
A34A6D7EA34A6D7EA349486D7E91B6FCA249819138800001A249C87EA24982010E157FA2
011E82011C153FA2013C820138151FA2017882170F13FC00034C7ED80FFF4B7EB500F001
0FB512F8A33D417DC044>65 D<B712FCEEFF8017F00001903980000FF86C6CC7EA03FE70
7E701380EF7FC0EF3FE0A2EF1FF0A218F8A3170F171FA318F0A2EF3FE0177F18C0EFFF80
4C1300EE03FCEE0FF8EE7FE091B6C7FC17E091C7EA07FCEE01FE933800FF80EF7FC0EF3F
E0EF1FF018F8170F18FC1707A218FEA718FC170FA2EF1FF818F0173FEF7FE0EFFFC00403
138048486C90380FFE00B85A17E094C7FC373E7DBD40>I<DB3FF01306912603FFFE130E
020F9038FF801E913A3FF007E03E9139FF8000F8D903FEC7EA7C7ED907F8EC1EFE494814
0FD93FE0140749481403495A91C812014848150012034848167E5B000F173EA24848161E
A2123F5B180E127FA349160012FFAC127F7F180EA2123FA27F001F171E181C6C7EA20007
173C6D16386C6C1678000117706C6C16F06EEC01E06D6C15C06D6C1403D90FF0EC07806D
6CEC1F00D903FE143E902600FF8013F891393FF007F0020FB512C0020391C7FC9138003F
F037427BBF42>I<DB3FE0130C912603FFFE131C021F9038FF803C913A7FF00FC07C9139
FF0001F0D903FC90380078FC4948143DD91FE0141F4948140F4948140701FF15034890C8
FC491501485A000716005B000F177C5B001F173CA2485AA2181C127FA25B95C7FC12FFAB
041FB512F0127FA26D9139000FFE00EF03FC123FA27F121FA26C7EA212077F12036C7E7F
6C7F6D6C14076D7E6D6C140FD907F8141ED903FEEC3C7C902600FF80EBF83C913A7FF007
F01C021FB5EAC00C020391C8FC9138003FF03C427BBF47>71 D<B612F0A3C6EBF000EB3F
C0B3B3B2EBFFF0B612F0A31C3E7EBD21>73 D<B600C090387FFFFCA3000101E0C7000F13
8026007F80913807FE0018F818E0604D5A4DC7FC173E5F5F4C5A4C5A4C5A4C5A4CC8FC16
3E5E5E4B5A4B5AED07804B7E151F4B7E4B7E15FF913881EFF8913883C7FCEC878791388F
03FE91389E01FF14BCDAF8007F4A6D7E5C4A6D7E4A6D7EA2707E707EA2707E707EA2707F
717E84173F717E717EA2717E848419802601FFE04A13C0B600C090B6FCA3403E7DBD47>
75 D<B56C91B512F88080D8007F030713006EEC01FC6E6E5A1870EB77FCEB73FEA2EB71
FF01707FA26E7E6E7EA26E7E6E7EA26E7E6E7EA26E7E6E7FA26F7E6F7EA26F7E6F7EA26F
7E6F7EA26F7E6F1380A2EE7FC0EE3FE0A2EE1FF0EE0FF8A2EE07FCEE03FEA2EE01FF7013
F0A2177F173FA2171F170FA2170701F81503487ED807FF1501B500F81400A218703D3E7D
BD44>78 D<B712F8EEFF8017E000019039C0003FF86C6C48EB07FCEE01FE707EEF7F80EF
3FC018E0A2EF1FF0A218F8A818F0A2EF3FE0A218C0EF7F80EFFF004C5AEE07FCEE3FF091
B612C04CC7FC0280C9FCB3A73801FFE0B612C0A3353E7DBD3E>80
D<B712C016FCEEFF800001D9C00013E06C6C48EB1FF0EE07FCEE01FE707E84717EA2717E
A284A760177F606017FF95C7FCEE01FCEE07F8EE1FE0EEFF8091B500FCC8FC16F0913880
01FCED003FEE1FC0707E707E83160383160183A383A484A4F0C004190EA28218E0057F13
1E2601FFE0161CB600C0EB3FF094381FF83805071370CA3801FFE09438003F803F407DBD
43>82 D<D907FC130C90391FFF801C017FEBF03C3901FC03F83A03F0007E7CD807C0EB1F
FC4848130F001F140748C71203003E1401007E1400A2007C157C12FCA2163CA36C151CA2
7EA26C6C14007F7FEA3FF8EBFF806C13F86CEBFF806C14F06C14FC6C14FF6C15C0013F14
E0010714F0EB007F020713F89138007FFC150FED07FE15031501ED00FFA200E0157FA316
3FA27EA3163E7E167E6C157C6C15FC6C15F86D13016DEB03F06DEB07E0D8F9FCEB0FC03A
F07F803F8090391FFFFE00D8E00713F839C0007FC028427BBF33>I<003FB91280A3903A
F0007FE001018090393FC0003F48C7ED1FC0007E1707127C00781703A300701701A548EF
00E0A5C81600B3B14B7E4B7E0107B612FEA33B3D7DBC42>I<B600C090B512F8A3000101
E0C70007130026007F80EC01FC715A1870B3B3A4013F16F06E5DA21701011F5E80010F15
036E4A5A010793C7FC6D6C5C6D6C141E6D6C5C027F14F86E6C485A91390FF00FE00203B5
1280020049C8FCED1FF03D407DBD44>I<EB0FF8EBFFFE3903F01F8039078007E0000F6D
7E9038E001F8D81FF07F6E7EA3157F6C5AEA0380C8FCA4EC1FFF0103B5FC90381FF87FEB
7F803801FC00EA07F8EA0FE0485A485AA248C7FCEE038012FEA315FFA3007F5BEC03BF3B
3F80071F8700261FC00E13CF3A07F03C0FFE3A01FFF807FC3A003FC001F0292A7DA82D>
97 D<EA01FC12FFA3120712031201B1EC03FC91381FFF8091387C07E09039FDE001F090
39FFC000FC4A137E91C77E49158049141F17C0EE0FE0A217F0A2160717F8AA17F0A2160F
A217E0161F17C06D1580EE3F006D5C6E13FE9039F3C001F89039F1E003F09039E0780FC0
9026C03FFFC7FCC7EA07F82D407EBE33>I<49B4FC010F13E090383F00F8017C131E4848
131F4848137F0007ECFF80485A5B121FA24848EB7F00151C007F91C7FCA290C9FC5AAB6C
7EA3003FEC01C07F001F140316806C6C13076C6C14000003140E6C6C131E6C6C13789038
3F01F090380FFFC0D901FEC7FC222A7DA828>I<ED01FC15FFA3150715031501B114FF01
0713E190381F80F990387E003D49131FD803F81307485A49130348481301121F123F5B12
7FA290C7FCA25AAA7E7FA2123FA26C7E000F14037F000714076C6C497E6C6C497ED8007C
017913F890383F01F190380FFFC1903A01FE01FC002D407DBE33>I<EB01FE90380FFFC0
90383F03F09038FC01F848486C7E4848137E48487F000F158049131F001F15C04848130F
A2127F16E090C7FCA25AA290B6FCA290C9FCA67EA27F123F16E06C7E1501000F15C06C6C
13036DEB07806C6C1400C66C131E017E5B90381F80F8903807FFE0010090C7FC232A7EA8
28>I<167C903903F801FF903A1FFF078F8090397E0FDE1F9038F803F83803F001A23B07
E000FC0600000F6EC7FC49137E001F147FA8000F147E6D13FE00075C6C6C485AA23901F8
03E03903FE0FC026071FFFC8FCEB03F80006CAFC120EA3120FA27F7F6CB512E015FE6C6E
7E6C15E06C810003813A0FC0001FFC48C7EA01FE003E140048157E825A82A46C5D007C15
3E007E157E6C5D6C6C495A6C6C495AD803F0EB0FC0D800FE017FC7FC90383FFFFC010313
C0293D7EA82D>103 D<EA01E0EA07F8A2487EA46C5AA2EA01E0C8FCACEA01FC127FA312
0712031201B3AC487EB512F0A3143E7DBD1A>105 D<EA01FC12FFA3120712031201B292
B51280A392383FFC0016E0168093C7FC153C5D5D4A5AEC07C04A5A4AC8FC143E147F4A7E
13FD9038FFDFC0EC9FE0140F496C7E01FC7F496C7E1401816E7E81826F7E151F826F7EA2
82486C14FEB539F07FFFE0A32B3F7EBE30>107 D<EA01FC12FFA3120712031201B3B3B1
487EB512F8A3153F7DBE1A>I<2701F801FE14FF00FF902707FFC00313E0913B1E07E00F
03F0913B7803F03C01F80007903BE001F87000FC2603F9C06D487F000101805C01FBD900
FF147F91C75B13FF4992C7FCA2495CB3A6486C496CECFF80B5D8F87FD9FC3F13FEA34728
7DA74C>I<3901F801FE00FF903807FFC091381E07E091387803F000079038E001F82603
F9C07F0001138001FB6D7E91C7FC13FF5BA25BB3A6486C497EB5D8F87F13FCA32E287DA7
33>I<14FF010713E090381F81F890387E007E01F8131F4848EB0F804848EB07C04848EB
03E0000F15F04848EB01F8A2003F15FCA248C812FEA44815FFA96C15FEA36C6CEB01FCA3
001F15F86C6CEB03F0A26C6CEB07E06C6CEB0FC06C6CEB1F80D8007EEB7E0090383F81FC
90380FFFF0010090C7FC282A7EA82D>I<3901FC03FC00FF90381FFF8091387C0FE09039
FDE003F03A03FFC001FC6C496C7E91C7127F49EC3F805BEE1FC017E0A2EE0FF0A3EE07F8
AAEE0FF0A4EE1FE0A2EE3FC06D1580EE7F007F6E13FE9138C001F89039FDE007F09039FC
780FC0DA3FFFC7FCEC07F891C9FCAD487EB512F8A32D3A7EA733>I<3901F807E000FFEB
1FF8EC787CECE1FE3807F9C100031381EA01FB1401EC00FC01FF1330491300A35BB3A548
7EB512FEA31F287EA724>114 D<90383FC0603901FFF8E03807C03F381F000F003E1307
003C1303127C0078130112F81400A27E7E7E6D1300EA7FF8EBFFC06C13F86C13FE6C7F6C
1480000114C0D8003F13E0010313F0EB001FEC0FF800E01303A214017E1400A27E15F07E
14016C14E06CEB03C0903880078039F3E01F0038E0FFFC38C01FE01D2A7DA824>I<131C
A6133CA4137CA213FCA2120112031207001FB512C0B6FCA2D801FCC7FCB3A215E0A91200
9038FE01C0A2EB7F03013F138090381F8700EB07FEEB01F81B397EB723>I<D801FC14FE
00FF147FA3000714030003140100011400B3A51501A31503120015076DEB06FF017E010E
13806D4913FC90381FC078903807FFE00100903880FE002E297DA733>I<B53BC3FFFE03
FFF8A3290FFE003FE00013C06C486D48EB3F806C4817006D010F141E00016F131C15076D
163C00004A6C1338A2017F5E4B7E151DD93F805DED3DFC1538D91FC04A5AED78FE923870
7E03D90FE0017F5BEDE03F02F0140701070387C7FC9138F1C01F02F9148F010315CE9138
FB800F02FF14DE6D15FCED00076D5DA24A1303027E5CA2027C1301023C5C023813003D28
7EA642>119 D<B539E00FFFE0A32707FE000313006C48EB01FC6F5A00015D7F00005DA2
017F495AA2EC8003013F5CA26D6C48C7FCA26E5A010F130EA26D6C5AA2ECF83C01031338
A26D6C5AA2ECFEF001005BA2EC7FC0A36E5AA36EC8FCA2140EA2141E141C143C1438A214
7800181370127EB45BA2495AA248485AD87E07C9FCEA780EEA3C3CEA1FF8EA07E02B3A7E
A630>121 D E /Fw 22 122 df<B812FEEFFFC018F818FE26007FF8C73807FF806D4802
017F011F6F6C7E727E727E727E727EA2727EA2721380A21AC0A384A360A21A80A2601A00
A24E5A180F614E5A4E5AF0FFE04D1380050790C7FCEF7FFC91B712E08418FE02F0C73801
FF809438007FE0F01FF8727EF003FE857213807213C0F17FE0A2F13FF0A21AF8191FA21A
FCA81AF8193FA21AF0197FF1FFE0A24E13C04E1380604E1300F03FFC013FEEFFF8496C02
075BBA12C096C7FC18FC18C046527AD153>66 D<DC1FFC14034BB500C01307030F02F013
0F037F14FC912801FFF800FF131F02070180EB1FC04A48C73807E03FDA3FF8913801F07F
DA7FE0EC00F8902601FF80ED3CFF4990C97E494882494882495A4948824948825C01FF83
4849177F91CBFC48193F485AA24848181FA2121F49180FA2123FA2491807127FA31A005B
12FFAE127F7FA31A07123F7FA2121FA26D180F000F190EA26C7E1A1E6C6C181C6C193C80
6C6D1778137F6E17F06D6CEE01E06D7E6D6CEE03C06D6CEE07806D6CEE0F006D6D151E90
26007FE0157CDA3FF85DDA0FFEEC03F06E6C6CEB0FE0020101F8EBFF806E6CB548C7FC03
0F14F8030114E09226001FFEC8FC48567AD355>I<49B612FEA490C7003F138092380FFE
001507B3B3B3A21206EA3FC0487E487EA44B5AA25B007F5D0180131F0078C75B6C143F00
3E4A5A6C5D6C6C495A2707E003FEC7FC3901FC07FC6CB512F0013F13C0D907FCC8FC2F54
7BD13C>74 D<B712E0A4C66C90CAFCEB3FFC6D5AB3B3A9191CA51938A61978A319F819F0
A218011803A21807180F181F183F18FF013F1503496C023F13E0BAFCA43E527BD149>76
D<B500FC95B512FCA36E5FD8007FF2F800D93DFF943803BFF0011D62A2011C6DEE073FA3
6E6C160EA36E6C161CA26E6C1638A36E6C1670A36E6C16E0A36E6CED01C0A26E6CED0380
A36E6DEC0700A36F6C140EA36F6C5CA26F6C5CA36F6C5CA36F6C5CA26F6C495AA36F6C49
5AA36F6D48C7FCA393387FC00EA2706C5AA3706C5AA3706C5AA3706C5AA270B45AA3705B
A3013E6E90C8FC137F496C4E7E000701F0027E4B7EB66C4BB612FC173CA35E527AD16B>
I<DA3FF0130349B55B010714C0011FECF00F903A7FE00FF81F49C712FED801FCEC3F3F48
48EC1FBF48486EB4FC48481403485A4980003F8190C97E5A83127E8312FEA283A37E837F
A27F007F93C7FC7F7FEA3FFC7F6C6C7E14F86CEBFF806C14F8EDFF806C15F06C15FE6C6C
806D15C0010F81010315F8D9007F80140F020080030F7F03001480161F040713C0160182
EF7FE0A2173FEF1FF0A200E0160FA31707A37EA318E07E170F7E18C06C161F6C17806D15
3F6D16006D157E6D15FED8FCFC4A5A017F4A5A26F83FC0EB0FF0D90FFEEB7FC0D8F003B6
5A48C64AC7FC023F13F848010113C034567AD341>83 D<ECFFC0010F13F8013F13FE9039
FF00FF80D801F0EB3FE0D803C0EB0FF0486C6D7E01F86D7E000F816D13016F7EA3707E6C
5AEA01E0C9FCA6ED3FFF020FB5FC9138FFFC7F01071300EB1FF0EB7FC04848C7FCEA03FC
485A485A485A123F5B485A187012FF90C8FCA216FFA35D6D14BF007F14036DEB073F6C6C
90390F1FC0E06C6C131E6C6C90393C0FE1C02707FE01F013FF0001B5486C13806C6C9039
8003FE00D907FCC712F834367BB43B>97 D<EC0FFE91387FFFE049B512F8903907F801FE
90391FE0001FD93F80EB078049C7EA0FC001FE143F484815E00003157F485A485AA2485A
EE3FC0003FED0F004991C7FCA2127FA35B12FFAB127F7FA3123F6D1570121F6D15F0000F
16E06D140112076C6CEC03C06D15806C6C14076C6DEB0F00D93FC0131E6D6C137C903907
FC03F06DB55AD9007F1380DA0FF8C7FC2C367CB434>99 D<17FF4BB5FCA4ED0007160182
B3A6EC0FF8EC7FFF49B512E0903907FC03F090391FE0007C49487F49C7120F01FE804848
80485A000781484880A2485AA2485AA2127FA35B12FFAB127FA27FA2123FA27F121FA26C
6C5C00075D7F6C6C5C6C6C5C6C6C021E7F6D6C017C13E0D91FC049EBFF8090390FF807E0
0103B512800100495ADA1FF091C7FC39547CD241>I<EC0FF891B5FC010314C090390FF8
0FF090391FC003FC90397F8001FE49C77E4848EC7F804848143F49EC1FC0485A000FED0F
E05B001F16F01607485AA2007F16F8A25B160312FF90B7FCA30180C9FCA8127F7FA2123F
A26D1538121F17786C6C1570000716F06D15E06C6C14016C6CEC03C06C6C15806D6C130F
6D6CEB1F00D90FF0133C903907FE01F80101B512E06D6C1380DA07FCC7FC2D367DB434>
I<EF1FC0DA3FE0EBFFE0902701FFFC0313F001079039FF07E1F8903A1FE03FCF01903A3F
800FFC03903A7F0007F80101FE010314F04848903901FC004000036F1300491300000781
A24980000F82A8000793C7FC6D5CA200035D6D130100015D6C6C495A017F495A6E485A90
39FFE03FC0D801C7B5C8FC01C113FC3903803FE091CAFCA57FA27F7F7F6CB612E016FF6C
16C017F0013F15FC8390B8FCD803F8C7001F1380D80FE0020113C04848EC007F4848ED1F
E090C9120F127EEF07F012FE481603A56C1607007E17E0007F160F6C6CED1FC06C6CED3F
806C6CED7F006C6C15FED803FCEC03FCC6B4EC0FF0D93FF0EBFFC0010FB6C7FC010114F8
D9001F1380354E7DB43B>103 D<1378EA01FE487E487FA66C90C7FC6C5AEA007890C8FC
B0EB7F80B5FCA41203C6FC137FB3B3A43801FFE0B61280A419507CCF21>105
D<EB7F80B5FCA41203C6FC137FB3B3B3B13801FFE0B612C0A41A537CD221>108
D<01FFD907FEEC03FFB590261FFFC0010F13E0037F01F0013F13F8912701F80FFC9038FC
07FE913D03C003FE01E001FF000390260700019038038000C6010E6D6C48C76C7E6D48DA
7F8E6E7E4A159CA24ADA3FF86E7E02605D14E04A5DA34A5DB3AD2601FFE0DAFFF0EC7FF8
B6D8C07F9026FFE03FB512F0A45C347CB363>I<01FFEB07FCB590383FFF8092B512E091
3901F00FF8913903C007FC000349C66C7EC6010E13016D486D7E5C143002706E7E146014
E05CA35CB3AD2601FFE0903801FFE0B600C0B612C0A43A347CB341>I<EC0FFC91387FFF
8049B512E0903907F807F890391FE001FE90393F80007F017EC7EA1F80496E7E48486E7E
00038248486E7EA248486E7EA248486E7EA2003F82A24848ED7F80A400FF17C0AB007F17
80A26D15FFA2003F1700A2001F5E6D1401000F5E6D140300075E6C6C4A5A6C6C4A5AA2D8
007FEC3F806D6C49C7FC90391FE001FE903907F807F86DB55AD9007F1380DA0FFCC8FC32
367CB43B>I<90397F8007FCB590387FFF800281B512E0913987F00FF891398F8003FC00
0190399E0001FF6C01BC6D7FD97FF86E7E4A6E7E4A6E7E4A140F844A6E7EA2717EA3717E
A4711380AB4D1300A44D5AA24D5AA2606E140F4D5A6E5D6E4A5A6E4A5A02BC4AC7FC029E
495A028FEB07FC913987E01FF00281B512C0DA807F90C8FCED0FF892CAFCB13801FFE0B6
12C0A4394B7DB341>I<01FFEB1F80B5EB7FF0913801FFF8913803E1FC91380783FE0003
EB0F07C6131EEB7F1C1438143091387003FC91386000F0160014E05CA45CB3AA8048487E
B612F0A427347DB32E>114 D<D907FE13C090387FFF8148B512E33907F803FF390FC000
7F4848133F48C7121F003E140F007E1407127C00FC1403A315017EA27E7F6C6C90C7FC13
F013FF6C13F86CEBFF806C14E06C14F86C14FEC680013F1480010714C0D9003F13E01403
9138007FF0151F00E0140FED07F8A26C1403A215017EA36C15F0A26C14036C15E015076D
EB0FC06DEB1F80D8FDF0EB3F0039F8FC01FE39F07FFFF8D8E01F13E0D8C00390C7FC2536
7CB42E>I<EB01C0A71303A41307A3130FA2131FA2133F137F13FF5A5A001F90B512E0B7
FCA326003FC0C7FCB3A71638AC6E1378011F1470A26D6C13F016E0903807F801903903FC
03C0903901FE07806DB51200EC3FFCEC07F0254B7EC92E>I<B60103B51280A4000301F0
9039007FF800C601C0EC3FE0017FED1F8095C7FC133F171E6D7E171C6E143C010F1538A2
6E1478010715708001035DA26E130101015D806D4A5AA2ED8007027F91C8FC15C0023F13
0EA2EDE01E021F131CA26E6C5AA2EDF87802071370A26E6C5AA215FF6E5BA26E5BA36FC9
FCA2153EA3151C39347EB23E>118 D<B60103B51280A4000301F09039007FF800C601C0
EC3FE0017FED1F8095C7FC133F6E141E131F171C6E143C010F15388001075DA26E14F001
035D8001014A5AA26E13036D5D1580027F49C8FCA26F5A023F130E15E0021F5BA2EDF03C
020F133815F802075BA2EDFCF002035B15FE6E6C5AA36E5BA26FC9FCA3153EA2151CA215
3C153815781570A215F05D14015DA2003E495A127F486C48CAFCA2140E141E495A6C5B00
7C5B383F03E06CB45A00075BD801FCCBFC394B7EB23E>121 D E
end
TeXDict begin

1 0 bop 829 1208 a Fw(Compiling)35 b(Standard)i(ML)i(to)f(Ja)m(v)-7
b(a)39 b(Byteco)s(des)1001 1370 y Fv(Nic)m(k)31 b(Ben)m(ton,)h(Andrew)d
(Kennedy)-8 b(,)30 b(George)i(Russell)286 1533 y(In)d
Fu(Pr)-5 b(o)g(c)g(e)g(e)g(dings)35 b(of)e(the)g(3r)-5
b(d)34 b(A)n(CM)d(SIGPLAN)h(Confer)-5 b(enc)g(e)33 b(on)h(F)-7
b(unctional)34 b(Pr)-5 b(o)g(gr)g(amming)p Fv(,)1388
1616 y(Septem)m(b)s(er)30 b(1998,)i(Baltimore.)-152 1825
y Ft(The)26 b(follo)n(wing)i(cop)n(yrigh)n(t)e(notice)g(is)g(required)f
(b)n(y)g(the)g(A)n(CM)h(\(see)g Fs(http://www.acm.org/pubs/copy)q(righ)
q(t_pol)q(icy.)q(html)q Ft(\).)14 1968 y(Cop)n(yrigh)n(t)401
1966 y(c)380 1968 y Fr(\015)31 b Ft(1998)h(b)n(y)e(the)g(Asso)r
(ciation)j(for)e(Computing)f(Mac)n(hinery)-6 b(,)33 b(Inc.)49
b(P)n(ermission)31 b(to)g(mak)n(e)f(digital)i(or)f(hard)g(copies)14
2051 y(of)f(part)e(or)g(all)i(of)f(this)f(w)n(ork)h(for)g(p)r(ersonal)h
(or)e(classro)r(om)i(use)e(is)h(gran)n(ted)g(without)f(fee)h(pro)n
(vided)f(that)g(copies)h(are)g(not)f(made)14 2134 y(or)f(distributed)f
(for)h(pro\014t)g(or)f(commercial)h(adv)l(an)n(tage)f(and)g(that)h
(copies)g(b)r(ear)g(this)f(notice)h(and)f(the)h(full)g(citation)g(on)g
(the)f(\014rst)14 2217 y(page.)56 b(Cop)n(yrigh)n(ts)33
b(for)g(comp)r(onen)n(ts)f(of)h(this)g(w)n(ork)f(o)n(wned)h(b)n(y)f
(others)g(than)g(A)n(CM)h(m)n(ust)e(b)r(e)i(honored.)55
b(Abstracting)32 b(with)14 2300 y(credit)f(is)f(p)r(ermitted.)47
b(T)-6 b(o)31 b(cop)n(y)f(otherwise,)j(to)d(republish,)h(to)g(p)r(ost)f
(on)h(serv)n(ers,)h(or)e(to)g(redistribute)h(to)f(lists,)j(requires)d
(prior)14 2383 y(sp)r(eci\014c)f(p)r(ermission)g(and/or)f(a)h(fee.)43
b(Request)27 b(p)r(ermissions)i(from)f(Publications)i(Dept,)e(A)n(CM)h
(Inc.,)g(fax)f(+1)h(\(212\))g(869-0481,)14 2466 y(or)d
Fs(permissions@acm.org)p Ft(.)p eop
1 1 bop 829 85 a Fw(Compiling)35 b(Standard)i(ML)i(to)f(Ja)m(v)-7
b(a)39 b(Byteco)s(des)730 313 y Fv(Nic)m(k)31 b(Ben)m(ton)324
b(Andrew)29 b(Kennedy)322 b(George)32 b(Russell)1552
503 y(P)m(ersimmon)d(IT,)h(Inc.)1602 616 y(Cam)m(bridge,)g(U.K.)1084
710 y Fq(f)p Fp(nick,andrew,george)p Fq(g)p Fp(@persimm)o(on.c)o(o.uk)
-152 1276 y Fo(Abstract)-152 1433 y Ft(MLJ)43 b(compiles)f(SML'97)h(in)
n(to)f(v)n(eri\014er-complian)n(t)f(Ja)n(v)l(a)h(b)n(yte-)-152
1516 y(co)r(des.)34 b(Its)20 b(features)h(include)f(t)n(yp)r(e-c)n(hec)
n(k)n(ed)e(in)n(terlanguage)j(w)n(ork-)-152 1599 y(ing)31
b(extensions)g(whic)n(h)f(allo)n(w)j(ML)d(and)h(Ja)n(v)l(a)f(co)r(de)h
(to)g(call)h(eac)n(h)-152 1682 y(other,)24 b(automatic)e(recompilation)
h(managemen)n(t,)f(compact)g(com-)-152 1765 y(piled)27
b(co)r(de)g(and)f(run)n(time)f(p)r(erformance)h(whic)n(h,)h(using)g(a)g
(`just)g(in)-152 1848 y(time')h(compiling)h(Ja)n(v)l(a)f(virtual)h(mac)
n(hine,)f(usually)h(exceeds)f(that)-152 1931 y(of)21
b(existing)g(sp)r(ecialised)h(b)n(yteco)r(de)e(in)n(terpreters)g(for)i
(ML.)e(Notable)-152 2014 y(features)g(of)g(the)f(compiler)g(itself)h
(include)f(whole-program)h(optimi-)-152 2097 y(sation)28
b(based)e(on)g(rewriting,)i(compilation)f(of)g(p)r(olymorphism)e(b)n(y)
-152 2181 y(sp)r(ecialisation,)g(a)20 b(no)n(v)n(el)g(monadic)g(in)n
(termediate)g(language)i(whic)n(h)-152 2264 y(expresses)g(e\013ect)f
(information)h(in)f(the)g(t)n(yp)r(e)g(system)f(and)h(some)g(in-)-152
2347 y(teresting)27 b(data)f(represen)n(tation)g(c)n(hoices.)-152
2542 y Fo(1)89 b(In)n(tro)r(duction)-152 2699 y Ft(The)29
b(success)g(of)f(Sun)f(Microsystem's)i(Ja)n(v)l(a)g(language)g([3)q(])f
(means)-152 2782 y(that)61 b(virtual)g(mac)n(hines)f(executing)g(Ja)n
(v)l(a's)i(secure,)70 b(m)n(ulti-)-152 2865 y(threaded,)40
b(garbage-collected)f(b)n(yteco)r(de)e(and)g(supp)r(orted)f(b)n(y)g(a)
-152 2948 y(capable)d(collection)g(of)g(standard)f(library)g(classes,)j
(are)e(no)n(w)f(not)-152 3031 y(just)d(a)n(v)l(ailable)g(for)g(a)f
(wide)h(range)f(of)h(arc)n(hitectures)g(and)f(op)r(erat-)-152
3114 y(ing)d(systems,)f(but)f(are)i(actually)g(installed)g(on)f(most)g
(mo)r(dern)f(ma-)-152 3197 y(c)n(hines.)34 b(The)25 b(idea)g(of)g
(compiling)g(a)g(functional)g(language)h(suc)n(h)e(as)-152
3280 y(ML)19 b(in)n(to)f(Ja)n(v)l(a)g(b)n(yteco)r(des)g(is)h(th)n(us)e
(v)n(ery)h(app)r(ealing:)31 b(as)19 b(w)n(ell)g(as)g(the)-152
3363 y(ob)n(vious)31 b(attraction)g(of)g(b)r(eing)f(able)h(to)g(run)e
(the)h(same)g(compiled)-152 3446 y(co)r(de)d(on)f(an)n(y)g(mac)n(hine)g
(with)g(a)h(JVM,)g(the)f(p)r(oten)n(tial)h(b)r(ene\014ts)f(of)-152
3529 y(in)n(terlanguage)32 b(w)n(orking)f(b)r(et)n(w)n(een)f(Ja)n(v)l
(a)h(and)f(ML)h(are)g(consider-)-152 3612 y(able.)-40
3695 y(Man)n(y)36 b(existing)g(compilers)g(for)g(functional)g
(languages)h(ha)n(v)n(e)-152 3778 y(the)25 b(abilit)n(y)f(to)h(call)h
(external)f(functions)g(written)g(in)f(another)h(lan-)-152
3861 y(guage)43 b(\(usually)g(C\).)f(Unfortunately)-6
b(,)46 b(di\013erences)d(in)f(memory)-152 3945 y(mo)r(dels)29
b(and)g(t)n(yp)r(e)f(systems)h(mak)n(e)f(most)h(of)h(these)f(foreign)h
(func-)-152 4028 y(tion)c(in)n(terfaces)h(a)n(wkw)n(ard)f(to)g(use,)g
(limited)f(in)g(functionalit)n(y)h(and)-152 4111 y(ev)n(en)g(t)n(yp)r
(e-unsafe.)34 b(Consequen)n(tly)-6 b(,)26 b(although)g(there)g(are,)h
(for)g(ex-)-152 4194 y(ample,)40 b(go)r(o)r(d)e(functional)g(graphics)g
(libraries)g(whic)n(h)f(call)h(X11,)-152 4277 y(the)26
b(t)n(ypical)g(functional)h(programmer)f(probably)f(do)r(esn't)i(b)r
(other)-152 4360 y(to)c(use)g(a)g(C)g(language)i(in)n(terface)e(to)g
(call)h(`ev)n(eryda)n(y')e(library)h(func-)-152 4443
y(tions)e(to,)h(sa)n(y)-6 b(,)21 b(calculate)g(an)f(MD5)h(c)n(hec)n
(ksum,)f(manipulate)f(a)i(GIF)-152 4526 y(\014le)32 b(or)g(access)i(a)e
(database.)53 b(She)32 b(th)n(us)f(either)h(do)r(es)g(more)g(w)n(ork)
-152 4609 y(than)25 b(should)g(b)r(e)g(necessary)-6 b(,)26
b(or)f(giv)n(es)h(up)e(and)h(uses)h(another)f(lan-)-152
4692 y(guage.)35 b(This)26 b(is)f(surely)g(a)g(ma)t(jor)g(factor)h
(holding)g(bac)n(k)e(the)g(wider)p -152 4752 797 4 v
-152 4962 a Fn(T)-6 b(o)30 b(app)r(ear)g(in)f(the)h(3rd)f(A)n(CM)g
(SIGPLAN)h(Conference)g(on)-152 5037 y(F)-6 b(unctional)25
b(Programming,)c(Septem)n(b)r(er)j(1998,)g(Baltimore)2040
1276 y Ft(adoption)c(of)h(functional)f(languages)i(in)d(`real)i(w)n
(orld')g(applications,)2040 1359 y(and)30 b(the)g(situation)i(is)f
(getting)g(w)n(orse)g(as)g(more)f(soft)n(w)n(are)j(has)d(to)2040
1442 y(op)r(erate)37 b(in)f(a)h(complex)e(en)n(vironmen)n(t,)i(in)n
(teracting)g(with)g(com-)2040 1525 y(p)r(onen)n(ts)24
b(written)g(in)g(a)g(v)l(ariet)n(y)g(of)h(languages,)h(p)r(ossibly)e
(wrapp)r(ed)2040 1608 y(up)18 b(in)h(a)g(distributed)f(comp)r(onen)n(t)
g(arc)n(hitecture)h(suc)n(h)f(as)i(CORBA,)2040 1691 y(DCOM)26
b(or)g(Ja)n(v)l(aBeans.)2152 1774 y(Because)43 b(the)f(`seman)n(tic)g
(gap')h(b)r(et)n(w)n(een)f(Ja)n(v)l(a)g(and)g(ML)g(is)2040
1857 y(smaller)21 b(than)e(that)h(b)r(et)n(w)n(een)f(C)i(and)e(ML,)i
(and)f(b)r(ecause)g(Ja)n(v)l(a)g(uses)2040 1940 y(a)29
b(simple)g(sc)n(heme)f(for)i(dynamic)d(linking,)j(MLJ)g(is)f(able)h(to)
f(mak)n(e)2040 2023 y(in)n(terlanguage)g(w)n(orking)g(safe)h(and)d
(straigh)n(tforw)n(ard.)44 b(MLJ)29 b(co)r(de)2040 2107
y(can)h(not)f(only)g(call)i(external)e(Ja)n(v)l(a)h(metho)r(ds,)g(but)e
(can)i(also)h(ma-)2040 2190 y(nipulate)21 b(Ja)n(v)l(a)h(ob)t(jects)h
(and)e(declare)h(Ja)n(v)l(a)g(classes)h(with)e(metho)r(ds)2040
2273 y(implemen)n(ted)28 b(in)h(ML,)i(whic)n(h)e(can)h(b)r(e)g(called)g
(from)g(Ja)n(v)l(a.)47 b(Th)n(us)2040 2356 y(the)22 b(MLJ)h(programmer)
e(can)h(not)g(only)g(write)g(applets)h(in)f(ML,)g(but)2040
2439 y(also)35 b(has)f(instan)n(t)f(access)i(to)f(standard)f(libraries)
i(for)g(2)e(and)h(3D)2040 2522 y(graphics,)41 b(GUIs,)f(database)d
(access,)k(so)r(c)n(k)n(ets)d(and)e(net)n(w)n(orking,)2040
2605 y(concurrency)-6 b(,)24 b(CORBA)h(connectivit)n(y)-6
b(,)24 b(securit)n(y)-6 b(,)24 b(servlets,)i(sound)2040
2688 y(and)h(so)i(on,)f(as)g(w)n(ell)h(as)f(to)g(a)g(large)h(and)e
(rapidly-gro)n(wing)i(collec-)2040 2771 y(tion)d(of)g(third-part)n(y)f
(co)r(de.)2152 2854 y(The)e(in)n(teresting)h(question)f(is)h(whether)f
(ML)g(can)g(b)r(e)g(compiled)2040 2937 y(in)n(to)j(Ja)n(v)l(a)f(b)n
(yteco)r(des)h(whic)n(h)f(are)h(e\016cien)n(t)f(enough)h(to)f(b)r(e)h
(useful.)2040 3020 y(Ja)n(v)l(a)33 b(itself)h(is)f(often)g(criticised)h
(for)g(b)r(eing)f(to)r(o)g(slo)n(w,)j(esp)r(ecially)2040
3103 y(running)29 b(co)r(de)h(whic)n(h)f(do)r(es)h(signi\014can)n(t)g
(amoun)n(ts)f(of)h(allo)r(cation,)2040 3186 y(and)23
b(its)g(b)n(yteco)r(des)g(w)n(ere)h(certainly)f(not)g(designed)g(with)h
(compila-)2040 3269 y(tion)i(of)g(other)g(languages)h(in)e(mind.)33
b(There)26 b(is)g(little)h(opp)r(ortunit)n(y)2040 3352
y(for)g(lo)n(w-lev)n(el)f(bac)n(k)n(end)f(tric)n(k)n(ery)g(since)h(w)n
(e)g(ha)n(v)n(e)g(no)f(con)n(trol)i(o)n(v)n(er)2040 3435
y(the)20 b(garbage)h(collector,)j(heap)19 b(la)n(y)n(out,)j(etc.,)g
(and)d(the)h(requiremen)n(t)2040 3518 y(that)g(compiled)g(classes)i
(pass)f(the)e(Ja)n(v)l(a)i(v)n(eri\014er)f(places)h(strict)f(t)n(yp)r
(e)2040 3601 y(constrain)n(ts)29 b(on)g(the)f(co)r(de)h(w)n(e)g
(generate.)44 b(F)-6 b(urthermore,)28 b(curren)n(t)2040
3684 y(Ja)n(v)l(a)j(virtual)g(mac)n(hines)f(not)g(only)h(store)g(activ)
l(ation)g(records)h(on)2040 3767 y(a)e(\014xed-size)f(stac)n(k,)i(but)d
(also)j(fail)g(to)f(optimise)f(tail)h(calls.)48 b(Th)n(us)2040
3850 y(the)24 b(initial)h(prosp)r(ects)g(for)g(generating)g(acceptably)
f(e\016cien)n(t)g(Ja)n(v)l(a)2040 3933 y(b)n(yteco)r(des)c(from)g(a)g
(functional)h(language)h(did)e(not)g(lo)r(ok)g(go)r(o)r(d)i(\(our)2040
4016 y(\014rst)i(v)n(ery)f(simple-minded)f(lam)n(b)r(da-calculus)i(to)g
(Ja)n(v)l(a)g(translator)2040 4099 y(plus)j(an)f(early)h(JVM)g(ran)g
(the)f(n\014b)g(b)r(enc)n(hmark)f(40)i(times)f(slo)n(w)n(er)2040
4182 y(than)g(Mosco)n(w)j(ML\),)e(and)g(it)f(w)n(as)i(clear)g(that)e(a)
h(practical)h(ML)f(to)2040 4265 y(Ja)n(v)l(a)35 b(b)n(yteco)r(de)g
(compiler)g(w)n(ould)g(ha)n(v)n(e)g(to)g(do)g(fairly)h(extensiv)n(e)
2040 4348 y(optimisations.)41 b(MLJ)28 b(is)g(still)g(a)g(w)n
(ork-in-progress,)h(and)e(there)g(is)2040 4431 y(scop)r(e)22
b(for)f(signi\014can)n(t)h(impro)n(v)n(emen)n(t)c(in)j(b)r(oth)f
(compilation)i(sp)r(eed)2040 4514 y(and)32 b(the)g(generated)g(co)r(de)
h(\(in)f(particular,)j(the)d(curren)n(t)f(v)n(ersion)2040
4597 y(still)c(only)f(optimises)g(simple)g(tail)h(calls\),)h(but)d(it)h
(is)h(already)f(quite)2040 4680 y(usable)20 b(on)f(source)h(programs)g
(of)g(sev)n(eral)g(thousand)f(lines)h(and)f(pro-)2040
4763 y(duces)30 b(co)r(de)h(whic)n(h,)i(with)d(a)h(go)r(o)r(d)h(mo)r
(dern)d(JVM,)i(usually)g(out-)2040 4846 y(p)r(erforms)26
b(the)f(p)r(opular)h(Mosco)n(w)i(ML)e(b)n(yteco)r(de)f(in)n(terpreter.)
1921 5494 y(1)p eop
2 2 bop -152 -69 a Fo(2)89 b(Ov)n(erview)-152 88 y(2.1)g(Compiler)30
b(phases)-152 220 y Ft(MLJ)h(is)g(in)n(tended)e(for)i(writing)h
(compact,)f(self-con)n(tained)g(appli-)-152 303 y(cations,)23
b(applets)e(and)g(soft)n(w)n(are)h(comp)r(onen)n(ts)e(and)g(do)r(es)i
(not)e(ha)n(v)n(e)-152 386 y(the)h(usual)g(SML)g(in)n(teractiv)n(e)g
(read-ev)l(al-prin)n(t)f(top)h(lev)n(el.)33 b(Instead,)-152
469 y(it)19 b(op)r(erates)h(m)n(uc)n(h)d(more)i(lik)n(e)g(a)g
(traditional)h(batc)n(h)e(compiler.)33 b(The)-152 552
y(structures)e(whic)n(h)g(mak)n(e)f(up)g(a)h(pro)t(ject)h(are)g
(separately)f(parsed,)-152 635 y(t)n(yp)r(ec)n(hec)n(k)n(ed,)39
b(translated)f(in)n(to)f(our)g(t)n(yp)r(ed)f(Monadic)i(In)n(terme-)-152
718 y(diate)30 b(Language)g(\(MIL,)f(see)h(section)g(4\))f(and)g
(simpli\014ed.)44 b(These)-152 801 y(separately)21 b(compiled)f(MIL)g
(terms)f(are)h(then)g(link)n(ed)f(together)i(in)n(to)-152
884 y(one)j(large)h(MIL)f(term)e(whic)n(h)i(is)g(extensiv)n(ely)f
(transformed)h(b)r(efore)-152 967 y(b)r(eing)g(translated)h(in)n(to)e
(our)h(lo)n(w-lev)n(el)h(Basic)g(Blo)r(c)n(k)f(Co)r(de)g(\(BBC,)-152
1050 y(see)32 b(section)g(7\).)51 b(Finally)-6 b(,)32
b(the)f(bac)n(k)n(end)f(turns)h(the)f(BBC)i(in)n(to)f(a)-152
1133 y(collection)f(of)f(compiled)e(Ja)n(v)l(a)h(class)i(\014les,)f
(whic)n(h)f(b)n(y)f(default)h(are)-152 1216 y(placed)e(in)g(a)g(single)
h Fs(zip)f Ft(arc)n(hiv)n(e.)-40 1299 y(This)d(whole-program)g(approac)
n(h)g(to)f(compilation)h(is)g(un)n(usual,)-152 1382 y(though)g(not)g
(unique)f([26)q(,)i(22].)34 b(It)23 b(increases)h(recompilation)g
(times)-152 1465 y(considerably)-6 b(,)21 b(but)c(do)r(es)i(allo)n(w)h
(us)e(easily)i(to)e(pro)r(duce)g(m)n(uc)n(h)f(faster)-152
1548 y(and)41 b(\(just)g(as)g(imp)r(ortan)n(tly)f(for)i(applets\))f
(smaller)g(co)r(de.)80 b(W)-6 b(e)-152 1631 y(monomorphise)31
b(the)h(whole)h(program)f(and)g(can)g(p)r(erform)g(trans-)-152
1714 y(formations)39 b(suc)n(h)e(as)h(inlining,)j(dead-co)r(de)d
(elimination,)j(arit)n(y-)-152 1797 y(raising)23 b(and)e(kno)n
(wn-function)g(call)i(optimisation)f(with)g(no)f(regard)-152
1880 y(for)e(mo)r(dule)e(b)r(oundaries,)j(so)e(there)g(is)g(no)g(run)n
(time)e(cost)j(asso)r(ciated)-152 1963 y(with)26 b(use)g(of)g(the)g(mo)
r(dule)f(system.)898 1931 y Fm(1)-40 2046 y Ft(App)r(endix)19
b(A)g(con)n(tains)i(an)f(example)f(of)i(JVM)f(co)r(de)g(generated)-152
2129 y(b)n(y)25 b(MLJ.)-152 2317 y Fo(2.2)89 b(Compilation)31
b(en)n(vironmen)n(t)-152 2448 y Ft(MLJ)26 b(can)f(b)r(e)f(run)h(en)n
(tirely)f(in)h(batc)n(h)f(mo)r(de)g(or)h(as)h(an)f(in)n(teractiv)n(e)
-152 2531 y(recompilation)i(en)n(vironmen)n(t.)34 b(T)-6
b(op-lev)n(el)26 b(structures)g(and)f(signa-)-152 2614
y(tures)36 b(are)g(stored)f(one-p)r(er-\014le,)j(as)e(in)g(Mosco)n(w)h
(ML)f(\(MLJ)g(0.1)-152 2697 y(do)r(esn't)c(implemen)n(t)e(functors\).)
53 b(All)32 b(compilation)g(is)g(driv)n(en)f(b)n(y)-152
2780 y(the)24 b(need)h(to)f(pro)r(duce)h(one)f(or)h(more)f(named)g(Ja)n
(v)l(a)h(class)h(\014les:)34 b(for)-152 2863 y(an)e(application)h(this)
f(is)g(usually)g(just)g(the)g(class)h(con)n(taining)f(the)-152
2946 y Fs(main)i Ft(metho)r(d,)f(whilst)h(for)f(an)g(applet)f(it)h(is)g
(usually)g(a)g(sub)r(class)-152 3029 y(of)i Fs(java.awt.Applet)p
Ft(.)44 b(Once)27 b(these)h(ro)r(ot)g(classes)i(and)d(their)h(ex-)-152
3112 y(p)r(orted)d(names)g(ha)n(v)n(e)f(b)r(een)h(sp)r(eci\014ed,)h
(the)f Fs(make)g Ft(command)f(com-)-152 3195 y(piles,)35
b(links)d(and)f(optimises)i(the)e(required)h(structures)g(using)g(an)
-152 3278 y(automatic)c(dep)r(endency)f(analysis.)43
b(There)28 b(is)h(a)f(smart)g(recompi-)-152 3361 y(lation)c(manager,)g
(similar)f(to)g(SML/NJ's)h(CM)g([7)q(],)g(whic)n(h)f(ensures)-152
3444 y(that)34 b(only)h(the)f(necessary)h(structures)f(are)h
(recompiled)f(when)g(a)-152 3527 y(\014le)e(is)h(c)n(hanged,)g(though)f
(the)f(p)r(ost-link)h(optimisation)g(phase)g(is)-152
3610 y(alw)n(a)n(ys)c(p)r(erformed)e(on)h(the)f(whole)h(program.)38
b(T)n(ypically)-6 b(,)27 b(the)f(re-)-152 3693 y(compile)37
b(time)g(\(relinking)g(all)h(the)f(translated)h(MIL)f(structures)-152
3776 y(from)g(memory)-6 b(,)37 b(optimising)g(and)f(generating)i(co)r
(de\))f(is)g(around)-152 3859 y(t)n(w)n(o)31 b(thirds)g(of)g(the)g
(total)g(initial)h(compile)f(time)f(\(whic)n(h)g(also)i(in-)-152
3942 y(cludes)26 b(parsing,)h(t)n(yp)r(ec)n(hec)n(king)d(and)i
(translation)h(in)n(to)e(MIL\).)-40 4025 y(During)38
b(compilation,)j(the)c(compiler)g(not)h(only)f(t)n(yp)r(ec)n(hec)n(ks)
-152 4108 y(the)j(ML)h(co)r(de,)j(but)c(if)h(an)n(y)f(external)g(Ja)n
(v)l(a)h(classes)h(are)e(men-)-152 4191 y(tioned,)i(their)d(compiled)e
(represen)n(tations)j(are)e(read)h(\(t)n(ypically)-152
4274 y(from)f(within)g(the)g(standard)g Fs(classes.zip)i
Ft(\014le\))e(to)g(t)n(yp)r(ec)n(hec)n(k)-152 4358 y(and)26
b(resolv)n(e)g(the)f(references.)-152 4553 y Fo(3)89
b(The)29 b(Language)-152 4710 y Ft(MLJ)37 b(compiles)e(the)g
(functor-free)h(subset)g(of)g(SML'97)h([14)q(])e(\(in-)-152
4793 y(cluding)29 b(substructures,)g(the)f(new)i Fs(where)g
Ft(construct,)f(etc.\),)h(plus)-152 4876 y(our)23 b(non-standard)f
(extensions)h(for)h(in)n(terlanguage)g(w)n(orking)g(with)p
-152 4936 797 4 v -65 4985 a Fl(1)-33 5010 y Fk(`Whole)31
b(program)g(compiler')e(sounds)j(a)g(bit)f(naiv)n(e,)i(so)f(w)n(e)g
(prefer)e(to)-152 5076 y(think)22 b(of)h(it)f(as)h(a)g(`p)r(ost-link)f
(optimiser',)f(whic)n(h)h(has)h(a)g(m)n(uc)n(h)f(more)g(sophis-)-152
5143 y(ticated)f(ring)i Fj(:-\))2040 -69 y Ft(Ja)n(v)l(a.)2211
-100 y Fm(2)2279 -69 y Ft(A)e(large)h(subset)g(of)g(the)e(new)i
(standard)f(Basis)i(Library)e(has)2040 14 y(b)r(een)k(implemen)n(ted.)
2152 97 y(The)41 b(in)n(terlanguage)i(features)f(bring)f(Ja)n(v)l(a)g
(t)n(yp)r(es)f(and)h(v)l(al-)2040 180 y(ues)26 b(in)n(to)f(ML,)h
(whilst)g(enforcing)h(a)e(separation)i(b)r(et)n(w)n(een)e(the)g(t)n(w)n
(o)2040 263 y(\(though)j(a)h(Ja)n(v)l(a)f(t)n(yp)r(e)g(and)g(an)g(ML)h
(t)n(yp)r(e)e(ma)n(y)g(w)n(ell)j(end)d(up)h(the)2040
346 y(same)33 b(in)f(the)h(compiled)f(co)r(de\).)56 b(External)33
b(Ja)n(v)l(a)g(t)n(yp)r(es)f(ma)n(y)g(b)r(e)2040 429
y(referred)26 b(to)g(in)f(ML)g(simply)g(b)n(y)f(using)i(their)f(Ja)n(v)
l(a)g(names)g(in)g(quo-)2040 512 y(tation)h(marks.)34
b(Th)n(us)2079 654 y Fs("java.awt.Graphics")44 b(*)39
b(int)2040 795 y Ft(is)29 b(the)g(t)n(yp)r(e)e(of)j(pairs)f(whose)h
(\014rst)e(comp)r(onen)n(t)g(is)h(a)g(Ja)n(v)l(a)g(ob)t(ject)2040
878 y(represen)n(ting)k(a)g(graphics)g(con)n(text)g(and)f(whose)h
(second)g(comp)r(o-)2040 961 y(nen)n(t)20 b(is)i(an)f(ML)h(in)n(teger.)
33 b(An)20 b(imp)r(ortan)n(t)h(subtlet)n(y)f(is)i(that,)g(whilst)2040
1044 y(in)33 b(Ja)n(v)l(a)g(all)g(p)r(oin)n(ter)g(\(reference\))g(t)n
(yp)r(es)f(implicitly)g(include)h(the)2040 1127 y(sp)r(ecial)24
b(v)l(alue)e Fs(null)p Ft(,)j(w)n(e)d(c)n(hose)h(to)g(mak)n(e)e(their)i
(quoted)f(Ja)n(v)l(a)g(t)n(yp)r(e)2040 1210 y(names)32
b(in)g(ML)g(refer)h(only)f(to)g(the)g(non-)p Fs(null)g
Ft(v)l(alues.)54 b(Where)32 b(a)2040 1293 y(v)l(alue)d(of)h(Ja)n(v)l(a)
g(reference)h(t)n(yp)r(e)d Fi(t)h Ft(ma)n(y)f(b)r(e)i(passed)f(from)h
(Ja)n(v)l(a)f(to)2040 1376 y(ML)23 b(co)r(de)g(\(as)h(the)e(result)h
(of)h(an)f(external)g(\014eld)f(access)j(or)e(metho)r(d)2040
1459 y(call,)35 b(or)c(as)i(a)e(parameter)g(to)h(a)g(metho)r(d)e
(implemen)n(ted)g(in)h(ML\),)2040 1542 y(then)e(that)g(v)l(alue)g(is)h
(giv)n(en)g(the)f(ML)g(t)n(yp)r(e)g Fs(")p Fi(t)p Fs(")39
b(option)31 b Ft(with)f(the)2040 1625 y(v)l(alue)36 b
Fs(NONE)h Ft(corresp)r(onding)g(to)f(Ja)n(v)l(a)g Fs(null)h
Ft(and)f(v)l(alues)g(of)h(the)2040 1708 y(form)30 b Fs(SOME\(v\))h
Ft(corresp)r(onding)f(to)g(non-)p Fs(null)g Ft(v)l(alues.)47
b(Similarly)2040 1791 y(w)n(e)24 b(guaran)n(tee)h(that)f(an)n(y)f(ML)h
(v)l(alue)g(of)h(t)n(yp)r(e)e Fs(")p Fi(t)p Fs(")39 b(option)25
b Ft(will)h(b)r(e)2040 1874 y(represen)n(ted)g(b)n(y)e(the)i(an)g
(elemen)n(t)f(of)h(the)g(underlying)f(Ja)n(v)l(a)h(class.)2040
1957 y(This)d(complication)g(allo)n(ws)i(the)d(t)n(yp)r(e)f(system)h
(to)h(catc)n(h)f(statically)2040 2040 y(what)27 b(w)n(ould)g(otherwise)
i(b)r(e)d(dynamic)g Fs(NullPointerException)p Ft(s)2040
2123 y(and)31 b(also)h(giv)n(es)f(the)g(compiler)g(more)f(freedom)h(in)
g(c)n(ho)r(osing)h(and)2040 2206 y(sharing)26 b(data)g(represen)n
(tations)h(\(see)f(Section)g(6\).)2152 2289 y(The)37
b(builtin)g(structure)g Fs(Java)h Ft(includes)f(ML)h(synon)n(yms)d(for)
2040 2372 y(common)22 b(Ja)n(v)l(a)h(t)n(yp)r(es)f(and)h(co)r(ercions)h
(b)r(et)n(w)n(een)f(man)n(y)e(equiv)l(alen)n(t)2040 2455
y(ML)g(and)g(Ja)n(v)l(a)g(t)n(yp)r(es,)g(for)h(example)e
Fs(Java.toString)p Ft(,)25 b(whic)n(h)c(con-)2040 2538
y(v)n(erts)f(a)h(Ja)n(v)l(a)f Fs(String)i Ft(in)n(to)e(an)g(ML)g
Fs(string)p Ft(.)34 b(With)20 b(one)h(exception)2040
2621 y(\()p Fs(fromWord8)p Ft(\),)j(these)c(all)h(generate)g(no)g
(actual)g(b)n(yteco)r(des,)g(and)f(are)2040 2704 y(included)30
b(just)h(to)g(separate)g(the)f(t)n(w)n(o)h(t)n(yp)r(e)f(systems)g
(securely)h(in)2040 2787 y(the)25 b(source.)2152 2870
y(MLJ)20 b(co)r(de)f(can)g(p)r(erform)f(basic)i(Ja)n(v)l(a)f(op)r
(erations)h(suc)n(h)e(as)i(\014eld)2040 2953 y(access,)38
b(metho)r(d)33 b(in)n(v)n(o)r(cation)i(and)f(ob)t(ject)h(creation)g(b)n
(y)f(using)g(a)2040 3036 y(collection)23 b(of)e(new)h(k)n(eyw)n(ords,)g
(all)g(of)f(whic)n(h)g(start)h(with)f(an)g(under-)2040
3119 y(score)30 b(`)p Fs(_)p Ft(')f(\(whic)n(h)g(\014ts)f(w)n(ell)i
(with)f(the)f(existing)h(lexical)h(structure)2040 3202
y(of)23 b(SML\),)f(and)f(w)n(e)h(also)i(use)e(quotation)f(marks)g(for)i
(Ja)n(v)l(a)f(\014eld)g(and)2040 3285 y(metho)r(d)j(names.)34
b(Th)n(us,)25 b(for)i(example)2079 3427 y Fs(let)40 b(type)g(colour)h
(=)e("java.awt.Color")2236 3510 y(val)h(grey)g(=)g(valOf)g(\(_getfield)
i(colour)e("gray"\))2079 3593 y(in)g(Java.toInt)i(\(_invoke)f("getRed")
g(\(grey\)\))2079 3676 y(end)2040 3817 y Ft(mak)n(es)27
b Fs(colour)i Ft(b)r(e)f(an)g(ML)g(synon)n(ym)d(for)k(the)e(Ja)n(v)l(a)
h(class)h Fs(Color)2040 3900 y Ft(and)k(then)g(gets)h(the)f(static)h
(\014eld)g(called)g Fs(gray)g Ft(from)g(that)f(class.)2040
3983 y(MLJ)k(reads)f(the)g(compiled)f(Ja)n(v)l(a)i(class)g(\014le)f
(whic)n(h)g(states)h(that)2040 4066 y(the)g(\014eld)g(holds)h(an)f
Fh(instanc)l(e)44 b Ft(of)38 b(the)f(class)i Fs(Color)f
Ft(and)f(so)h(in-)2040 4149 y(fers)29 b(the)e(t)n(yp)r(e)g
Fs("java.awt.Color")43 b(option)29 b Ft(for)g(the)f Fs(_getfield)2040
4232 y Ft(construct,)41 b(b)r(ecause)e(it's)f(an)g(external)g(v)l(alue)
g(whic)n(h)g(migh)n(t)f(b)r(e)2040 4315 y Fs(null)p Ft(.)k(W)-6
b(e)28 b(then)f(in)n(v)n(ok)n(e)f(the)i(virtual)f(metho)r(d)g
Fs(getRed\(\))i Ft(on)f(the)2040 4398 y(returned)k(colour)i(v)l(alue)e
(to)h(get)g(the)g(Ja)n(v)l(a)g Fs(int)g Ft(v)l(alue)g(of)h(its)f(red)
2040 4481 y(comp)r(onen)n(t,)d(whic)n(h)f(w)n(e)h(con)n(v)n(ert)e(in)n
(to)i(an)f(ML)h Fs(int)p Ft(.)46 b(The)29 b Fs(valOf)2040
4564 y Ft(is)k(required)e(to)h(remo)n(v)n(e)f(the)g Fs(option)i
Ft(from)f(the)g(t)n(yp)r(e)f(of)h(the)g(re-)2040 4647
y(turned)24 b(v)l(alue)h(\(it)g(raises)i(an)e(exception)g(if)h(its)f
(argumen)n(t)f(is)i Fs(NONE)p Ft(\))2040 4730 y(b)r(ecause)c(MLJ)g(do)r
(es)g(not)f(allo)n(w)i(metho)r(d)d(in)n(v)n(o)r(cation)h(on)g(p)r
(ossibly-)2040 4813 y Fs(null)27 b Ft(Ja)n(v)l(a)f(v)l(alues.)2152
4896 y(The)20 b(new)f(constructs)h(suc)n(h)f(as)h Fs(_getfield)h
Ft(and)e Fs(_invoke)i Ft(ha)n(v)n(e)2040 4979 y(essen)n(tially)28
b(the)d(same)h(static)i(seman)n(tics)e(as)h(their)f(equiv)l(alen)n(ts)g
(in)p 2040 5039 V 2127 5087 a Fl(2)2159 5112 y Fk(Actually)-5
b(,)25 b(v)n(ersion)g(0.1)h(departs)f(from)g(the)g(De\014nition)f(in)h
(four)g(places.)2040 5178 y(The)18 b(only)g(signi\014can)n(t)f(one)h
(is)h(that)f(arithmetic)e(op)r(erations)i(do)g(not)g(raise)g(the)2040
5245 y Fj(Overflow)j Fk(exception.)1921 5494 y Ft(2)p
eop
3 3 bop -152 -106 a Fs(datatype)41 b(Behave)g(=)e(B)h(of)g(unit)g(->)f
(Behave)-152 60 y(_classtype)j(MLButton)f(_extends)g("java.awt.Button")
i({)-112 143 y(_private)e(_field)f("behaviour")i(:)d(Behave)-112
309 y(_public)h(_method)h("action")g(\(e:"java.awt.Event")j(option,)d
(o)e(:)h(Java.Object)h(option\))g(:)f(Java.boolean)h(=)-73
392 y(let)f(val)g(B\(b\))g(=)f(_getfield)i("behaviour")h(_this)-73
475 y(in)d(\(_putfield)j("behaviour")g(\(_this,)f(b)e(\(\)\);)h
(Java.fromBool)i(true\))-73 558 y(end)-112 724 y(_constructor)g(\(name)
e(:)f(string,)i(b:Behave\))398 807 y({_super\(Java.fromString)j
(name\);)d("behaviour")g(=)f(b})-152 890 y(})1194 1056
y Ft(Figure)26 b(1:)35 b(Generating)27 b(a)f(Ja)n(v)l(a)g(class)h(from)
e(MLJ)-152 1380 y(the)i(Ja)n(v)l(a)h(language.)41 b(A)n(t)27
b(a)h(virtual)f(metho)r(d)g(in)n(v)n(o)r(cation,)h(for)h(ex-)-152
1463 y(ample,)38 b(the)d(compiler)g(searc)n(hes)h(up)f(the)g(class)h
(hierarc)n(h)n(y)f(for)h(a)-152 1546 y(metho)r(d)27 b(matc)n(hing)g
(the)g(giv)n(en)h(name)e(and)i(argumen)n(t)e(t)n(yp)r(es,)i(ap-)-152
1629 y(plying)d(the)g(same)f(rules)i(for)g(\014nding)e(the)g(`most)h
(sp)r(eci\014c)h(metho)r(d')-152 1712 y(b)n(y)i(p)r(ossible)i(co)r
(ercions)g(on)e(the)g(argumen)n(ts)g(as)h(Ja)n(v)l(a)g(do)r(es.)44
b(\(ML)-152 1795 y(p)r(olymorphism)26 b(isn't)i(allo)n(w)n(ed)h(to)f
(confuse)g(things)f(further)h(as)g(all)-152 1878 y(uses)c(of)g(these)g
(new)g(constructs)f(m)n(ust)f(b)r(e)i(implicitly)f(or)h(explicitly)-152
1961 y(monomorphic.\))33 b(This)26 b(mak)n(es)f(it)h(easy)g(to)f(con)n
(v)n(ert)g(existing)h(Ja)n(v)l(a)-152 2044 y(programs)21
b(or)h(co)r(de)f(fragmen)n(ts)g(in)n(to)g(MLJ)h(but)e(is)i(not)f(in)n
(tended)f(to)-152 2127 y(mak)n(e)h(MLJ)h(a)g(fully-\015edged)f(ob)t
(ject-orien)n(ted)h(extension)f(of)h(SML;)-152 2210 y(in)i(particular,)
i(inheritance)e(do)r(es)h(not)f(induce)g(an)n(y)f(subt)n(yping)g(re-)
-152 2293 y(lation)k(on)f(ML)g(t)n(yp)r(es.)-40 2376
y(MLJ)34 b(structures)e(can)h(also)g(declare)h(new)e(Ja)n(v)l(a)h
(classes)i(with)-152 2459 y(\014elds)26 b(and)g(metho)r(ds)f(ha)n(ving)
h(a)g(mixture)e(of)j(ML)f(and)g(Ja)n(v)l(a)g(t)n(yp)r(es)-152
2542 y(and)20 b(metho)r(ds)e(implemen)n(ted)g(in)h(ML.)h(In)f(fact,)j
(all)e(programs)g(m)n(ust)-152 2625 y(con)n(tain)27 b(at)g(least)h(one)
f(suc)n(h)f(class)i(for)g(the)e(Ja)n(v)l(a)h(run)n(time)f(system)-152
2708 y(to)20 b(call)g(in)n(to;)i(otherwise)f(no)e(ML)g(co)r(de)h(could)
g(ev)n(er)f(get)g(called.)34 b(The)-152 2791 y(extensions)20
b(for)g(declaring)g(classes)h(can)e(express)g(most)f(of)i(what)g(can)
-152 2874 y(b)r(e)29 b(expressed)g(in)g(the)g(Ja)n(v)l(a)g(language,)j
(including)d(all)h(the)e(access)-152 2957 y(mo)r(di\014ers)36
b(\()p Fs(public)p Ft(,)k Fs(private)p Ft(,)g(etc.\),)f(though)d(there)
g(are)g(some)-152 3040 y(natural)22 b(restrictions,)j(suc)n(h)c(as)h
(that)g(static)g(\014elds)g(of)h(ML)f(t)n(yp)r(e)f(\(or)-152
3123 y(non-)p Fs(option)g Ft(Ja)n(v)l(a)f(reference)h(t)n(yp)r(e\))e(m)
n(ust)g(ha)n(v)n(e)g(initialisers,)24 b(since)-152 3206
y(there)29 b(are)h(no)e(default)i(v)l(alues)f(of)g(those)h(t)n(yp)r
(es,)f(and)g(o)n(v)n(erloading)-152 3289 y(on)22 b(ML)f(t)n(yp)r(es)g
(is)h(forbidden)f(\(as)g(t)n(w)n(o)h(ML)g(t)n(yp)r(es)e(ma)n(y)g(end)h
(up)f(rep-)-152 3372 y(resen)n(ted)27 b(as)g(the)f(same)g(Ja)n(v)l(a)h
(t)n(yp)r(e\).)35 b(Class)29 b(de\014nitions)d(in)g(struc-)-152
3455 y(tures)21 b(are)h(all)f(anon)n(ymous)f(\(there)h(are)g(ML)g(t)n
(yp)r(e)f(names)h(b)r(ound)f(to)-152 3538 y(them,)k(but)f(no)h(Ja)n(v)l
(a)h(class)h(names\))d(so)i(a)g(class)g(that)f(is)h(referenced)-152
3621 y(purely)d(b)n(y)f(ML)i(co)r(de)g(will)g(end)f(up)g(with)g(an)h
(in)n(ternal)f(name)g(in)g(the)-152 3704 y(compiled)34
b(program,)j(and)d(so)h(not)g(b)r(e)f(directly)h(accessible)h(from)-152
3787 y(external)27 b(Ja)n(v)l(a)f(co)r(de.)494 3756 y
Fm(3)566 3787 y Ft(Ho)n(w)n(ev)n(er,)g(as)h(w)n(e'v)n(e)g(already)g
(men)n(tioned,)-152 3870 y(at)h(least)g(one)f(top-lev)n(el)g(class)i
(has)f(to)f(b)r(e)g(exp)r(orted)g(with)g(a)h(giv)n(en)-152
3953 y(Ja)n(v)l(a)37 b(name.)68 b(Since)36 b(exp)r(orted)h(classes)h
(can)f(b)r(e)g(accessed)h(from)-152 4036 y(Ja)n(v)l(a,)27
b(there)f(are)h(some)f(not)g(en)n(tirely)g(trivial)h(further)f
(restrictions)-152 4119 y(concerning)e(the)e(t)n(yp)r(es)g(and)h
(access)h(mo)r(di\014ers)e(of)i(their)e(\014elds)h(and)-152
4202 y(metho)r(ds)g(whic)n(h)g(are)h(necessary)g(to)f(ensure)g(that)g
(an)n(ything)g(whic)n(h)-152 4285 y(is)31 b(visible,)h(either)f
(directly)f(or)g(b)n(y)g(inheritance,)i(to)e(the)g(external)-152
4368 y(Ja)n(v)l(a)24 b(w)n(orld)h(is)f(of)g(Ja)n(v)l(a)g(primitiv)n(e)f
(or)h Fs(option)p Ft(ed)g(Ja)n(v)l(a)g(class)h(t)n(yp)r(e.)-40
4451 y(Just)h(to)f(giv)n(e)h(the)e(\015a)n(v)n(our)h(of)h(ho)n(w)f(Ja)n
(v)l(a)h(classes)h(ma)n(y)d(b)r(e)h(gen-)-152 4534 y(erated)32
b(from)f(MLJ,)i(Figure)f(1)g(sho)n(ws)g(the)f(de\014nition)h(of)g(an)f
(ML)-152 4618 y(button)39 b(class,)44 b(similar)c(to)f(one)h(whic)n(h)f
(migh)n(t)f(form)h(part)g(of)h(a)-152 4701 y(functional)34
b(GUI)e(to)r(olkit.)55 b Fs(MLButton)35 b Ft(sub)r(classes)f(the)e
(standard)-152 4784 y(Ja)n(v)l(a)e Fs(Button)h Ft(class)f(and)f(has)h
(an)f(instance)h(v)l(ariable)g(whic)n(h)f(is)h(of)-152
4867 y(a)k(higher-order)f(ML)h(datat)n(yp)r(e)f Fs(Behave)p
Ft(.)58 b(When)33 b(the)g(button)f(is)-152 4950 y(pressed,)k(its)d
Fs(action)i Ft(metho)r(d)d(is)h(called,)k(whic)n(h)c(causes)h(its)f(b)r
(e-)-152 5033 y(ha)n(viour)d(function)g(to)g(b)r(e)g(called)h
(\(presumably)e(with)h(some)g(side-)p -152 5097 797 4
v -65 5145 a Fl(3)-33 5170 y Fk(Unless)18 b(it)h(uses)f(Ja)n(v)l(a's)h
(in)n(trosp)r(ection)d(capabilities,)h(whic)n(h)h(w)n(e)g(consider)-152
5237 y(to)23 b(b)r(e)e(c)n(heating...)2040 1380 y Ft(e\013ects\),)36
b(returning)c(a)i(new)f(b)r(eha)n(viour)g(whic)n(h)g(is)h(stored)f(in)g
(the)2040 1463 y(instance)c(v)l(ariable)g(ready)f(for)i(the)e(next)f
(clic)n(k.)43 b(The)29 b(constructor)2040 1546 y(\(for)24
b(whic)n(h)g(our)f(syn)n(tax)g(is)h(particularly)g(baro)r(que\))g(is)g
(called)g(with)2040 1629 y(an)30 b(ML)f Fs(string)i Ft(and)e(the)h
(initial)g(b)r(eha)n(viour.)46 b(It)29 b(starts)h(b)n(y)f(call-)2040
1712 y(ing)k(the)e(sup)r(erclass)j(initialiser)g(with)e(a)h(Ja)n(v)l(a)
f Fs(String)i Ft(and)d(then)2040 1795 y(initialises)24
b(the)d(instance)i(v)l(ariable)f(with)g(the)f(supplied)g(b)r(eha)n
(viour.)2040 1990 y Fo(4)89 b(MIL)2040 2147 y Ft(The)30
b(Monadic)h(In)n(termediate)e(Language,)j(MIL,)f(is)f(the)g(heart)g(of)
2040 2230 y(the)25 b(compiler.)34 b(MIL)25 b(is)g(a)g(t)n(yp)r(ed)f
(language,)i(inspired)f(b)n(y)f(Moggi's)2040 2313 y(computational)h
(lam)n(b)r(da)f(calculus)h([15)q(],)h(whic)n(h)e(mak)n(es)g(a)h
(distinc-)2040 2396 y(tion)d(b)r(et)n(w)n(een)g(computations)g(and)g(v)
l(alues)g(in)g(its)g(t)n(yp)r(e)g(system.)32 b(It)2040
2479 y(has)24 b(impredicativ)n(e)e(System-F-st)n(yle)f(p)r(olymorphism)
h(and)h(re\014nes)2040 2563 y(the)h(computation)f(t)n(yp)r(e)g
(constructor)i(to)f(include)g(e\013ect)g(informa-)2040
2646 y(tion.)34 b(MIL)25 b(also)h(includes)e(some)g(sligh)n(tly)h(lo)n
(w)n(er)h(lev)n(el)f(features)g(so)2040 2729 y(that)34
b(most)g(of)h(the)e(optimisations)i(and)f(represen)n(tation)h(c)n
(hoices)2040 2812 y(w)n(e)26 b(wish)g(to)g(mak)n(e)f(can)g(b)r(e)h
(expressed)f(as)i(MIL-to-MIL)e(transfor-)2040 2895 y(mations.)43
b(These)29 b(include)g(not-quite-\014rst-class)f(sequence)g(t)n(yp)r
(es)2040 2978 y(\(used)33 b(for)g(m)n(ultiple)f(argumen)n(t/m)n
(ultiple)g(result)h(functions)g(and)2040 3061 y(\015at)j(datat)n(yp)r
(e)f(constructors\),)j(Ja)n(v)l(a)e(t)n(yp)r(es)f(\(used)h(not)f(just)h
(for)2040 3144 y(in)n(terlanguage)e(w)n(orking,)h(but)c(also)j(to)e
(express)h(represen)n(tations)2040 3227 y(for)24 b(ML)g(t)n(yp)r(es\))f
(and)g(three)g(kinds)g(of)h(function:)33 b(lo)r(cal,)26
b(global)f(and)2040 3310 y(closure.)2152 3393 y(T)n(yp)r(ed)k(in)n
(termediate)g(languages)i(are)g(no)n(w)e(widely)h(accepted)2040
3476 y(to)22 b(b)r(e)f(A)g(Go)r(o)r(d)h(Thing)g([19)q(,)g(22,)g(11)q
(].)33 b(T)n(yp)r(es)22 b(aid)f(analysis)i(and)e(op-)2040
3559 y(timisation,)26 b(pro)n(vide)f(a)g(more)g(secure)h(basis)g(for)g
(correct)g(transfor-)2040 3642 y(mations,)j(and)f(are)h(required)f(in)g
(t)n(yp)r(e-directed)g(transformations)2040 3725 y(suc)n(h)21
b(as)g(compilation)h(of)g(p)r(olymorphic)e(equalit)n(y)-6
b(.)32 b(They)21 b(also)i(help)2040 3808 y(catc)n(h)f(compiler)g(bugs!)
33 b(In)21 b(our)h(case)g(it)g(seems)g(esp)r(ecially)h(natural,)2040
3891 y(as)31 b(the)e(Ja)n(v)l(a)h(b)n(yteco)r(de)g(whic)n(h)g(w)n(e)g
(ev)n(en)n(tually)f(pro)r(duce)h(is)g(itself)2040 3974
y(t)n(yp)r(ed.)2152 4057 y(The)c(use)f(of)h(computational)f(t)n(yp)r
(es)f(in)h(the)g(in)n(termediate)g(lan-)2040 4140 y(guage)d(is)f(more)f
(un)n(usual,)h(though)g(similar)g(systems)f(ha)n(v)n(e)g(recen)n(tly)
2040 4223 y(b)r(een)29 b(prop)r(osed)g(in)g([23)q(,)g(11)q(,)g(24)q(])g
(and)g(the)g(use)g(of)g(a)h(monadic)e(in-)2040 4306 y(termediate)38
b(language)h(to)g(express)f(strictness-based)h(optimisa-)2040
4389 y(tions)30 b(w)n(as)g(prop)r(osed)f(in)g([4)q(].)45
b(The)29 b(separation)h(of)g(computations)2040 4472 y(and)i(v)l(alues)h
(giv)n(es)g(MIL)g(a)g(pleasan)n(t)g(equational)h(theory)e(\(full)h
Fi(\014)2040 4555 y Ft(and)25 b Fi(\021)j Ft(rules)e(plus)f(comm)n
(uting)f(con)n(v)n(ersions\),)i(whic)n(h)f(mak)n(es)f(cor-)2040
4638 y(rect)i(rewriting)i(simpler.)35 b(Order)26 b(of)h(ev)l(aluation)f
(is)h(made)e(explicit)2040 4721 y(\(m)n(uc)n(h)35 b(as)i(it)g(is)g(in)g
(CPS-based)g(in)n(termediate)f(represen)n(tations)2040
4804 y([1)q(]\),)i(and)d(our)g(re\014nemen)n(t)e(of)j(computation)e(t)n
(yp)r(es)h(in)n(to)g(di\013er-)2040 4887 y(en)n(t)21
b(monads)h(giv)n(es)g(a)g(uni\014ed)f(framew)n(ork)h(for)h(e\013ect)f
(analysis)h(and)2040 4970 y(asso)r(ciated)28 b(transformations.)1921
5494 y(3)p eop
4 4 bop 222 -11 a Fi(V)112 b Ft(::=)75 b Fi(x;)13 b(y)s(;)f(f)1861
b Ft(v)l(alue)26 b(v)l(ariables)419 72 y Fr(j)116 b Fi(c)2017
b Ft(constan)n(t)26 b(of)h(base)f(t)n(yp)r(e)419 156
y Fr(j)116 b Ft(\()p Fi(V)631 164 y Fm(1)665 156 y Fi(;)13
b(:)g(:)h(:)25 b(;)14 b(V)894 164 y Fg(n)936 156 y Ft(\))1640
b(tuple)419 253 y Fr(j)116 b Ff(in)614 261 y Fg(i)646
234 y Fi(~)640 253 y(V)1921 b Ft(injection)27 b(in)n(to)f(sum)419
350 y Fr(j)116 b Ff(in)614 358 y Fg(\037)662 331 y Fi(~)656
350 y(V)1905 b Ft(injection)27 b(in)n(to)f(exception)419
442 y Fr(j)116 b Ft(\003)604 428 y Fi(~)609 442 y(t:V)1903
b Ft(t)n(yp)r(e)25 b(abstraction)419 525 y Fr(j)116 b
Fi(V)600 535 y Fg(~)-31 b(\034)2606 525 y Ft(t)n(yp)r(e)25
b(application)419 608 y Fr(j)116 b Ff(fold)676 616 y
Fg(\034)732 608 y Fi(V)1829 b Ft(recursiv)n(e)26 b(t)n(yp)r(e)f(in)n
(tro)r(duction)419 691 y Fr(j)116 b Ff(unfold)16 b Fi(V)1789
b Ft(recursiv)n(e)26 b(t)n(yp)r(e)f(elimination)419 774
y Fr(j)116 b Fi(\031)600 782 y Fg(i)626 774 y Fi(V)1935
b Ft(pro)t(jection)222 955 y Fi(M)83 b Ft(::=)75 b Ff(val)670
936 y Fi(~)664 955 y(V)1897 b Ft(trivial)27 b(computation)419
1038 y Fr(j)116 b Ff(let)15 b Fi(~)-37 b(x)8 b Fr(\()h
Fi(M)865 1046 y Fm(1)916 1038 y Ff(in)16 b Fi(M)1065
1046 y Fm(2)2606 1038 y Ft(ev)l(aluation)419 1135 y Fr(j)116
b Fi(V)641 1116 y(~)635 1135 y(V)1926 b Ft(function)26
b(application)419 1218 y Fr(j)116 b Ff(ref)18 b Fi(V)1904
b Ft(reference)27 b(creation)419 1301 y Fr(j)116 b Ft(!)p
Fi(V)1984 b Ft(dereferencing)419 1384 y Fr(j)116 b Fi(V)601
1392 y Fm(1)657 1384 y Ft(:=)21 b Fi(V)804 1392 y Fm(2)2606
1384 y Ft(assignmen)n(t)419 1467 y Fr(j)116 b Ff(raise)17
b Fi(V)1843 b Ft(thro)n(w)26 b(an)g(exception)419 1550
y Fr(j)116 b Ff(try)16 b Fi(~)-37 b(x)21 b Fr(\()g Fi(M)899
1558 y Fm(1)951 1550 y Ff(handle)16 b Fi(y)23 b Fr(\))f
Fi(M)1411 1558 y Fm(3)1462 1550 y Ff(in)16 b Fi(M)1611
1558 y Fm(2)2606 1550 y Ft(ev)l(aluate)26 b(and)g(catc)n(h)419
1633 y Fr(j)116 b Ff(case)18 b Fi(V)34 b Ff(of)17 b(in)923
1641 y Fm(1)957 1633 y Fi(~)-37 b(x)1002 1641 y Fm(1)1057
1633 y Fr(\))22 b Fi(M)1230 1641 y Fm(1)1264 1633 y Ft(;)14
b Fi(:)f(:)g(:)26 b Ft(;)13 b Ff(in)1506 1641 y Fg(n)1547
1633 y Fi(~)-37 b(x)1592 1641 y Fg(n)1656 1633 y Fr(\))21
b Fi(M)1828 1641 y Fg(n)2606 1633 y Ft(case)27 b(on)f(sum)419
1716 y Fr(j)116 b Ff(case)18 b Fi(V)34 b Ff(of)17 b(in)923
1724 y Fg(\037)961 1734 y Fl(1)997 1716 y Fi(~)-37 b(x)1042
1724 y Fm(1)1098 1716 y Fr(\))21 b Fi(M)1270 1724 y Fm(1)1305
1716 y Ft(;)13 b Fi(:)g(:)g(:)26 b Ft(;)13 b Ff(in)1546
1724 y Fg(\037)1584 1732 y Fe(n)1628 1716 y Fi(~)-37
b(x)1673 1724 y Fg(n)1736 1716 y Fr(\))22 b Fi(M)1909
1724 y Fg(n)1951 1716 y Ft(;)p 1990 1716 24 4 v 62 w
Fr(\))g Fi(M)399 b Ft(case)27 b(on)f(exception)419 1799
y Fr(j)116 b Ff(case)18 b Fi(V)34 b Ff(of)17 b Fi(c)898
1807 y Fm(1)955 1799 y Fr(\))k Fi(M)1127 1807 y Fm(1)1162
1799 y Ft(;)13 b Fi(:)g(:)g(:)26 b Ft(;)13 b Fi(c)1378
1807 y Fg(n)1442 1799 y Fr(\))21 b Fi(M)1614 1807 y Fg(n)1657
1799 y Ft(;)p 1696 1799 V 62 w Fr(\))g Fi(M)694 b Ft(case)27
b(on)f(base)g(t)n(yp)r(e)419 1891 y Fr(j)116 b Ff(let)16
b Ft(\003)701 1877 y Fi(~)706 1891 y(t)h(f)788 1899 y
Fm(1)823 1891 y Ft(\()o Fi(~)-37 b(x)897 1899 y Fm(1)952
1891 y Ft(:)21 b Fi(~)-37 b(\034)1029 1899 y Fm(1)1064
1891 y Ft(\))21 b(=)g Fi(M)1270 1899 y Fm(1)1326 1891
y Ft(:)h Fi(\015)1409 1899 y Fm(1)1443 1891 y Ft(;)13
b Fi(:)g(:)g(:)26 b Ft(;)13 b Fi(f)1663 1899 y Fg(n)1706
1891 y Ft(\()o Fi(~)-37 b(x)1780 1899 y Fg(n)1843 1891
y Ft(:)20 b Fi(~)-36 b(\034)1920 1899 y Fg(n)1962 1891
y Ft(\))21 b(=)g Fi(M)2168 1899 y Fg(n)2232 1891 y Ft(:)h
Fi(\015)2315 1899 y Fg(n)2374 1891 y Ff(in)16 b Fi(M)83
b Ft(\(recursiv)n(e\))26 b(function)g(declaration)1538
2133 y(Figure)g(3:)35 b(T)-6 b(erms)25 b(in)h(MIL)-114
2438 y Fi(\034)84 b Ft(::=)75 b Ff(int)16 b Fr(j)i Ff(cha)n(r)e
Fr(j)31 b Fi(:)13 b(:)g(:)658 b Ft(base)26 b(t)n(yp)r(es)45
2521 y Fr(j)115 b Fi(\034)215 2529 y Fm(1)267 2521 y
Fr(\002)17 b(\001)c(\001)g(\001)k(\002)g Fi(\034)561
2529 y Fg(n)1273 2521 y Ft(pro)r(duct)45 2604 y Fr(j)114
b Fi(~)-37 b(\034)215 2612 y Fm(1)267 2604 y Ft(+)17
b Fr(\001)c(\001)g(\001)k Ft(+)f Fi(~)-37 b(\034)561
2612 y Fg(n)1273 2604 y Ft(sum)45 2687 y Fr(j)114 b Fi(~)-37
b(\034)30 b Fr(!)21 b Fi(\015)890 b Ft(function)26 b(t)n(yp)r(e)45
2770 y Fr(j)115 b Fi(\034)26 b Ff(ref)949 b Ft(reference)27
b(t)n(yp)r(e)45 2853 y Fr(j)115 b Ff(exn)983 b Ft(exception)45
2946 y Fr(j)115 b(8)219 2932 y Fi(~)224 2946 y(t:\034)966
b Ft(p)r(olymorphic)25 b(t)n(yp)r(e)45 3029 y Fr(j)115
b Fi(\026t:\034)963 b Ft(recursiv)n(e)26 b(t)n(yp)r(e)-116
3112 y Fi(~)-36 b(\034)84 b Ft(::=)75 b Fr(h)p Fi(\034)245
3120 y Fm(1)280 3112 y Fi(;)13 b(:)g(:)g(:)26 b(;)13
b(\034)497 3120 y Fg(n)539 3112 y Fr(i)704 b Ft(v)n(ector)26
b(of)g(t)n(yp)r(es)-114 3195 y Fi(\015)78 b Ft(::=)d
Fo(T)243 3203 y Fg(")276 3195 y Ft(\()n Fi(~)-36 b(\034)9
b Ft(\))894 b(computation)25 b(t)n(yp)r(e)-114 3278 y
Fi(")104 b Fr(\022)95 b(f?)p Fi(;)13 b Ff(thro)n(ws)p
Fi(;)h Ff(reads)p Fi(;)f Ff(writes)p Fi(;)h Ff(allo)r(cs)o
Fr(g)75 b Ft(e\013ects)444 3520 y(Figure)27 b(2:)34 b(T)n(yp)r(es)26
b(in)g(MIL)-152 3767 y Fo(4.1)89 b(T)n(yp)r(es)28 b(and)i(terms)-152
3898 y Ft(T)n(yp)r(es)e(in)f(MIL)g(are)h(divided)e(in)n(to)h
Fh(value)34 b Ft(t)n(yp)r(es)26 b(\(ranged)i(o)n(v)n(er)f(b)n(y)-152
3981 y Fi(\034)9 b Ft(\))31 b(and)g Fh(c)l(omputation)39
b Ft(t)n(yp)r(es)31 b(\(ranged)g(o)n(v)n(er)h(b)n(y)e
Fi(\015)t Ft(\))h(as)h(sho)n(wn)g(in)-152 4064 y(Figure)f(2.)154
4032 y Fm(4)237 4064 y Ft(V)-6 b(alue)30 b(t)n(yp)r(es)f(include)h
(base)h(t)n(yp)r(es)f(\()p Ff(int)p Ft(,)g Ff(cha)n(r)p
Ft(,)h Fh(etc.)p Ft(\),)-152 4147 y(pro)r(ducts,)36 b(function)f(t)n
(yp)r(es)e(with)h(m)n(ultiple)f(argumen)n(ts)g(and)h(re-)-152
4230 y(sults,)d(sum)d(t)n(yp)r(es)h(with)g(m)n(ultiple)g(argumen)n(t)f
(summands,)g(refer-)-152 4313 y(ence)23 b(t)n(yp)r(es,)f(p)r
(olymorphic)g(t)n(yp)r(es)f(and)h(recursiv)n(e)g(t)n(yp)r(es.)33
b(Compu-)-152 4396 y(tation)24 b(t)n(yp)r(es)f(ha)n(v)n(e)g(the)h(form)
f Fo(T)820 4404 y Fg(")853 4396 y Ft(\()n Fi(~)-36 b(\034)8
b Ft(\),)24 b(indicating)h(a)e(computation)-152 4479
y(with)37 b(result)g(t)n(yp)r(es)e Fi(~)-36 b(\034)45
b Ft(and)36 b(e\013ect)h Fi(")p Ft(.)67 b(The)37 b(subset)g(relation)h
(on)-152 4562 y(e\013ects)c(induces)e(a)i(subt)n(yping)e(relation)i(on)
f(t)n(yp)r(es)f(in)h(an)g(unsur-)-152 4645 y(prising)j(w)n(a)n(y)-6
b(.)61 b(Note)34 b(that)g(b)r(ecause)i(w)n(e)f(are)g(only)f(in)n
(terested)h(in)-152 4728 y(compiling)25 b(a)f(call-b)n(y-v)l(alue)g
(language,)i(w)n(e)f(ha)n(v)n(e)f(restricted)g(func-)-152
4811 y(tion)i(t)n(yp)r(es)f(to)h(b)r(e)g(from)f(v)l(alues)h(to)g
(computations.)-40 4894 y(T)-6 b(erms)17 b(are)h(also)g(divided)f(in)n
(to)g(v)l(alues)h(\(ranged)f(o)n(v)n(er)g(b)n(y)f Fi(V)h
Ft(\))g(and)p -152 4959 797 4 v -65 5007 a Fl(4)-33 5032
y Fk(Some)29 b(simpli\014cations)f(ha)n(v)n(e)i(b)r(een)e(made)h(for)h
(this)f(presen)n(tation.)51 b(In)-152 5098 y(particular)33
b(the)g(implemen)n(tation)e(has)j Fd(mutual)39 b Fk(recursion)32
b(o)n(v)n(er)i(m)n(ultiple)-152 5165 y(t)n(yp)r(es;)20
b(also,)h(lo)n(w)n(er-lev)n(el)f(features)f(that)h(capture)f(Ja)n(v)l
(a)i(represen)n(tations)d(are)-152 5231 y(omitted.)2040
2380 y Ft(computations)k(\(ranged)h(o)n(v)n(er)f(b)n(y)g
Fi(M)8 b Ft(\))22 b(as)h(sho)n(wn)g(in)f(Figure)i(3.)33
b(All)2040 2463 y(ev)l(aluation)26 b(happ)r(ens)f(in)h
Ff(let)f Ft(or)h Ff(try)p Ft(.)35 b(The)26 b(`Moggi)h(let')g(construct)
2764 2609 y Ff(let)15 b Fi(~)-37 b(x)9 b Fr(\()g Fi(M)3074
2617 y Fm(1)3125 2609 y Ff(in)16 b Fi(M)3274 2617 y Fm(2)2040
2755 y Ft(ev)l(aluates)26 b(the)e(computation)h(term)f
Fi(M)3207 2763 y Fm(1)3266 2755 y Ft(and)h(binds)f(the)h(result)g(to)
2040 2838 y Fi(x)g Ft(in)h(the)f(scop)r(e)h(of)h(the)e(computation)g
(term)g Fi(M)3464 2846 y Fm(2)3499 2838 y Ft(.)34 b(The)26
b(construct)2491 2984 y Ff(try)17 b Fi(~)-37 b(x)20 b
Fr(\()i Fi(M)2835 2992 y Fm(1)2886 2984 y Ff(handle)16
b Fi(y)24 b Fr(\))d Fi(M)3346 2992 y Fm(3)3398 2984 y
Ff(in)16 b Fi(M)3547 2992 y Fm(2)2040 3130 y Ft(generalises)28
b(this)d(b)n(y)f(pro)n(viding)h(a)h(handler)f Fi(M)3432
3138 y Fm(3)3492 3130 y Ft(in)g(whic)n(h)g(the)g(ex-)2040
3213 y(ception)i(raised)g(b)n(y)f Fi(M)2715 3221 y Fm(1)2776
3213 y Ft(is)i(b)r(ound)d(to)i(a)g(v)l(ariable)g Fi(y)i
Ft(and)e(the)f(con-)2040 3296 y(tin)n(uation)c Fi(M)2441
3304 y Fm(3)2498 3296 y Ft(is)h(not)f(ev)l(aluated.)33
b(\(It)21 b(is)i(in)n(teresting)f(to)h(note)f(that)2040
3379 y(this)g(construct)g(cannot)g(b)r(e)g(de\014ned)f(using)h
Ff(let)f Ft(and)h(the)f(more)h(con-)2040 3462 y(v)n(en)n(tional)27
b Fi(M)2446 3470 y Fm(1)2498 3462 y Ff(handle)17 b Fi(y)25
b Fr(\))e Fi(M)2962 3470 y Fm(2)3024 3462 y Ft(without)k(recourse)g(to)
g(a)g(v)l(alue)g(of)2040 3557 y(sum)f(t)n(yp)r(e\).)38
b(The)27 b(construct)g Ff(val)3054 3538 y Fi(~)3048 3557
y(V)44 b Ft(allo)n(ws)29 b(a)e(v)l(alue)g(\(or)g(m)n(ultiple)2040
3640 y(v)l(alues\))f(to)g(b)r(e)f(treated)h(as)g(a)g(trivial)h
(computation.)2040 3825 y Fo(4.2)88 b(T)-7 b(ranslation)31
b(from)f(SML)2040 3957 y Ft(The)21 b(initial)h(translation)g(from)e(t)n
(yp)r(ed)g(SML)h(to)f(MIL)h(is)g(essen)n(tially)2040
4040 y(Moggi's)i(call-b)n(y-v)l(alue)c(translation)i([15)q(].)33
b(F)-6 b(or)20 b(example,)h(a)f(source)2040 4123 y(application)27
b Fh(exp)2547 4131 y Fm(1)2598 4123 y Fh(exp)2708 4131
y Fm(2)2769 4123 y Ft(translates)f(to)2552 4269 y Ff(let)16
b Fi(x)9 b Fr(\()g Fi(M)2862 4277 y Fm(1)2912 4269 y
Ff(in)16 b(let)h Fi(y)11 b Fr(\()e Fi(M)3294 4277 y Fm(2)3345
4269 y Ff(in)16 b Fi(x)g(y)2040 4415 y Ft(where)k Fi(M)2330
4423 y Fm(1)2384 4415 y Ft(and)f Fi(M)2601 4423 y Fm(2)2655
4415 y Ft(are)g(the)g(translations)i(of)f Fh(exp)3506
4423 y Fm(1)3560 4415 y Ft(and)f Fh(exp)3812 4423 y Fm(2)3847
4415 y Ft(.)32 b(The)2040 4498 y(translation)g(also)g(expands)f(out)f
(certain)i(features)g(of)f(the)g(source)2040 4581 y(language)36
b(that)e(are)i(not)e(presen)n(t)g(in)h(the)f(target:)54
b(patterns)34 b(are)2040 4664 y(compiled)39 b(in)n(to)f(\015at)h
Ff(case)g Ft(constructs,)k(records)d(are)f(translated)2040
4747 y(as)f(ordinary)g(tuples)g(\(with)g(\014elds)f(sorted)i(b)n(y)d
(lab)r(el\))j(and)e(ev)n(en)2040 4830 y(the)27 b Fs(structure)i
Ft(constructs)f(of)g(the)f(SML)h(mo)r(dule)e(language)j(are)2040
4913 y(compiled)35 b(in)n(to)f(ordinary)h(tuples)g(of)h(v)l(alues.)62
b(The)35 b(latter)g(relies)2040 4996 y(on)26 b(the)g(impredicativ)n(e)g
(p)r(olymorphism)f(in)h(MIL.)h(An)e(alternativ)n(e)2040
5079 y(\(see)i([20)q(]\))g(w)n(ould)g(b)r(e)g(to)g(stratify)g(the)f(in)
n(termediate)h(language)h(in)2040 5162 y(a)37 b(similar)h(w)n(a)n(y)e
(to)h(the)g(strati\014cation)h(of)f(SML)g(in)n(to)g(co)r(de)g(and)2040
5245 y(mo)r(dule)25 b(lev)n(els.)1921 5494 y(4)p eop
5 5 bop -40 -69 a Ft(Uses)22 b(of)g(p)r(olymorphic)f(equalit)n(y)g(are)
h(also)h(compiled)e(a)n(w)n(a)n(y)-6 b(,)22 b(us-)-152
14 y(ing)e(a)f(simple)g(dictionary-passing)h(st)n(yle.)32
b(One)18 b(migh)n(t)g(exp)r(ect)h(that)-152 97 y(equalit)n(y)33
b(w)n(ould)g(b)r(e)f(an)h(ideal)g(candidate)g(for)h(exploiting)f(Ja)n
(v)l(a's)-152 180 y(virtual)j(metho)r(ds,)h(o)n(v)n(erriding)e(the)g
Fs(equals)i Ft(metho)r(d)d(in)h(classes)-152 263 y(represen)n(ting)28
b(ML)g(t)n(yp)r(es.)41 b(But)27 b(that)h(w)n(ould)g(prev)n(en)n(t)e(us)
i(sharing)-152 346 y(represen)n(tations)39 b(b)r(et)n(w)n(een)e(ML)h(t)
n(yp)r(es)f(with)h(di\013eren)n(t)f(equalit)n(y)-152
429 y(functions,)27 b(so)f(do)r(esn't)g(seem)f(w)n(orth)h(doing.)-152
625 y Fo(5)89 b(T)-7 b(ransformations)-152 782 y Ft(Most)18
b(of)g(the)f(compiler's)h(time)f(is)g(sp)r(en)n(t)g(applying)g(a)h(set)
f(of)h(MIL-to-)-152 865 y(MIL)g(transformations)h(to)f(the)f(term)g
(represen)n(ting)h(the)f(whole)i(pro-)-152 948 y(gram.)49
b(Some)29 b(of)i(these)g(are)g(considered)f(to)h(b)r(e)f(general-purp)r
(ose)-152 1031 y(`simpli\014cation')21 b(steps,)h(and)d(are)h(applied)g
(at)g(sev)n(eral)h(stages)g(of)f(the)-152 1114 y(compilation,)25
b(whilst)f(others)g(p)r(erform)f(sp)r(eci\014c)g(transformations,)-152
1197 y(suc)n(h)j(as)g(arit)n(y-raising)g(functions.)-40
1280 y(Most)43 b(of)f(the)f(transformations)i(are)f(`ob)n(viously')g
(meaning-)-152 1363 y(preserving)34 b(rewrites)490 1332
y Fm(5)526 1363 y Ft(,)h(but)d(the)h(tric)n(ky)f(part)h(is)h(deciding)f
(when)-152 1446 y(they)28 b(should)h(b)r(e)f(applied.)44
b(A)n(t)28 b(the)g(momen)n(t,)g(most)g(of)i(these)e(de-)-152
1529 y(cisions)33 b(are)e(tak)n(en)f(on)h(the)g(basis)h(of)f(some)g
(simple)g(rules,)i(rather)-152 1612 y(than)h(as)h(the)f(result)g(of)h
(an)n(y)e(sophisticated)j(analysis.)61 b(Some)33 b(of)-152
1695 y(these)c(rules)h(are)f(t)n(yp)r(e-directed)f(whereas)i(others)f
(in)n(v)n(olv)n(e)f(simple)-152 1778 y(prop)r(erties)23
b(of)h(terms,)e(suc)n(h)g(as)h(the)f(size)h(of)g(a)g(subterm)e(or)i(n)n
(um)n(b)r(er)-152 1861 y(of)f(o)r(ccurrences)g(of)f(a)g(v)l(ariable.)34
b(The)21 b(e\013ect)g(inference)g(is)h(curren)n(tly)-152
1944 y(rather)i(naiv)n(e,)h(particularly)g(with)f(regard)h(to)f
(recursiv)n(e)g(functions)-152 2027 y(and)30 b(datat)n(yp)r(es,)i(so)f
(there)f(are)h(a)g(v)n(ery)f(small)g(n)n(um)n(b)r(er)f(of)i(places)-152
2110 y(in)24 b(the)g(basis)h(where)f(w)n(e)h(ha)n(v)n(e)e(annotated)h
(computations)g(as)g(pure)-152 2193 y(so)j(that)e(they)g(ma)n(y)g(b)r
(e)g(dead-co)r(ded)h(in)f(programs)h(in)g(whic)n(h)g(they)-152
2277 y(are)h(not)e(referenced.)-152 2464 y Fo(5.1)89
b(Simpli\014cation)-152 2595 y Ft(The)33 b(most)g(basic)h(of)f(the)g
(transformations)h(are)f(essen)n(tially)i(just)-152 2678
y(the)d(`pure')h Fi(\014)j Ft(and)c Fi(\021)k Ft(reductions)c(and)g
(the)g(comm)n(uting)f(con)n(v)n(er-)-152 2761 y(sions)38
b(one)g(obtains)f(from)g(the)g(pro)r(of)h(theory)f(of)g(the)g(computa-)
-152 2844 y(tional)h(lam)n(b)r(da)e(calculus)h([5)q(],)j(adapted)c(so)i
(that)e(large)i(or)f(allo-)-152 2927 y(cating)i(terms)f(are)h(not)f
(duplicated)h(\(see)f(Figure)h(4\).)73 b(The)39 b(re-)-152
3010 y(ductions)33 b(are)g(gen)n(uine)f(simpli\014cations)h(whilst)g
(the)g(comm)n(uting)-152 3093 y(con)n(v)n(ersions)e(are)f
(reorganisations)i(whic)n(h)e(tend)f(to)h(`exp)r(ose')h(fur-)-152
3177 y(ther)k(reductions.)65 b(MLJ)36 b(applies)g(the)f(comm)n(uting)f
(con)n(v)n(ersions)-152 3260 y(exhaustiv)n(ely)28 b(to)h(obtain)g(a)g
(CC-normal)g(form)g(from)g(whic)n(h)f(co)r(de)-152 3343
y(generation)33 b(is)g(particularly)f(straigh)n(tforw)n(ard.)55
b(Doing)32 b(this)g(sort)-152 3426 y(of)25 b(hea)n(vy)d(rewriting)j(on)
f(a)g(large)g(term)f(can)h(b)r(e)f(exp)r(ensiv)n(e,)h(partic-)-152
3509 y(ularly)30 b(when)g(it)g(is)g(done)g(functionally)g(as)h(the)e
(heap)g(turno)n(v)n(er)g(is)-152 3592 y(then)23 b(v)n(ery)f(high.)34
b(Our)22 b(curren)n(t)h(simpli\014er)g(uses)g(a)h(quasi-one-pass)-152
3675 y(algorithm)37 b(similar)f(to)h(that)f(describ)r(ed)g(b)n(y)f(App)
r(el)g(and)h(Jim)g(in)-152 3758 y([2)q(]:)d(it)23 b(main)n(tains)f(an)g
(en)n(vironmen)n(t)f(of)i(v)l(ariable)g(bindings,)h(a)e(cen-)-152
3841 y(sus)k(to)f(coun)n(t)g(v)l(ariable)g(o)r(ccurrences)i(and)d(a)i
(stac)n(k)f(of)h(`ev)l(aluation)-152 3924 y(con)n(texts')19
b(to)f(p)r(erform)h(comm)n(uting)d(con)n(v)n(ersions)j(e\016cien)n(tly)
-6 b(.)32 b(This)-152 4007 y(algorithm)d(is)g(sev)n(eral)g(times)f
(faster)h(than)f(our)g(\014rst)g(v)n(ersion,)i(but)-152
4090 y(simplication)35 b(still)f(ends)g(up)e(b)r(eing)i(the)g(most)f
(exp)r(ensiv)n(e)g(phase)-152 4173 y(b)r(ecause)d(it)g(is)g(rep)r
(eated)g(at)g(sev)n(eral)g(stages)h(during)e(compilation)-152
4256 y({)i(the)g(total)h(time)e(sp)r(en)n(t)g(in)h(the)f(simpli\014er)h
(is)g(t)n(ypically)g(around)-152 4339 y(half)c(the)e(recompile)h(time.)
-40 4422 y(The)j(v)l(alidit)n(y)g(of)g(certain)h(rewrites)g(dep)r(ends)
e(on)h(e\013ect)f(infor-)-152 4505 y(mation)g(in)h(the)f(t)n(yp)r(es.)
42 b(Some)27 b(of)j(these)e(are)h(sho)n(wn)g(in)f(Figure)h(5.)-152
4775 y Fo(5.2)89 b(P)n(olymorphism)-152 4907 y Ft(Most)22
b(implemen)n(tations)e(of)i(SML)f(compile)g(parametric)g(p)r(olymor-)
-152 4990 y(phism)29 b(b)n(y)f Fh(b)l(oxing)p Ft(,)j(that)e(is,)i(b)n
(y)e(ensuring)g(that)g(v)l(alues)h(of)g(t)n(yp)r(e)e
Fi(t)p -152 5050 797 4 v -65 5098 a Fl(5)-33 5123 y Fk(Not)c(that)f(w)n
(e're)g(claiming)f(to)i(ha)n(v)n(e)f(justi\014ed)f(them)g(formally)h
(with)g(re-)-152 5190 y(sp)r(ect)e(to)i(a)f(seman)n(tics)g(for)g(the)f
(full)g(language!)2089 431 y Fh(c)l(ase-b)l(eta)j Ft(:)2165
528 y Ff(case)18 b(in)2375 536 y Fg(i)2407 509 y Fi(~)2401
528 y(V)34 b Ff(of)18 b(in)2617 536 y Fm(1)2651 528 y
Fi(~)-37 b(x)2696 536 y Fm(1)2751 528 y Fr(\))21 b Fi(M)2923
536 y Fm(1)2958 528 y Ft(;)35 b Fr(\001)13 b(\001)g(\001)26
b Ft(;)34 b Ff(in)3242 536 y Fg(n)3284 528 y Fi(~)-37
b(x)3329 536 y Fg(n)3392 528 y Fr(\))21 b Fi(M)3564 536
y Fg(n)2089 625 y Fc(;)g Ff(let)15 b Fi(~)-37 b(x)2328
633 y Fg(i)2362 625 y Fr(\()9 b Ff(val)2561 606 y Fi(~)2555
625 y(V)34 b Ff(in)16 b Fi(M)2783 633 y Fg(i)2089 791
y Fh(let-eta)23 b Ft(:)2165 874 y Ff(let)16 b Fi(~)-37
b(x)8 b Fr(\()h Fi(M)24 b Ff(in)16 b(val)g Fi(~)-37 b(x)2089
957 y Fc(;)21 b Fi(M)2089 1123 y Fh(let-let-c)l(c)i Ft(:)2165
1206 y Ff(let)16 b Fi(~)-37 b(x)2307 1214 y Fm(1)2349
1206 y Fr(\()9 b Ft(\()p Ff(let)15 b Fi(~)-37 b(x)2606
1214 y Fm(2)2648 1206 y Fr(\()9 b Fi(M)2808 1214 y Fm(1)2860
1206 y Ff(in)16 b Fi(M)3009 1214 y Fm(2)3043 1206 y Ft(\))h
Ff(in)f Fi(M)3239 1214 y Fm(3)2089 1289 y Fc(;)21 b Ff(let)15
b Fi(~)-37 b(x)2328 1297 y Fm(2)2371 1289 y Fr(\()9 b
Fi(M)2531 1297 y Fm(1)2582 1289 y Ff(in)16 b(let)f Fi(~)-37
b(x)2798 1297 y Fm(2)2841 1289 y Fr(\()9 b Fi(M)3001
1297 y Fm(2)3052 1289 y Ff(in)16 b Fi(M)3201 1297 y Fm(3)2089
1455 y Fh(let-c)l(ase-c)l(c)24 b Ft(:)2165 1538 y Ff(let)16
b Fi(~)-37 b(y)11 b Fr(\()e Ff(case)17 b Fi(V)34 b Ff(of)22
b(in)2769 1546 y Fm(1)2802 1538 y Fi(~)-37 b(x)2847 1546
y Fm(1)2903 1538 y Fr(\))21 b Fi(M)3075 1546 y Fm(1)3131
1538 y Ft(;)35 b Fr(\001)13 b(\001)g(\001)34 b Ft(;)h
Ff(in)3424 1546 y Fg(n)3465 1538 y Fi(~)-37 b(x)3510
1546 y Fg(n)3574 1538 y Fr(\))21 b Fi(M)3746 1546 y Fg(n)3827
1538 y Ff(in)16 b Fi(M)2089 1621 y Fc(;)21 b Ff(let)16
b Fi(f)8 b Ft(\()p Fi(~)-38 b(y)s Ft(\))21 b(=)g Fi(M)k
Ff(in)2242 1704 y(case)18 b Fi(V)34 b Ff(of)2319 1787
y(in)2377 1795 y Fm(1)2411 1787 y Fi(~)-37 b(x)2456 1795
y Fm(1)2511 1787 y Fr(\))21 b Ff(let)16 b Fi(~)-38 b(y)11
b Fr(\()e Fi(M)2915 1795 y Fm(1)2967 1787 y Ff(in)16
b Fi(f)25 b(~)-38 b(y)24 b Ft(;)34 b Fr(\001)14 b(\001)f(\001)34
b Ft(;)2319 1871 y Ff(in)2377 1879 y Fg(n)2418 1871 y
Fi(~)-37 b(x)2463 1879 y Fg(n)2527 1871 y Fr(\))21 b
Ff(let)16 b Fi(~)-38 b(y)11 b Fr(\()e Fi(M)2931 1879
y Fg(n)2990 1871 y Ff(in)16 b Fi(f)25 b(~)-37 b(y)2373
2113 y Ft(Figure)26 b(4:)35 b(Some)25 b(pro)r(of-theoretic)i(rewrites)
2085 3218 y Fh(de)l(ad-let)c Ft(:)2162 3301 y Ff(let)15
b Fi(~)-37 b(x)8 b Fr(\()h Fi(M)2471 3309 y Fm(1)2522
3301 y Ff(in)16 b Fi(M)2671 3309 y Fm(2)2085 3384 y Fc(;)21
b Fi(M)2257 3392 y Fm(2)2085 3467 y Ft(if)k Fi(~)-37
b(x)26 b Ft(not)f(free)i(in)e Fi(M)2672 3475 y Fm(2)2732
3467 y Ft(and)h Fi(M)2956 3475 y Fm(1)3012 3467 y Ft(:)c
Fo(T)3117 3475 y Fg(")3149 3467 y Ft(\()n Fi(~)-36 b(\034)9
b Ft(\))25 b(for)i Fi(")21 b Fr(\022)g(f)p Ff(allo)r(cs)p
Fi(;)13 b Ff(reads)p Fr(g)2085 3633 y Fh(de)l(ad-try)24
b Ft(:)2162 3716 y Ff(try)16 b Fi(~)-37 b(x)21 b Fr(\()g
Fi(M)2505 3724 y Fm(1)2557 3716 y Ff(handle)16 b Fi(y)23
b Fr(\))f Fi(M)3017 3724 y Fm(2)3068 3716 y Ff(in)16
b Fi(M)3217 3724 y Fm(3)2085 3799 y Fc(;)21 b Ff(let)15
b Fi(~)-37 b(x)9 b Fr(\()g Fi(M)2493 3807 y Fm(1)2544
3799 y Ff(in)16 b Fi(M)2693 3807 y Fm(3)2085 3882 y Ft(if)26
b Fi(M)2229 3890 y Fm(1)2286 3882 y Ft(:)21 b Fo(T)2390
3890 y Fg(")2423 3882 y Ft(\()n Fi(~)-36 b(\034)8 b Ft(\))26
b(where)g Ff(thro)n(ws)31 b Fi(=)-47 b Fr(2)22 b Fi(")2085
4048 y Fh(hoist-let)h Ft(:)2162 4131 y Ff(let)16 b Fi(~)-38
b(y)11 b Fr(\()e Fi(M)25 b Ff(in)33 b(case)18 b Fi(V)34
b Ff(of)17 b(in)2952 4139 y Fm(1)2986 4131 y Fi(~)-37
b(x)3031 4139 y Fm(1)3086 4131 y Fr(\))22 b Fi(M)3259
4139 y Fm(1)3293 4131 y Ft(;)35 b Fr(\001)13 b(\001)g(\001)26
b Ft(;)35 b Ff(in)3578 4139 y Fg(n)3619 4131 y Fi(~)-37
b(x)3664 4139 y Fg(n)3727 4131 y Fr(\))21 b Fi(M)3899
4139 y Fg(n)2085 4214 y Fc(;)g Ff(case)d Fi(V)34 b Ff(of)2239
4297 y(in)2297 4305 y Fm(1)2330 4297 y Fi(~)-37 b(x)2375
4305 y Fm(1)2431 4297 y Fr(\))21 b Fi(M)2603 4305 y Fm(1)2659
4297 y Ft(;)34 b Fr(\001)14 b(\001)f(\001)34 b Ft(;)2239
4380 y Ff(in)2297 4388 y Fg(i)2322 4380 y Fi(~)-37 b(x)2367
4388 y Fg(i)2414 4380 y Fr(\))21 b Ff(let)16 b Fi(~)-37
b(y)11 b Fr(\()e Fi(M)24 b Ff(in)16 b Fi(M)2992 4388
y Fg(i)3040 4380 y Ft(;)35 b Fr(\001)13 b(\001)g(\001)34
b Ft(;)2239 4463 y Ff(in)2297 4471 y Fg(n)2338 4463 y
Fi(~)-37 b(x)2383 4471 y Fg(n)2446 4463 y Fr(\))22 b
Fi(M)2619 4471 y Fg(n)2085 4546 y Ft(if)k Fi(~)-38 b(y)29
b Ft(free)d(only)f(in)h Fi(M)2701 4554 y Fg(i)2753 4546
y Ft(and)g Fi(M)j Ft(:)22 b Fo(T)3111 4554 y Fg(")3144
4546 y Ft(\()n Fi(~)-36 b(\034)8 b Ft(\))25 b(for)i Fi(")21
b Fr(\022)g(f)p Ff(allo)r(cs)p Fi(;)13 b Ff(reads)p Fr(g)2085
4789 y Ft(Figure)26 b(5:)35 b(Some)25 b(rewrites)i(dep)r(enden)n(t)d
(on)i(e\013ect)f(information)1921 5494 y(5)p eop
6 6 bop -152 -69 a Ft(inside)32 b(a)g(v)l(alue)g(of)g(t)n(yp)r(e)f
Fr(8)p Fi(t:\034)40 b Ft(are)32 b(represen)n(ted)g(uniformly)f(b)n(y)f
(a)-152 14 y(p)r(oin)n(ter)c(\(they)g(are)g(`b)r(o)n(xed'\).)36
b(In)25 b(Ja)n(v)l(a,)i(the)f(natural)g(w)n(a)n(y)g(to)g(b)r(o)n(x)-152
97 y(ob)t(jects)38 b(is)f(b)n(y)e(a)h(free)h(cast)g(to)g
Fs(Object)p Ft(,)j(and)c(the)g(natural)h(w)n(a)n(y)-152
180 y(to)32 b(b)r(o)n(x)g(primitiv)n(e)f(t)n(yp)r(es)g(is)i(to)f
(create)g(a)h(heap-allo)r(cated)g(wrap-)-152 263 y(p)r(er)24
b(ob)t(ject)g(and)f(cast)h(that)f(to)h Fs(Object)p Ft(.)35
b(Un)n(b)r(o)n(xing)22 b(then)h(in)n(v)n(olv)n(es)-152
346 y(using)33 b(Ja)n(v)l(a's)f Fs(checkcast)i Ft(b)n(yteco)r(de)e(to)g
(cast)g(bac)n(k)g(do)n(wn)g(again)-152 429 y(and)27 b(in)g(the)g(case)h
(of)g(primitiv)n(e)f(t)n(yp)r(es,)g(extracting)g(a)h(\014eld.)39
b(Done)-152 512 y(naiv)n(ely)-6 b(,)24 b(this)g(kind)f(of)i(b)r(o)n
(xing)f(can)g(b)r(e)g(extremely)e(ine\016cien)n(t)i(and)-152
596 y(there)35 b(are)h(a)f(n)n(um)n(b)r(er)e(of)j(pap)r(ers)g(whic)n(h)
f(address)g(the)g(question)-152 679 y(of)d(ho)n(w)e(to)h(place)g(the)f
(co)r(ercions)i(to)e(reduce)h(the)f(cost)h(of)g(b)r(o)n(xing)-152
762 y(\()p Fh(e.g.)p Ft([13)q(,)26 b(9]\).)35 b(F)-6
b(or)26 b(an)g(early)g(v)n(ersion)g(of)h(our)f(compiler)g(w)n(e)g
(imple-)-152 845 y(men)n(ted)g(a)i(recen)n(t)f(and)g(mo)r(derately)g
(sophisticated)i(graph-based)-152 928 y(algorithm)d(for)h(co)r(ercion)g
(placemen)n(t)e([12)q(].)-40 1011 y(Whilst)g(the)e(graph-based)h
(algorithm)h(w)n(ork)n(ed)f(fairly)h(w)n(ell,)g(w)n(e)-152
1094 y(ha)n(v)n(e)19 b(more)g(recen)n(tly)h(tak)n(en)f(a)h(more)f
(radical)i(and)e(straigh)n(tforw)n(ard)-152 1177 y(approac)n(h:)33
b(remo)n(ving)20 b(p)r(olymorphism)g(en)n(tirely)-6 b(.)32
b(This)22 b(is)g(p)r(ossible)-152 1260 y(\014rstly)d(b)r(ecause)h(w)n
(e)g(ha)n(v)n(e)f(the)g(whole)h(program)g(to)f(w)n(ork)h(with,)h(and)
-152 1343 y(secondly)29 b(b)r(ecause)g(it)g(is)g(a)g(prop)r(ert)n(y)f
(of)h(Standard)f(ML)h(that)f(the)-152 1426 y(\014nite)j(n)n(um)n(b)r
(er)f(of)i(t)n(yp)r(es)f(at)h(whic)n(h)f(a)h(p)r(olymorphic)f(function)
g(is)-152 1509 y(used)d(can)g(b)r(e)g(determined)f(statically)-6
b(.)43 b(In)27 b(languages)j(with)e(p)r(oly-)-152 1592
y(morphic)i(recursion)h(\(suc)n(h)f(as)h(recen)n(t)g(v)n(ersions)g(of)g
(Hask)n(ell\))g(this)-152 1675 y(prop)r(ert)n(y)k(do)r(es)g(not)g
(hold:)53 b(the)35 b(t)n(yp)r(es)f(at)i(whic)n(h)f(a)g(function)g(is)
-152 1758 y(used)26 b(ma)n(y)e(not)i(b)r(e)f(kno)n(wn)g(un)n(til)h
(run-time.)-40 1841 y(Eac)n(h)36 b(p)r(olymorphic)e(function)h(is)g(sp)
r(ecialised)i(to)e(pro)r(duce)f(a)-152 1924 y(separate)c(v)n(ersion)e
(for)h(eac)n(h)g(t)n(yp)r(e)e(instance)i(at)g(whic)n(h)f(it)h(is)g
(used.)-152 2007 y(In)g(the)f(w)n(orst)i(case,)h(this)e(can)g(pro)r
(duce)g(an)g(exp)r(onen)n(tial)g(blo)n(wup)-152 2090
y(in)35 b(co)r(de)h(size,)i(but)c(our)h(exp)r(erience)g(is)h(that)e
(this)h(do)r(es)h(not)f(ac-)-152 2173 y(tually)e(happ)r(en)f(in)g
(practice.)56 b(Three)33 b(reasons)g(can)g(b)r(e)f(cited)h(for)-152
2256 y(this.)55 b(First,)35 b(w)n(e)d(sp)r(ecialise)j(not)d(with)g
(resp)r(ect)h(to)f(source)h(t)n(yp)r(es)-152 2339 y(but)22
b(with)h(resp)r(ect)h(to)f(the)f(\014nal)h(Ja)n(v)l(a)g(represen)n
(tations,)i(for)f(whic)n(h)-152 2422 y(m)n(uc)n(h)31
b(sharing)i(of)h(t)n(yp)r(es)e(o)r(ccurs.)56 b(F)-6 b(or)32
b(example,)i(supp)r(ose)f(that)-152 2505 y(the)c Fs(filter)i
Ft(function)e(is)g(used)g(on)g(lists)i(con)n(taining)e(elemen)n(ts)g
(of)-152 2588 y(t)n(w)n(o)34 b(di\013eren)n(t)f(datat)n(yp)r(es,)j(b)r
(oth)d(of)h(whic)n(h)g(are)g(represen)n(ted)f(b)n(y)-152
2671 y(the)27 b(`univ)n(ersal)h(sum')f(class)i(discussed)f(in)f
(Section)h(6.)41 b(Then)27 b(only)-152 2754 y(one)f(v)n(ersion)g(of)33
b Fs(filter)27 b Ft(is)g(required.)980 2722 y Fm(6)1049
2754 y Ft(Second,)f(b)r(o)n(xing)f(and)h(un-)-152 2837
y(b)r(o)n(xing)c(co)r(ercions)g(in)n(tro)r(duce)g(a)f(certain)h(amoun)n
(t)e(of)i(co)r(de)g(blo)n(wup)-152 2920 y(of)29 b(their)f(o)n(wn)g(and)
f(this)h(is)h(a)n(v)n(oided.)40 b(Third,)29 b(p)r(olymorphic)e(func-)
-152 3003 y(tions)34 b(tend)f(to)h(b)r(e)f(small,)j(so)e(the)f(cost)h
(of)g(duplicating)g(them)e(is)-152 3086 y(often)37 b(not)e(great.)66
b(Indeed,)38 b(not)d(only)h(are)g(man)n(y)f(p)r(olymorphic)-152
3169 y(functions)c(inlined)g(a)n(w)n(a)n(y)g(prior)h(to)f
(monomorphising,)g(but)f Fh(after)-152 3252 y Ft(monomorphising)36
b(it)g(is)h(often)f(the)g(case)h(that)f(a)g(particular)h(in-)-152
3335 y(stance)32 b(of)g(a)f(function)g(is)h(used)e(only)h(once)g(and)g
(is)h(consequen)n(tly)-152 3418 y(inlined)26 b(and)f(sub)t(ject)h(to)g
(further)g(simpli\014cation.)-152 3605 y Fo(5.3)89 b(Arit)n(y)30
b(raising)-152 3737 y Ft(Heap)18 b(allo)r(cation)j(is)e(exp)r(ensiv)n
(e.)31 b(W)-6 b(e)18 b(try)g(to)g(a)n(v)n(oid)h(creating)g(tuples)-152
3820 y(and)36 b(closures)i(b)n(y)d(replacing)i(curried)g(functions)f
(and)g(functions)-152 3903 y(accepting)29 b(tuples)e(with)h(functions)g
(taking)f(m)n(ultiple)g(argumen)n(ts,)-152 3986 y(and)32
b(to)g(\015atten)g(sums-of-pro)r(ducts)f(datat)n(yp)r(es)h(b)n(y)f
(using)h(m)n(ulti-)-152 4069 y(ple)i(argumen)n(t)f(constructors.)59
b(W)-6 b(e)33 b(also)i(remo)n(v)n(e)d(the)i(t)n(yp)r(e)e
Ff(unit)-152 4152 y Ft(\(n)n(ullary)38 b(pro)r(duct\))g(en)n(tirely)-6
b(.)72 b(These)39 b(transformations)h(should)-152 4235
y(ideally)24 b(b)r(e)f(driv)n(en)f(b)n(y)h(information)g(ab)r(out)g(ho)
n(w)h(v)l(alues)f(are)h(used,)-152 4318 y(but)34 b(w)n(e)i(\014nd)e
(that)g(fairly)i(simple-minded)d(application)j(of)g(t)n(yp)r(e)-152
4401 y(isomorphisms)26 b(suc)n(h)f(as)h(the)f(follo)n(wing)174
4554 y Fi(\034)208 4562 y Fm(1)259 4554 y Fr(\002)17
b Fi(\034)370 4562 y Fm(2)426 4554 y Fr(!)k Fi(\015)826
4534 y Fr(\030)826 4558 y Ft(=)960 4554 y Fr(h)p Fi(\034)1024
4562 y Fm(1)1058 4554 y Fi(;)13 b(\034)1126 4562 y Fm(2)1161
4554 y Fr(i)21 b(!)g Fi(\015)174 4637 y(\034)208 4645
y Fm(1)264 4637 y Fr(!)g Fo(T)424 4649 y Fb(;)459 4637
y Ft(\()p Fi(\034)523 4645 y Fm(2)579 4637 y Fr(!)g Fi(\015)t
Ft(\))826 4617 y Fr(\030)826 4641 y Ft(=)960 4637 y Fr(h)p
Fi(\034)1024 4645 y Fm(1)1058 4637 y Fi(;)13 b(\034)1126
4645 y Fm(2)1161 4637 y Fr(i)21 b(!)g Fi(\015)174 4720
y(\034)208 4728 y Fm(1)259 4720 y Fr(\002)c Fi(\034)370
4728 y Fm(2)422 4720 y Ft(+)g Fi(\034)533 4728 y Fm(3)584
4720 y Fr(\002)g Fi(\034)695 4728 y Fm(4)826 4701 y Fr(\030)826
4724 y Ft(=)960 4720 y Fr(h)p Fi(\034)1024 4728 y Fm(1)1058
4720 y Fi(;)c(\034)1126 4728 y Fm(2)1161 4720 y Fr(i)k
Ft(+)g Fr(h)p Fi(\034)1349 4728 y Fm(3)1383 4720 y Fi(;)c(\034)1451
4728 y Fm(4)1485 4720 y Fr(i)174 4803 y Fi(\034)25 b
Fr(\002)17 b Ff(unit)826 4784 y Fr(\030)826 4807 y Ft(=)960
4803 y Fi(\034)174 4886 y Ff(unit)j Fr(!)h Fi(\015)826
4867 y Fr(\030)826 4890 y Ft(=)960 4886 y Fr(hi)g(!)g
Fi(\015)174 4969 y Fo(T)236 4977 y Fg(")269 4969 y Fr(h)p
Ff(unit)n Fr(i)826 4950 y(\030)826 4973 y Ft(=)960 4969
y Fo(T)1022 4977 y Fg(")1055 4969 y Fr(hi)p -152 5039
797 4 v -65 5087 a Fl(6)-33 5112 y Fk(This)h(can)f(itself)g(b)r(e)f
(regarded)g(as)i(a)g(kind)f(of)g(b)r(o)n(xing,)g(since)f(w)n(e're)h
(using)-152 5178 y(uniform)f(\(shared\))g(represen)n(tations)f(for)i
(certain)e(ML)i(t)n(yp)r(es,)g(but)f(note)g(that)-152
5245 y(w)n(e)j(nev)n(er)e(b)r(o)n(x)h(primitiv)n(e)e(t)n(yp)r(es.)2789
-11 y
 tx@Dict begin tx@NodeDict begin {5.49998 2.0 28.34967 14.17484 1.74998
} false /N@O 16 {InitRnode } NewNode end end
 2789 -11 a Fs(Object)2394 309 y
 tx@Dict begin tx@NodeDict begin {6.14998 0.99998 10.07248 5.03624
2.575 } false /N@P1 16 {InitRnode } NewNode end end
 2394 309 a Fi(P)2443
317 y Fm(1)2490 309 y Fr(\001)14 b(\001)f(\001)2593 309
y
 tx@Dict begin tx@NodeDict begin {6.14998 0.99998 11.0239 5.51195 2.575
} false /N@Pn 16 {InitRnode } NewNode end end
 2593 309 a Fi(P)2642 317 y Fg(n)3120 309 y
 tx@Dict begin tx@NodeDict begin {5.49998 2.0 42.5245 21.26225 1.74998
} false /N@Ex 16 {InitRnode } NewNode end end
 3120 309
a Fs(Exception)3627 309 y
 tx@Dict begin tx@NodeDict begin {6.14998 0.0 7.24287 3.62143 3.07498
} false /N@G 16 {InitRnode } NewNode end end
 3627 309 a Fi(G)2509 628 y
 tx@Dict begin tx@NodeDict begin {6.14998 0.0 7.19092 3.59546 3.07498
} false /N@F 16 {InitRnode } NewNode end end

2509 628 a Fi(F)2881 628 y
 tx@Dict begin tx@NodeDict begin {6.14998 0.0 6.16245 3.08122 3.07498
} false /N@S 16 {InitRnode } NewNode end end
 2881 628 a Fi(S)3373 628 y
 tx@Dict begin tx@NodeDict begin {6.14998 0.0 7.31938 3.65968 3.07498
} false /N@E 16 {InitRnode } NewNode end end

3373 628 a Fi(E)2386 947 y
 tx@Dict begin tx@NodeDict begin {6.14998 0.99998 10.07281 5.0364 2.575
} false /N@F1 16 {InitRnode } NewNode end end
 2386 947 a Fi(F)2435 955 y
Fm(1)2482 947 y Fr(\001)g(\001)h(\001)2585 947 y
 tx@Dict begin tx@NodeDict begin {6.14998 0.99998 12.96867 6.48433
2.575 } false /N@Fn 16 {InitRnode } NewNode end end
 2585
947 a Fi(F)2634 955 y Fg(m)2767 947 y
 tx@Dict begin tx@NodeDict begin {6.14998 0.99998 9.81726 4.90863 2.575
} false /N@S1 16 {InitRnode } NewNode end end
 2767 947 a Fi(S)2814
955 y Fm(1)2861 947 y Fr(\001)g(\001)f(\001)2964 947
y
 tx@Dict begin tx@NodeDict begin {6.14998 0.99998 9.82423 4.91211 2.575
} false /N@Sn 16 {InitRnode } NewNode end end
 2964 947 a Fi(S)3011 955 y Fg(r)3255 947 y
 tx@Dict begin tx@NodeDict begin {6.14998 0.99998 10.97351 5.48676
2.575 } false /N@E1 16 {InitRnode } NewNode end end
 3255 947
a Fi(E)3312 955 y Fm(1)3359 947 y Fr(\001)g(\001)h(\001)3462
947 y
 tx@Dict begin tx@NodeDict begin {6.14998 0.99998 10.81384 5.40692
2.575 } false /N@En 16 {InitRnode } NewNode end end
 3462 947 a Fi(E)3519 955 y Fg(s)3799 470 y
 tx@Dict begin gsave STV newpath 0.5 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@O /N@F InitNC { NCLine  } if end gsave 0.5 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 3799
470 a 3799 470 a
 tx@Dict begin gsave STV newpath 0.5 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@O /N@S InitNC { NCLine  } if end gsave 0.5 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 3799 470 a 3799 470 a
 tx@Dict begin gsave STV newpath 0.5 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@O /N@P1 InitNC { NCLine  } if end gsave 0.5 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 3799 470 a 3799
470 a
 tx@Dict begin gsave STV newpath 0.5 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@O /N@Pn InitNC { NCLine  } if end gsave 0.5 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 3799 470 a 3799 470 a
 tx@Dict begin gsave STV newpath 0.5 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@O /N@G InitNC { NCLine  } if end gsave 0.5 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 3799 470 a 3799 470 a
 tx@Dict begin gsave STV newpath 0.5 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@S /N@S1 InitNC { NCLine  } if end gsave 0.5 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 3799
470 a 3799 470 a
 tx@Dict begin gsave STV newpath 0.5 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@S /N@Sn InitNC { NCLine  } if end gsave 0.5 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 3799 470 a 3799 470 a
 tx@Dict begin gsave STV newpath 0.5 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@F /N@F1 InitNC { NCLine  } if end gsave 0.5 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 3799 470 a 3799
470 a
 tx@Dict begin gsave STV newpath 0.5 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@F /N@Fn InitNC { NCLine  } if end gsave 0.5 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 3799 470 a 3799 470 a
 tx@Dict begin gsave STV newpath 0.5 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@O /N@Ex InitNC { NCLine  } if end gsave 0.5 SLW 0. setgray
3.0 0 0 add DotLine  grestore  grestore end
 3799 470 a 3799 470 a
 tx@Dict begin gsave STV newpath 0.5 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@Ex /N@E InitNC { NCLine  } if end gsave 0.5 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 3799
470 a 3799 470 a
 tx@Dict begin gsave STV newpath 0.5 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@E /N@E1 InitNC { NCLine  } if end gsave 0.5 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 3799 470 a 3799 470 a
 tx@Dict begin gsave STV newpath 0.5 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 3.0
3.0 0 0 /N@E /N@En InitNC { NCLine  } if end gsave 0.5 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 3799 470 a 2266
1190 a Ft(Figure)27 b(6:)35 b(Ja)n(v)l(a)26 b(classes)h(represen)n
(ting)f(MIL)g(t)n(yp)r(es)2040 1437 y(com)n(bined)39
b(with)h(the)f(other)h(rewrites,)45 b(pro)r(duces)40
b(a)g(signi\014can)n(t)2040 1520 y(impro)n(v)n(emen)n(t)31
b(in)j(most)f(programs.)59 b(F)-6 b(or)34 b(example,)h(the)f(Bo)n(y)n
(er-)2040 1603 y(Mo)r(ore)19 b(b)r(enc)n(hmark)d(runs)h(in)h(4)g
(seconds)g(with)g(all)g(optimisation)g(en-)2040 1686
y(abled)j(but)f(tak)n(es)h(6)g(seconds)h(when)e(tuple-argumen)n(t)f
(arit)n(y)i(raising)2040 1769 y(is)28 b(turned)f(o\013.)41
b(W)-6 b(orse,)29 b(it)e(crashes)i(with)f(a)g(stac)n(k)g(o)n(v)n
(er\015o)n(w)g(when)2040 1852 y(de-currying)f(is)h(also)h(disabled)g(b)
r(ecause)f(MLJ)g(is)h(then)e(unable)g(to)2040 1935 y(use)f(a)g
Fs(goto)g Ft(instruction)g(in)g(place)g(of)g(a)g(tail)h(call.)2152
2018 y(Observ)n(e)k(that)g(de-currying)f(dep)r(ends)h(up)r(on)f
(e\013ect)i(informa-)2040 2101 y(tion)i(in)g(the)f(t)n(yp)r(es)g
(\(including)h(termination\),)i(for)e(otherwise)h(it)2040
2184 y(w)n(ould)26 b(b)r(e)g(unsound.)2040 2380 y Fo(6)89
b(Data)29 b(represen)n(tation)2040 2537 y(6.1)88 b(ML)30
b(base)f(t)n(yp)r(es)2040 2668 y Ft(Most)39 b(ML)f(base)h(t)n(yp)r(es)e
(ha)n(v)n(e)g(close)j(Ja)n(v)l(a)e(equiv)l(alen)n(ts,)j(so)d(ML)2040
2751 y Fs(int)p Ft(s)h(are)g(represen)n(ted)f(b)n(y)g(Ja)n(v)l(a)g
Fs(int)p Ft(s,)43 b(and)38 b(ML)h Fs(string)p Ft(s)h(are)2040
2834 y(represen)n(ted)32 b(as)i(Ja)n(v)l(a)f Fs(String)p
Ft(s.)57 b(There)33 b(are)g(a)g(couple)g(of)g(small)2040
2917 y(di\013erences)19 b(in)f(the)g(seman)n(tics)h(of)g(these)f(t)n
(yp)r(es)g(or)h(their)f(op)r(erations)2040 3000 y(whic)n(h)j(ha)n(v)n
(e)g(led)g(us)g(to)h(div)n(erge)f(from)g(the)g(ML)g(de\014nition:)32
b(in)n(teger)2040 3083 y(arithmetic)24 b(do)r(es)h(not)g(raise)g
Fs(Overflow)i Ft(and)d(for)h(us)f(the)h Fs(Char)g Ft(and)2040
3166 y Fs(String)20 b Ft(structures)f(are)g(the)f(same)g(as)i
Fs(WideChar)g Ft(and)e Fs(WideString)2040 3249 y Ft(since)26
b(Ja)n(v)l(a)g(is)g(based)g(on)g(Unico)r(de.)2040 3437
y Fo(6.2)88 b(Pro)r(ducts)2040 3568 y Ft(Eac)n(h)25 b(distinct)h(pro)r
(duct)e(t)n(yp)r(e)h Fi(\034)3002 3576 y Fg(i)3049 3568
y Fr(\021)c Fi(\034)3164 3576 y Fm(1)3215 3568 y Fr(\002)15
b(\001)f(\001)f(\001)j(\002)g Fi(\034)3506 3576 y Fg(n)3573
3568 y Ft(is)26 b(represen)n(ted)2040 3651 y(b)n(y)20
b(a)h(di\013eren)n(t)g(class)h Fi(P)2724 3659 y Fg(i)2771
3651 y Ft(whose)g(\014elds)f(ha)n(v)n(e)f(t)n(yp)r(es)g
Fi(\034)3589 3659 y Fm(1)3624 3651 y Fi(;)13 b(:)g(:)g(:)26
b(;)13 b(\034)3841 3659 y Fg(n)3904 3651 y Ft(\(see)2040
3734 y(the)22 b(class)h(hierarc)n(h)n(y)f(in)g(Figure)h(6\).)33
b(Because)24 b(w)n(e)e(monomorphise,)2040 3817 y(represen)n(tations)g
(can)g(b)r(e)f(shared)g(b)n(y)g(`sorting')h(the)f(\014elds)h(b)n(y)e(t)
n(yp)r(e,)2040 3900 y(for)26 b(example)e(using)i(the)e(same)h(class)i
(for)f(the)e(t)n(yp)r(e)h Ff(int)14 b Fr(\002)i Ff(string)25
b Ft(as)2040 3983 y(for)18 b Ff(string)q Fr(\002)q Ff(int)n
Ft(,)h(but)e(the)g(curren)n(t)g(v)n(ersion)g(of)i(the)e(compiler)g(do)r
(esn't)2040 4066 y(do)26 b(this)g(y)n(et.)2040 4254 y
Fo(6.3)88 b(Sums)2040 4385 y Ft(The)20 b(natural)g(`ob)t(ject-orien)n
(ted')i(view)e(of)h(a)f(sum)f(t)n(yp)r(e)g Fi(\034)3691
4393 y Fm(1)3731 4385 y Ft(+)6 b Fr(\001)12 b(\001)h(\001)6
b Ft(+)g Fi(\034)3991 4393 y Fg(n)2040 4468 y Ft(is)30
b(to)f(represen)n(t)g(the)f Fi(n)i Ft(summands)d(as)i
Fi(n)h Ft(sub)r(classes)g(of)g(a)f(single)2040 4551 y(class)i(and)e
(then)g(to)g(use)h(metho)r(d)e(lo)r(okup)i(in)f(place)h(of)36
b Ff(case)p Ft(.)46 b(F)-6 b(or)2040 4634 y(example,)22
b(one)h(w)n(ould)f(represen)n(t)g(lists)i(b)n(y)d(a)h(class)i
Fs(List)f Ft(with)f(sub-)2040 4717 y(classes)34 b Fs(Nil)g
Ft(\(with)e(no)h(\014elds\))f(and)g Fs(Cons)i Ft(\(with)e(a)h(\014eld)g
(for)g(the)2040 4800 y(head)e(and)g(a)g(\014eld)g(for)h(the)f(tail\).)
51 b(The)32 b Fs(length)g Ft(function)f(w)n(ould)2040
4883 y(compile)g(to)h(a)g(metho)r(d)e(whose)i(implemen)n(tation)e(in)h
Fs(Nil)h Ft(simply)2040 4966 y(returns)25 b(zero)h(and)f(whose)h
(implemen)n(tation)e(in)h Fs(Cons)h Ft(returns)f(the)2040
5049 y(successor)i(of)g(the)e(result)h(of)g(in)n(v)n(oking)f(the)h
(metho)r(d)e(on)i(the)f(tail.)2152 5132 y(Whilst)f(this)f(tec)n(hnique)
f(is)h(elegan)n(t,)i(it)e(is)h(not)f(necessarily)h(e\016-)2040
5215 y(cien)n(t.)36 b(T)n(ypical)27 b(functional)g(co)r(de)g(w)n(ould)g
(generate)g(a)f(large)i(n)n(um-)1921 5494 y(6)p eop
7 7 bop -152 -69 a Ft(b)r(er)34 b(of)h(small)f(metho)r(ds;)k(moreo)n(v)
n(er)c(it)g(is)g(necessary)h(to)f(pass)h(in)-152 14 y(free)27
b(v)l(ariables)g(of)g(the)e(b)r(o)r(dies)i(of)33 b Ff(case)27
b Ft(constructs)f(as)h(argumen)n(ts)-152 97 y(to)f(the)f(metho)r(ds.)
-40 180 y(If)i(the)f(JVM)h(had)g(a)g Fs(classcase)h Ft(b)n(yteco)r(de)e
(then)g(it)h(w)n(ould)g(b)r(e)-152 263 y(p)r(ossible)h(to)e(use)g(this)
g(instead)h(of)f(metho)r(d)f(in)n(v)n(o)r(cation.)37
b(Unfortu-)-152 346 y(nately)24 b(it)g(do)r(es)h(not:)33
b(one)25 b(m)n(ust)d(c)n(hec)n(k)h(the)h(classes)i(one)e(at)g(a)g(time)
-152 429 y(\(using)i Fs(instanceof)p Ft(\))h(and)d(then)f(cast)i(do)n
(wn)g(\(using)h Fs(checkcast)p Ft(\).)-40 512 y(A)g(v)l(ariation)h(on)f
(this)h(idea)g(is)g(to)f(store)h(an)f(in)n(teger)h(tag)g(in)f(the)-152
596 y(sup)r(erclass)i(and)e(to)g(implemen)n(t)e Ff(case)j
Ft(constructs)g(as)f(a)h(switc)n(h)g(on)-152 679 y(the)22
b(tag)h(follo)n(w)n(ed)h(b)n(y)d(a)i(cast)g(do)n(wn)f(to)h(the)f
(appropriate)g(sub)r(class.)-152 762 y(W)-6 b(e)25 b(tak)n(e)g(this)g
(a)h(stage)g(further,)f(using)h(a)f(single)h(sup)r(erclass)h
Fi(S)i Ft(for)-152 845 y(all)e(sum)d(t)n(yp)r(es)h(with)g(a)h(sub)r
(class)g Fi(S)902 853 y Fg(i)954 845 y Ft(for)g(eac)n(h)g
Fh(typ)l(e)32 b Ft(of)26 b(summand.)-152 928 y(This)h(reduces)g(the)e
(n)n(um)n(b)r(er)g(of)i(classes)h(required)d(for)j(summands;)-152
1011 y(moreo)n(v)n(er,)36 b(b)r(ecause)f(only)f(a)g(single)h(class)g
(is)g(used)f(to)g(represen)n(t)-152 1094 y(most)h(sum)f(t)n(yp)r(es)h
(o)r(ccurring)i(in)e(the)g(source)h(program,)i(further)-152
1177 y(sharing)31 b(of)f(represen)n(tations)h(is)f(obtained)g(in)g(t)n
(yp)r(es)f(constructed)-152 1260 y(from)d(sum)e(t)n(yp)r(es.)-40
1343 y(This)32 b(`univ)n(ersal)g(sum')e(sc)n(heme)h(is)h(used)f(in)g
(general,)j(but)c(for)-152 1426 y(t)n(w)n(o)37 b(sp)r(ecial)g(cases)g
(w)n(e)f(use)g(more)g(e\016cien)n(t)g(represen)n(tations)g(as)-152
1509 y(describ)r(ed)26 b(b)r(elo)n(w.)-66 1652 y Fr(\017)42
b Ft(En)n(umeration)30 b(t)n(yp)r(es:)42 b(for)31 b(datat)n(yp)r(es)f
(whose)h(constructors)14 1735 y(are)c(all)f(n)n(ullary)g(w)n(e)g(use)f
(the)h(primitiv)n(e)e(in)n(teger)j(t)n(yp)r(e.)-66 1877
y Fr(\017)42 b Ft(`1+')36 b(t)n(yp)r(es:)53 b(In)34 b(Ja)n(v)l(a,)k(v)l
(ariables)e(of)g Fh(r)l(efer)l(enc)l(e)43 b Ft(t)n(yp)r(e)34
b(con-)14 1960 y(tain)f(either)f(a)h(v)l(alid)f(reference)h(to)f(an)h
(ob)t(ject)g(or)f(arra)n(y)-6 b(,)34 b(or)14 2043 y(the)d(v)l(alue)f
Fs(null)p Ft(.)51 b(W)-6 b(e)30 b(mak)n(e)g(use)h(of)g(this)g(for)g(t)n
(yp)r(es)g(of)g(the)14 2126 y(form)24 b Fr(hi)13 b Ft(+)g
Fi(\034)32 b Ft(where)24 b Fi(\034)32 b Ft(can)24 b(itself)i(b)r(e)d
(represen)n(ted)h(b)n(y)e(a)j(non-)14 2209 y(n)n(ull)32
b(class)i(or)e(arra)n(y)g(t)n(yp)r(e.)53 b(F)-6 b(or)32
b(example,)h(the)f(SML)g(t)n(yp)r(e)14 2292 y Fs(\(int*int\))42
b(option)20 b Ft(is)g(implemen)n(ted)d(using)j(the)e(same)h(class)14
2376 y(as)h(w)n(ould)g(b)r(e)f(used)f(for)i Fs(int*int)p
Ft(,)j(with)c Fs(NONE)h Ft(represen)n(ted)f(b)n(y)14
2459 y Fs(null)p Ft(.)52 b(The)31 b(t)n(yp)r(e)f Fs(int)40
b(list)32 b Ft(is)g(implemen)n(ted)c(b)n(y)i(a)i(single)14
2542 y(pro)r(duct)27 b(class)h(with)f(\014elds)f(for)i(the)e(head)h
(\(an)f(in)n(teger\))h(and)14 2625 y(tail)g(\(the)e(class)i(itself)6
b(\))27 b(with)f Fs(nil)g Ft(represen)n(ted)f(b)n(y)h
Fs(null)p Ft(.)14 2737 y(If)34 b Fi(\034)42 b Ft(is)35
b(primitiv)n(e)e(then)g(a)h(pro)r(duct)f(class)i(is)g(used)e(to)h
(\014rst)14 2821 y(`wrap')h(the)e(primitiv)n(e)f(v)l(alue.)57
b(What)33 b(if)h Fi(\034)42 b Ft(is)33 b(itself)i(of)f(the)14
2904 y(form)h Fr(hi)23 b Ft(+)g Fi(\034)414 2872 y Fb(0)436
2904 y Ft(?)62 b(Then)35 b(w)n(e)g(create)g(an)g(additional)h(dumm)n(y)
14 2987 y(v)l(alue)31 b(of)h(appropriate)g(class)g(t)n(yp)r(e)e(to)h
(represen)n(t)g(the)g(extra)14 3070 y(v)l(alue)h(in)g(the)g(t)n(yp)r
(e.)52 b(F)-6 b(or)32 b(example,)h(a)g(v)l(alue)e Fs(SOME)40
b(x)33 b Ft(with)14 3153 y(the)e(SML)g(t)n(yp)r(e)g Fs(int)40
b(list)g(option)32 b Ft(is)g(represen)n(ted)f(in)g(the)14
3236 y(same)25 b(w)n(a)n(y)h(as)f(w)n(ould)h(b)r(e)f
Fs(x)g Ft(of)h(t)n(yp)r(e)f Fs(int)39 b(list)p Ft(,)27
b(but)d Fs(NONE)i Ft(is)14 3319 y(an)j(extra)h(v)l(alue)e(created)i
(and)f(stored)g(in)g(a)h(global)g(v)l(ariable)14 3402
y(when)c(the)f(class)i(is)f(initialised.)-152 3589 y
Fo(6.4)89 b(Reference)29 b(t)n(yp)r(es)-152 3721 y Ft(In)f(general)h(a)
g(reference)g(t)n(yp)r(e)e Fi(\034)g Ff(ref)i Ft(is)g(simply)e
(represen)n(ted)h(b)n(y)f(a)-152 3804 y(unary)22 b(pro)r(duct)f(class.)
35 b(F)-6 b(or)22 b(references)h(created)g(at)f(top-lev)n(el)g(\()p
Fh(i.e.)-152 3887 y Ft(not)31 b(inside)g(functions\))f(that)h(are)g
(not)f(used)g(in)h(a)f(\014rst-class)i(w)n(a)n(y)-152
3970 y(\(assigned)22 b(to)f(and)g(dereferenced)g(but)f(not)h(compared)f
(for)i(equalit)n(y)-152 4053 y(or)c(passed)f(around\),)i(w)n(e)f(use)f
(static)h(\014elds)f(in)g(a)h(distinguished)f(class)-152
4136 y Fi(G)p Ft(,)31 b(in)f(other)f(w)n(ords,)j(global)f(v)l
(ariables.)47 b(In)29 b(the)g(future)h(w)n(e)g(hop)r(e)-152
4219 y(to)23 b(p)r(erform)f(escap)r(e)i(analysis)g(in)e(order)h(to)g
(use)f(lo)r(cal)j(v)l(ariables)e(for)-152 4302 y(reference)k(t)n(yp)r
(es)e(where)h(p)r(ossible.)-152 4489 y Fo(6.5)89 b(Exceptions)-152
4621 y Ft(In)31 b(SML)h(the)f(t)n(yp)r(e)f Fs(exn)i Ft(has)g(a)g(sp)r
(ecial)h(status)f(in)f(that)g(it)h(is)g Fh(ex-)-152 4704
y(tensible)p Ft(.)j(Exception)22 b(declarations)i(create)g(fresh)f
(distinguishable)-152 4787 y(exception)28 b(constructors;)i(in)e(the)f
(op)r(erational)j(seman)n(tics)d(this)h(is)-152 4870
y(formalised)f(b)n(y)e(the)g(creation)i(of)g(fresh)f(names.)35
b(Ho)n(w)n(ev)n(er,)26 b(for)h(ex-)-152 4953 y(ceptions)j(declared)h
(outside)f(of)g(functions)g(there)g(will)h(b)r(e)f(a)g(\014xed)-152
5036 y(\014nite)25 b(set)g(of)h(names)f(that)f(can)i(b)r(e)f
(determined)e(at)j(compile-time.)-152 5119 y(W)-6 b(e)36
b(exploit)h(this)f(b)n(y)g(represen)n(ting)g(eac)n(h)h(suc)n(h)f
(exception)g(con-)-152 5202 y(structor)28 b(b)n(y)e(a)i(separate)g
(class)g Fi(E)858 5210 y Fg(i)911 5202 y Ft(that)f(sub)r(classes)i
Fi(E)t Ft(,)f(the)e(class)2040 -69 y(of)i(`ML)g(exceptions'.)39
b(In)26 b(con)n(trast)h(to)h(sums,)f(w)n(e)g(do)g(not)g(use)g(the)2040
14 y(same)22 b(class)h(for)g(exception)f(constructors)h(whose)g
(argumen)n(t)e(t)n(yp)r(es)2040 97 y(are)29 b(the)g(same.)44
b(ML's)29 b Fs(handle)h Ft(construct)f(then)f(\014ts)h(b)r(etter)f
(with)2040 180 y(the)h(JVM)h(try-catc)n(h)f(construct)h(where)g(the)f
(class)i(of)f(the)f(excep-)2040 263 y(tion)d(is)g(used)g(to)f
(determine)g(a)h(blo)r(c)n(k)g(of)g(co)r(de)g(to)g(execute.)2152
346 y(F)-6 b(or)25 b Fh(gener)l(ative)32 b Ft(exception)24
b(declarations)i(that)e(app)r(ear)g(inside)2040 429 y(functions,)34
b(w)n(e)f(generate)f(a)h(fresh)f(in)n(teger)h(coun)n(t)e(from)h(a)g
(global)2040 512 y(v)l(ariable)21 b(and)g(store)g(this)g(in)g(a)g
(\014eld)f(in)h(the)g(exception)f(constructor)2040 596
y(ob)t(ject.)34 b(This)21 b(\014eld)f(is)g(tested)h(against)g(in)f
(exception)h(handlers)f(and)2040 679 y(case)27 b(constructs.)2152
762 y(Exceptions)40 b(also)i(giv)n(e)e(a)g(nice)g(anecdotal)h(example)e
(of)i(the)2040 845 y(sort)28 b(of)g(lo)n(w-lev)n(el)h(Ja)n(v)l(a-sp)r
(eci\014c)f(t)n(w)n(eaking)g(that)f(w)n(e'v)n(e)h(found)f(to)2040
928 y(b)r(e)i(necessary)h(in)f(addition)g(to)g(high-lev)n(el)h
(optimisations.)45 b(In)29 b(an)2040 1011 y(early)34
b(v)n(ersion)f(of)i(the)d(compiler)i(w)n(e)g(noticed)f(that)g(certain)h
(pro-)2040 1094 y(grams)f(whic)n(h)g(used)g(exceptions)g(as)g(a)h(con)n
(trol-\015o)n(w)f(mec)n(hanism)2040 1177 y(ran)27 b(h)n(undreds)f(of)i
(times)f(more)g(slo)n(wly)h(than)f(w)n(e)g(w)n(ould)h(ha)n(v)n(e)e(ex-)
2040 1260 y(p)r(ected.)67 b(The)36 b(problem)g(w)n(as)h(trac)n(k)n(ed)f
(do)n(wn)h(to)f(a)h(`feature')h(of)2040 1343 y(Ja)n(v)l(a:)51
b(whenev)n(er)33 b(an)g(exception)g(is)i(created,)h(a)d(complete)h
(stac)n(k)2040 1426 y(trace)g(is)f(computed)f(and)h(stored)g(in)g(the)g
(ob)t(ject.)57 b(The)34 b(solution)2040 1509 y(w)n(as)39
b(simply)d(to)i(o)n(v)n(erride)g(the)f Fs(fillInStackTrace)k
Ft(metho)r(d)c(in)2040 1592 y(the)25 b(ML)h(exception)g(class)h(so)f
(that)g(no)f(stac)n(k)h(trace)g(is)g(stored.)2040 1776
y Fo(6.6)88 b(F)-7 b(unctions)2040 1907 y Ft(As)27 b(men)n(tioned)g
(earlier,)i(functions)f(in)g(MIL)f(are)h(divided)f(in)n(to)g(lo-)2040
1990 y(cals,)g(globals)h(and)d(closures.)36 b(These)26
b(are)g(used)g(as)g(follo)n(ws:)2126 2107 y Fr(\017)42
b Ft(F)-6 b(unctions)24 b(that)h(only)f(ev)n(er)h(app)r(ear)g(in)f
(tail)i(application)g(p)r(o-)2206 2182 y(sitions)i(sharing)g(a)f
(single)h(`con)n(tin)n(uation')g(can)f(b)r(e)g(compiled)2206
2257 y(inline)22 b(as)g(basic)h(blo)r(c)n(ks.)33 b(F)-6
b(unction)21 b(application)i(is)f(compiled)2206 2331
y(as)28 b(a)f Fs(goto)h Ft(b)n(yteco)r(de.)38 b(Inciden)n(tally)-6
b(,)27 b(this)g(is)g(one)g(go)r(o)r(d)h(rea-)2206 2406
y(son)h(for)g(compiling)g(to)g(JVM)f(b)n(yteco)r(des)h(rather)f(than)g
(Ja)n(v)l(a)2206 2481 y(source)i({)g(the)f Fs(goto)h
Ft(instruction)f(is)h(not)f(a)n(v)l(ailable)i(in)e(Ja)n(v)l(a.)2206
2555 y(F)-6 b(or)26 b(example:)2206 2698 y Fa(let)2277
2772 y(val)36 b(f)f(=)h(fn)g(x)f(=>)h(some_code)2206
2847 y(in)2277 2922 y(if)g(z<3)g(then)g(f\(z\))h(else)f(f\(w+z\))2206
2997 y(end)2206 3147 y Ft(The)c(b)r(o)r(dy)g(of)38 b
Fs(f)32 b Ft(is)h(simply)e(compiled)h(as)g(a)g(blo)r(c)n(k)g(of)h(co)r
(de)2206 3230 y(and)25 b(the)h(t)n(w)n(o)g(calls)h(to)f
Fs(f)g Ft(are)g(compiled)f(as)h(jumps.)2206 3331 y(It)33
b(is)g(sometimes)g(ev)n(en)f(p)r(ossible)j(to)e(transform)g(a)g
(non-tail)2206 3405 y(function)d(application)h(in)n(to)f(a)g(tail)g
(one.)47 b(Consider)31 b(the)e(fol-)2206 3480 y(lo)n(wing)e(fragmen)n
(t)f(of)g(ML:)2206 3622 y Fa(let)2277 3697 y(val)36 b(f)f(=)h(fn)g(x)f
(=>)h(some_code)2277 3772 y(val)g(y)f(=)h(if)g(z<3)g(then)g(f\(z\))h
(else)f(f\(w+z\))2206 3846 y(in)2277 3921 y(some_more_code)2206
3996 y(end)2206 4147 y Ft(Assuming)j(that)g Fs(f)h Ft(do)r(es)h(not)e
(app)r(ear)h(in)g(the)f(expression)2206 4230 y Fs(some_more_code)p
Ft(,)24 b(then)17 b(this)i(`con)n(tin)n(uation')g(can)g(b)r(e)f(mo)n(v)
n(ed)2206 4313 y(in)n(to)26 b(the)f(de\014nition)g(of)32
b Fs(f)26 b Ft(and)f(the)g(calls)i(to)f Fs(f)g Ft(implemen)n(ted)2206
4396 y(b)n(y)f(jumps.)2126 4530 y Fr(\017)42 b Ft(Other)19
b(functions)h(app)r(earing)h(only)f(in)f(application)i(p)r(ositions)
2206 4613 y(are)k(compiled)f(as)h(static)h(Ja)n(v)l(a)e(metho)r(ds)g
(in)g(a)h(distinguished)2206 4696 y(class)35 b Fi(G)p
Ft(.)57 b(F)-6 b(unction)33 b(application)h(is)g(implemen)n(ted)d(b)n
(y)h(the)2206 4779 y Fs(invokestatic)25 b Ft(b)n(yteco)r(de,)d(unless)g
(it)g(is)g(a)g(recursiv)n(e)g(tail)g(call)2206 4862 y(to)k(itself,)h
(in)f(whic)n(h)g(case)g Fs(goto)h Ft(is)f(used.)2126
4996 y Fr(\017)42 b Ft(The)21 b(remaining)f(functions)g(are)h(used)f
(in)g(a)g(higher-order)h(w)n(a)n(y)2206 5079 y(and)h(so)g(m)n(ust)f(b)r
(e)h(compiled)f(as)i(closures.)35 b(There)22 b(are)h(a)f(n)n(um-)2206
5162 y(b)r(er)31 b(of)h(w)n(a)n(ys)f(that)g(this)g(can)h(b)r(e)f(ac)n
(hiev)n(ed.)50 b(The)31 b(most)g(ob-)2206 5245 y(vious)c(is)f(to)h
(generate)g(for)g(eac)n(h)f(function)g(t)n(yp)r(e)g(an)g(abstract)1921
5494 y(7)p eop
8 8 bop 14 -69 a Ft(class)34 b(with)e(an)g(abstract)g
Fh(app)37 b Ft(metho)r(d,)c(and)e(then)h(to)g(sub-)14
14 y(class)26 b(this)f(for)h(eac)n(h)f(closure)h(of)f(that)g(t)n(yp)r
(e,)f(storing)i(the)e(free)14 97 y(v)l(ariables)35 b(as)g(instance)g(v)
l(ariables)g(in)f(the)g(ob)t(ject.)60 b(This)35 b(is)14
180 y(rather)28 b(w)n(asteful)i(of)f(classes,)h(using)f(one)f(p)r(er)g
(function)g(t)n(yp)r(e)14 263 y(and)e(closure)g(app)r(earing)h(in)e
(the)h(program.)14 368 y(W)-6 b(e)30 b(curren)n(tly)g(use)h(a)f
(di\013eren)n(t)g(\(and)g(at)h(\014rst)f(sigh)n(t)h(rather)14
443 y(alarming\))c(sc)n(heme.)37 b(Instead)27 b(of)g(a)g(single)h
Fh(app)k Ft(metho)r(d,)26 b(w)n(e)14 517 y(use)20 b(di\013eren)n(t)f
(metho)r(d)f(names)h(for)h(di\013eren)n(t)f(function)g(t)n(yp)r(es.)14
592 y(There)38 b(is)g(a)f(single)h(sup)r(erclass)h Fi(F)48
b Ft(of)38 b(all)g(functions,)j(with)14 667 y(dumm)n(y)26
b(metho)r(ds)i(for)h(eac)n(h)g(p)r(ossible)h Fh(app)k
Ft(metho)r(d.)43 b(Then)14 742 y(closures)31 b(with)e(the)f(same)h(t)n
(yp)r(es)f(of)i(free)g(v)l(ariables)g(but)e(dif-)14 816
y(feren)n(t)h(function)f(t)n(yp)r(es)g(share)h(sub)r(classes)h(of)f
Fi(F)11 b Ft(.)42 b(It)28 b(is)g(ev)n(en)14 891 y(p)r(ossible)i(for)g
(the)f(actual)g(closure)h(ob)t(jects)g(to)f(b)r(e)g(shared,)h(if)14
966 y(their)f(free)g(v)l(ariables)g(are)f(the)g(same)g(but)f
Fh(app)34 b Ft(metho)r(ds)27 b(are)14 1041 y(di\013eren)n(t.)34
b(F)-6 b(or)26 b(example:)14 1205 y Fa(fun)37 b(f)e(\(x:string\))j(=)14
1280 y(let)85 1354 y(val)e(f1)g(=)f(fn)h(y:int)h(=>)f(\(x,y\))85
1429 y(val)g(f2)g(=)f(fn)h(z:string)i(=>)e(\(x,z\))14
1504 y(in)85 1578 y(...)14 1653 y(end)14 1826 y Ft(If)g(closures)g(are)
g(required)f(for)h Fs(f1)f Ft(and)g Fs(f2)h Ft(then)e(they)h(can)14
1909 y(share)24 b(the)e(same)g(closure)i(class)g(as)f(their)g(free)g(v)
l(ariable)g(t)n(yp)r(es)14 1992 y(are)33 b(the)g(same)f(but)g(function)
g(t)n(yp)r(es)g(are)i(di\013eren)n(t.)54 b(More-)14 2075
y(o)n(v)n(er,)28 b(the)f Fh(values)34 b Ft(of)28 b(their)f(free)h(v)l
(ariables)g(are)g(the)f(same)g(so)14 2158 y(the)j(same)f(ob)t(ject)i
(can)f(b)r(e)f(used)h(for)g(b)r(oth,)h(sa)n(ving)f(an)g(allo-)14
2241 y(cation.)-40 2384 y(A)e(simple)g(\015o)n(w)h(analysis)g(is)g
(used)f(to)h(decide)f(ho)n(w)h(eac)n(h)f(func-)-152 2467
y(tion)22 b(should)g(b)r(e)g(compiled.)33 b(A)21 b(more)h
(sophisticated)g(\015o)n(w)h(analysis)-152 2550 y(w)n(ould)30
b(not)f(only)g(allo)n(w)i(us)e(to)g(iden)n(tify)g(more)f(kno)n(wn)h
(functions,)-152 2633 y(but)h(w)n(ould)h(also)h(re\014ne)e(our)h(t)n
(yp)r(e-based)e(partitioning)j(of)f(appli-)-152 2716
y(cation)36 b(metho)r(ds,)g(allo)n(wing)h(more)d(sharing)i(of)f
(classes)i(b)r(et)n(w)n(een)-152 2799 y(closures.)-152
2995 y Fo(7)89 b(BBC)-152 3152 y Ft(The)30 b(Basic)i(Blo)r(c)n(k)e(Co)r
(de)h(\(BBC\))g(is)f(a)g(static)h(single-assignmen)n(t)-152
3235 y(represen)n(tation)21 b(of)h(the)e(op)r(erations)i(a)n(v)l
(ailable)f(in)g(the)f(Ja)n(v)l(a)h(virtual)-152 3318
y(mac)n(hine,)28 b(whic)n(h)f(abstracts)h(a)n(w)n(a)n(y)g(from)f
(certain)h(instruction)g(se-)-152 3401 y(lection)h(details,)h
(including)f(the)e(distinction)i(b)r(et)n(w)n(een)f(stac)n(k)g(and)-152
3484 y(lo)r(cal)d(v)l(ariables.)35 b(Normal)23 b(form)g(MIL)h(\(with)f
(all)h(comm)n(uting)e(con-)-152 3567 y(v)n(ersions)d(applied\))g(is)g
(translated)h(in)n(to)e(BBC)i(\(whic)n(h)f(also)h(includes)-152
3650 y(some)30 b(information)f(ab)r(out)h(e\013ects)g(and)f(whic)n(h)g
(ob)t(ject)i(\014elds)e(are)-152 3733 y(m)n(utable\))g(and)h(the)g(bac)
n(k)n(end)f(then)g(orders)i(and)f(selects)h(instruc-)-152
3816 y(tions)g(to)g(turn)f(that)g(in)n(to)h(real)g(b)n(yteco)r(de.)49
b(Curren)n(tly)30 b(the)h(bac)n(k-)-152 3899 y(end)25
b(constructs)h(a)f(dep)r(endency)f(D)n(A)n(G)h(from)g(the)g(BBC)h(and)f
(then)-152 3982 y(w)n(orks)c(from)f(the)f(top)h(do)n(wn,)h(using)g(the)
e(stac)n(k)h(where)h(p)r(ossible)g(but)-152 4065 y(\(mostly\))d
(storing)h(in)n(termediate)f(results)h(in)g(lo)r(cal)h(v)l(ariables)f
(where)-152 4148 y(they)i(are)h(used)f(more)g(than)g(once,)i(or)f
(where)g(ordering)g(constrain)n(ts)-152 4231 y(mak)n(e)33
b(their)i(immediate)e(use)h(on)g(the)g(stac)n(k)g(imp)r(ossible.)61
b(After)-152 4314 y(that,)26 b(there)e(is)i(a)f(pass)h(in)f(whic)n(h)g
(lo)r(cal)i(v)l(ariable)e(n)n(um)n(b)r(ers)e(are)j(re-)-152
4397 y(assigned,)g(so)f(that)e(the)h(n)n(um)n(b)r(er)e(of)i(copies)h(b)
r(et)n(w)n(een)f(basic)h(blo)r(c)n(ks)-152 4480 y(is)33
b(minimised,)h(com)n(bined)d(with)h(a)h(standard)g(register-colouring)
-152 4563 y(phase)24 b(in)f(whic)n(h)g(w)n(e)h(try)e(to)i(minimise)e
(the)h(total)h(n)n(um)n(b)r(er)d(of)j(lo)r(cal)-152 4646
y(v)l(ariables)j(used.)-40 4729 y(This)h(sc)n(heme)f(pro)r(duces)g(co)r
(de)h(whic)n(h)f(is)h(resp)r(ectable)h(but)d(far)-152
4812 y(from)20 b(optimal.)33 b(Data)20 b(passed)g(b)r(et)n(w)n(een)g
(basic)g(blo)r(c)n(ks)g(is)h(nev)n(er)e(left)-152 4895
y(on)g(the)g(stac)n(k)g(but)f(is)i(instead)f(passed)g(via)g(lo)r(cal)i
(v)l(ariables.)33 b(Within)-152 4978 y(basic)d(blo)r(c)n(ks)g(themselv)
n(es,)g(the)f(JVM's)h(stac)n(k)g(is)g(only)f(used)g(in)g(a)-152
5061 y(fairly)f(simple-minded)d(w)n(a)n(y)-6 b(.)38 b(This)28
b(causes)g(to)r(o)f(man)n(y)f(lo)r(cal)i(v)l(ari-)-152
5144 y(ables)k(to)g(b)r(e)f(used)g(and)g(leads)h(to)f(co)r(de)h(b)r
(eing)f(somewhat)g(larger)-152 5227 y(than)g(w)n(e)g(w)n(ould)h(lik)n
(e.)50 b(Hea)n(vy)30 b(optimisation)i(of)g(the)e(bac)n(k)n(end)g(is)p
2251 -148 1572 4 v 2251 -65 4 84 v 2299 -90 a(Benc)n(hmark)p
2820 -65 V 190 w(MLJ)p 3071 -65 V 93 w(Mosco)n(w)p 3429
-65 V 95 w(SML/NJ)p 3819 -65 V 2251 -62 1572 4 v 2251
21 4 84 v 2299 -4 a(N\014b)p 2820 21 V 489 w(3.2)261
b(0.5)289 b(0.4)p 3819 21 V 2251 104 V 2299 79 a(Quic)n(ksort)p
2820 104 V 308 w(5.7)261 b(1.3)289 b(0.7)p 3819 104 V
2251 187 V 2299 162 a(Life)p 2820 187 V 468 w(10.6)262
b(1.0)289 b(2.4)p 3819 187 V 2251 270 V 2299 245 a(Kn)n(uth-Bendix)p
2820 270 V 115 w(20.6)262 b(1.8)289 b(5.3)p 3819 270
V 2251 353 V 2299 328 a(Mandelbrot)p 2820 353 V 243 w(4.3)261
b(0.5)289 b(0.7)p 3819 353 V 2251 436 V 2299 411 a(Bo)n(y)n(er-Mo)r
(ore)p 2820 436 V 163 w(51.8)262 b(5.0)289 b(8.0)p 3819
436 V 2251 519 V 2299 494 a(FFT)p 2820 519 V 439 w(13.7)262
b(1.5)289 b(2.4)p 3819 519 V 2251 522 1572 4 v 2474 670
a(T)-6 b(able)26 b(1:)35 b(Compile)26 b(times)f(\(seconds\))2040
997 y(probably)32 b(not)g(justi\014ed)g(from)f(the)h(p)r(oin)n(t)g(of)h
(view)f(of)h(execution)2040 1080 y(sp)r(eed,)e(giv)n(en)f(that)f(the)g
(b)n(yteco)r(des)g(will)j(usually)d(b)r(e)h(recompiled)2040
1163 y(b)n(y)d(a)i(JIT-compiling)g(virtual)f(mac)n(hine)g(whic)n(h)g
(do)r(es)h(its)f(o)n(wn)h(in-)2040 1246 y(dep)r(enden)n(t)22
b(mapping)g(of)j(stac)n(k)e(lo)r(cations)i(and)e(lo)r(cal)i(v)l
(ariables)f(to)2040 1329 y(registers)34 b(and)f(memory)-6
b(,)32 b(but)g(w)n(e)h(are)g(also)i(k)n(een)d(to)g(reduce)h(the)2040
1412 y(size)f(of)g(the)e(b)n(yteco)r(des.)50 b(W)-6 b(e)31
b(are)h(curren)n(tly)e(dev)n(eloping)h(an)g(im-)2040
1495 y(pro)n(v)n(ed)c(bac)n(k)n(end)g(whic)n(h)h(will)h(mak)n(e)e(m)n
(uc)n(h)f(more)i(in)n(telligen)n(t)h(use)2040 1578 y(of)e(the)e(stac)n
(k.)2040 1774 y Fo(8)89 b(Curren)n(t)30 b(Status)g(and)g(P)n
(erformance)2040 1931 y Ft(MLJ)39 b(0.1)h(curren)n(tly)d(comprises)i
(ab)r(out)f(60,000)j(lines)e(of)g(SML,)2040 2014 y(written)52
b(using)g(SML/NJ)g(v)n(ersion)g(110,)59 b(plus)52 b(the)f(Basis)i(li-)
2040 2097 y(brary)j(co)r(de.)129 b(It)56 b(is)h(freely)h(a)n(v)l
(ailable)g(o)n(v)n(er)e(the)h(w)n(eb)g(\(at)2040 2180
y Fs(http://research.persimmon.co.)q(uk/m)q(lj/)p Ft(\))41
b(as)35 b(an)g(SML/NJ)2040 2263 y(heap)23 b(image)f(for)i(Solaris,)h
(Win32,)f(Lin)n(ux)e(and)g(Digital)i(Unix)d(with)2040
2346 y(the)k(Basis)j(co)r(de)e(compiled)f(in.)2152 2429
y(Although)31 b(there)h(is)g(scop)r(e)h(for)f(further)g(impro)n(v)n
(emen)n(t,)f(MLJ)2040 2512 y(is)j(already)g(useful)g(in)f(real)h
(applications.)59 b(In)n(ternal)33 b(pro)t(jects)h(at)2040
2595 y(P)n(ersimmon)25 b(using)h(MLJ)g(include)2126 2738
y Fr(\017)42 b Ft(W)-6 b(riting)27 b(functional)h(SGML/XML)g(st)n
(ylesheets)f(whic)n(h)g(can)2206 2821 y(b)r(e)36 b(do)n(wnloaded)h(in)n
(to)g(w)n(eb)f(bro)n(wsers)h(or)g(run)f(on)g(serv)n(ers.)2206
2904 y(This)h(in)n(v)n(olv)n(es)f(a)h(lot)g(of)g(in)n(terlanguage)h(w)n
(orking,)i(includ-)2206 2987 y(ing)g(with)f(Ja)n(v)l(ascript)h(\(using)
g(Netscap)r(e)g(and)f(Microsoft's)2206 3070 y(bro)n(wser-sp)r(eci\014c)
19 b(Ja)n(v)l(a)f(classes\))h(and)f(with)g(third-part)n(y)e(Ja)n(v)l(a)
2206 3153 y(XML)26 b(parsers.)2126 3296 y Fr(\017)42
b Ft(Implemen)n(ting)33 b(a)i(graphical)h(functional)g(language)g(for)g
(\014l-)2206 3379 y(tering)g(and)e(classifying)j(ev)n(en)n(ts)e(from)g
(w)n(eb)g(serv)n(ers.)63 b(This)2206 3462 y(in)n(v)n(olv)n(es)33
b(in)n(terw)n(orking)g(with)g(a)f(third-part)n(y)f(graph)i(editor)2206
3545 y(written)26 b(in)g(Ja)n(v)l(a.)2040 3688 y(W)-6
b(e)28 b(ha)n(v)n(e)g(a)h(n)n(um)n(b)r(er)d(of)k(nice)e
(demonstrations,)i(including)f(P)n(aul-)2040 3771 y(son's)h(Hal)f
(theorem)f(pro)n(v)n(er)g(for)i(\014rst-order)e(logic)j([18)q(])e
(compiled)2040 3854 y(with)22 b(some)g(third-part)n(y)f(Ja)n(v)l(a)h
(terminal)g(co)r(de)h(to)f(pro)r(duce)g(an)g(ap-)2040
3937 y(plet,)29 b(sev)n(eral)f(functional)h(programs)e(with)h
(graphical)h(user)f(in)n(ter-)2040 4020 y(faces)h(and)f(some)f(whic)n
(h)h(access)i(an)d(Oracle)i(database)g(via)f(Ja)n(v)l(a's)2040
4103 y(JDBC)22 b(API.)g(The)f(largest)i(program)e(whic)n(h)h(w)n(e)g
(ha)n(v)n(e)e(successfully)2040 4186 y(compiled)k(is)i(around)e(12,000)
j(lines)f(\(a)f(compiler)g(for)g(ASN.1,)g(pro-)2040 4269
y(ducing)h(C++\).)2040 4457 y Fo(8.1)88 b(Compile)31
b(times)2040 4588 y Ft(The)25 b(compile)g(times)g(for)g(a)h(range)f(of)
h(standard)f(SML)f(b)r(enc)n(hmark)2040 4671 y(programs)39
b(are)f(sho)n(wn)h(in)f(T)-6 b(able)39 b(1.)73 b(All)38
b(timings)g(w)n(ere)h(tak)n(en)2040 4754 y(on)e(a)h(200MHz)g(P)n(en)n
(tium)e(Pro)i(with)g(64MB)g(of)h(RAM)d(running)2040 4837
y(Windo)n(ws)c(NT4.0.)53 b(W)-6 b(e)31 b(ha)n(v)n(e)g(compared)g(a)h
(recen)n(t)f(\(July)g(1998\))2040 4920 y(in)n(ternal)i(v)n(ersion)g(of)
h(MLJ)f(\(0.1e\))h(with)f(Mosco)n(w)i(ML)e(1.42)h(and)2040
5003 y(SML/NJ)26 b(110.)1921 5494 y(8)p eop
9 9 bop 59 -148 1572 4 v 59 -65 4 84 v 107 -90 a Ft(Benc)n(hmark)p
629 -65 V 190 w(MLJ)p 880 -65 V 94 w(Mosco)n(w)p 1237
-65 V 95 w(SML/NJ)p 1627 -65 V 59 -62 1572 4 v 59 21
4 84 v 107 -4 a(N\014b)p 629 21 V 489 w(3.7)261 b(3.4)272
b(310)p 1627 21 V 59 104 V 107 79 a(Quic)n(ksort)p 629
104 V 308 w(7.1)261 b(3.8)272 b(346)p 1627 104 V 59 187
V 107 162 a(Life)p 629 187 V 468 w(11.4)262 b(5.9)272
b(337)p 1627 187 V 59 270 V 107 245 a(Kn)n(uth-Bendix)p
629 270 V 115 w(24.6)262 b(9.8)272 b(360)p 1627 270 V
59 353 V 107 328 a(Mandelbrot)p 629 353 V 243 w(4.2)261
b(3.7)272 b(316)p 1627 353 V 59 436 V 107 411 a(Bo)n(y)n(er-Mo)r(ore)p
629 436 V 163 w(25.4)223 b(39.1)273 b(439)p 1627 436
V 59 519 V 107 494 a(FFT)p 629 519 V 439 w(15.4)262 b(6.5)272
b(374)p 1627 519 V 59 522 1572 4 v 124 670 a(T)-6 b(able)26
b(2:)35 b(Co)r(de)26 b(size)h(comparisons)f(\(kilob)n(ytes\))-152
997 y Fo(8.2)89 b(Co)r(de)29 b(size)-152 1129 y Ft(T)-6
b(able)38 b(2)f(lists)h(the)f(sizes)h(of)g(compiled)e(co)r(de)i(pro)r
(duced)e(b)n(y)g(the)-152 1212 y(three)20 b(compilers.)32
b(T)-6 b(o)20 b(obtain)g(a)g(\(roughly\))f(fair)h(comparison,)i(eac)n
(h)-152 1295 y(excludes)34 b(the)f(run-time)f(system.)58
b(F)-6 b(or)34 b(MLJ,)h(the)e(total)h(size)h(of)-152
1378 y(the)26 b(class)h(\014les)g(is)f(giv)n(en)g(\(so)h(this)f
(excludes)g(the)g(Ja)n(v)l(a)g(in)n(terpreter)-152 1461
y(required)19 b(to)g(run)g(it\).)32 b(F)-6 b(or)19 b(Mosco)n(w)i(ML,)f
(the)f(size)h(of)g(the)e(b)n(yteco)r(de)-152 1544 y(\014le)24
b(alone)h(is)f(giv)n(en)g(\(so)g(this)g(excludes)f(the)h
Fs(camlrunm)h Ft(in)n(terpreter)-152 1627 y(required)j(to)h(run)f
(it\).)43 b(F)-6 b(or)28 b(SML/NJ,)h(the)g(size)g(of)g(the)f(Windo)n
(ws)-152 1710 y(heap)23 b(image)g(pro)r(duced)f(b)n(y)h
Fs(exportFn)h Ft(is)f(giv)n(en)g(\(so)g(this)g(excludes)-152
1793 y(the)j Fs(run.x86-win32)i Ft(run-time)c(system)h(required)g(to)h
(run)f(it\).)-152 1980 y Fo(8.3)89 b(Run)30 b(times)-152
2112 y Ft(Some)i(preliminary)g(b)r(enc)n(hmark)e(times)i(are)h(sho)n
(wn)g(in)f(T)-6 b(able)33 b(3.)-152 2195 y(All)39 b(timings)f(w)n(ere)h
(p)r(erformed)g(on)f(the)g(same)g(mac)n(hine)g(as)h(the)-152
2278 y(compilation)c(b)r(enc)n(hmarks)d(and)i(w)n(e)h(again)g(compare)f
(MLJ)h(0.1e)-152 2361 y(with)26 b(Mosco)n(w)g(ML)g(1.42)g(and)f(SML/NJ)
g(110.)36 b(The)25 b(run)f(times)h(do)-152 2444 y(not)h(include)f
(start-up)g(time)g(for)i(the)e(run-time)f(system.)-40
2527 y(F)-6 b(our)19 b(di\013eren)n(t)g(Ja)n(v)l(a)h(implemen)n
(tations)e(w)n(ere)h(used)g(to)h(run)e(the)-152 2610
y(co)r(de)26 b(compiled)g(b)n(y)e(MLJ:)-66 2753 y Fr(\017)42
b Fs(java)f(NT)p Ft(:)30 b(the)g(latest)h(v)n(ersion)f(\(1.2)h(b)r(eta)
f(3\))g(of)h(Sun's)e(Ja)n(v)l(a)14 2836 y(Dev)n(elopmen)n(t)c(Kit)h
(running)g(under)g(Windo)n(ws)h(NT4.0)h(with)14 2919
y(Syman)n(tec's)d(JIT)h(\(3.00.023\(x\)\))i(enabled;)-66
3061 y Fr(\017)42 b Fs(jview)f(NT)p Ft(:)19 b(the)e(latest)j(v)n
(ersion)e(of)h(Microsoft's)i(JIT)e(compiler)14 3144 y(\(build)25
b(2613\))j(running)d(under)f(Windo)n(ws)j(NT4.0;)-66
3287 y Fr(\017)42 b Fs(kaffe)f(Linux)p Ft(:)34 b(the)24
b(latest)h(v)n(ersion)f(\(0.9.2\))h(of)g(Tim)e(Wilkin-)14
3370 y(son's)e(Ka\013e)f(JVM)g(with)g(JIT)g(enabled,)h(running)e(under)
g(Red-)14 3453 y(Hat)26 b(Lin)n(ux)e(5.0;)-66 3596 y
Fr(\017)42 b Fs(java)f(Linux)p Ft(:)34 b(Stev)n(e)24
b(Byrne's)g(1.1.6v2)i(p)r(ort)e(of)h(Sun's)e(in)n(ter-)14
3679 y(preting)j(JVM)g(running)f(under)g(RedHat)g(Lin)n(ux)f(5.0.)-40
3822 y(T)-6 b(o)37 b(illustrate)h(the)e(e\013ect)h(that)f(initial)i
(heap)e(size)i(can)e(ha)n(v)n(e)-152 3905 y(on)25 b(p)r(erformance,)h
(Sun's)e(JVMs)i(w)n(ere)f(tested)g(t)n(wice:)35 b(\014rstly)25
b(with)-152 3988 y(the)g(default)h(initial)h(heap)e(of)h(1MB)g(and)f
(secondly)g(with)h(the)f(heap)-152 4071 y(starting)i(at)f(30MB.)-152
4259 y Fo(8.4)89 b(In)n(terpretation)31 b(of)f(the)g(results)-152
4390 y Ft(As)24 b(usual,)h(the)f(details)h(of)f(these)g(small-program)g
(b)r(enc)n(hmark)e(\014g-)-152 4473 y(ures)c(should)f(b)r(e)h(treated)f
(with)h(some)f(scepticism,)j(but)c(it's)j(p)r(ossible)-152
4556 y(to)26 b(mak)n(e)f(some)g(broad)h(generalisations.)-40
4639 y(The)35 b(\014rst)e(thing)h(to)g(note)g(is)h(that)e(MLJ)i
(compile)f(times)f(are)-152 4722 y(v)n(ery)24 b(high)g(\(b)r(et)n(w)n
(een)g(4)h(and)f(11)h(times)f(slo)n(w)n(er)h(than)f(Mosco)n(w)i(ML)-152
4805 y(and)31 b(b)r(et)n(w)n(een)f(4)i(and)e(8)h(times)f(slo)n(w)n(er)j
(than)d(SML/NJ\),)h(though)-152 4888 y(it's)36 b(w)n(orth)f
(reiterating)h(that)e(the)h(recompile)g(times,)h(whic)n(h)f(are)-152
4971 y(the)c(imp)r(ortan)n(t)f(n)n(um)n(b)r(ers)f(for)i(soft)n(w)n(are)
i(dev)n(elopmen)n(t,)d(are)h(t)n(yp-)-152 5054 y(ically)h(a)e(third)g
(less)i(than)e(the)g(total)h(compile)f(times)g(giv)n(en)g(here.)-152
5137 y(But)19 b(it's)h(hardly)f(surprising)g(that)g(extensiv)n(e)g
(functional)h(rewriting)-152 5220 y(of)30 b(the)f(whole)h(program)f
(turns)g(out)g(to)g(b)r(e)g(a)h(costly)f(compilation)2040
-69 y(tec)n(hnique)g({)h(if)g(SML/NJ)h(is)f(giv)n(en)g(a)g(whole)h
(program)e(as)i(a)f(sin-)2040 14 y(gle)c(\014le,)f(then)f(its)i
(compile)e(times)h(are)g(often)g(higher)g(than)g(MLJ's.)2040
97 y(Our)30 b(in)n(termediate)h(language)h(certainly)f(uses)g(more)g
(space)g(than)2040 180 y(a)j(more)e(traditional)j(un)n(t)n(yp)r(ed)c
(lam)n(b)r(da)h(calculus)i(w)n(ould,)i(\014rstly)2040
263 y(b)r(ecause)24 b(w)n(e)h(are)f(carrying)g(t)n(yp)r(es)f(around)h
(and)f(secondly)h(b)r(ecause)2040 346 y(the)33 b(computational)g(lam)n
(b)r(da)g(calculus)h(translations)g(are)g(inher-)2040
429 y(en)n(tly)f(more)g(v)n(erb)r(ose.)58 b(This)34 b(slo)n(ws)h
(compilation)f(b)n(y)e(increasing)2040 512 y(heap)c(turno)n(v)n(er.)41
b(The)29 b(curren)n(t)e(parser)i(also)g(con)n(tributes)f(to)h(long)2040
596 y(compile)c(times)f(as)i(it)f(uses)g(parser)g(com)n(binators)g
(rather)g(than)f(b)r(e-)2040 679 y(ing)i(table-driv)n(en.)2152
762 y(Secondly)-6 b(,)31 b(Ja)n(v)l(a)g(Virtual)g(Mac)n(hines)g(v)l
(ary)f(widely)h(in)f(p)r(erfor-)2040 845 y(mance.)j(A)22
b(go)r(o)r(d)i(JIT)g(compiler)e(pro)r(duces)h(signi\014can)n(t)h(sp)r
(eedups,)2040 928 y(but)h(the)f(curren)n(t)h(state)h(of)g(the)f(art)h
(is)f(that)h(the)e(fastest)j(JITs)f(also)2040 1011 y(ha)n(v)n(e)20
b(bugs.)33 b(Microsoft's)23 b(Win32)f(JIT)f(is)g(generally)h(quite)e
(fast)h(but)2040 1094 y(has)37 b(a)g(fundamen)n(tal)e(bug)i(that)f
(sometimes)g(causes)h(op)r(erations)2040 1177 y(to)32
b(b)r(e)f(unsoundly)f(reordered.)52 b(Luc)n(kily)-6 b(,)32
b(w)n(e)g(ha)n(v)n(e)e(b)r(een)i(able)f(to)2040 1260
y(iden)n(tify)24 b(the)g(problem)g(su\016cien)n(tly)g(precisely)h(to)g
(add)f(a)h(compiler)2040 1343 y(option)35 b(to)f(pro)r(duce)g(sligh)n
(tly)h(less)g(e\016cien)n(t)f(co)r(de)h(whic)n(h)f(a)n(v)n(oids)2040
1426 y(the)f(bug.)59 b(The)34 b(curren)n(t)f(v)n(ersion)h(of)g(Syman)n
(tec's)f(JIT)h(is)g(some-)2040 1509 y(times)h(v)n(ery)f(go)r(o)r(d)i
(but)f(has)g(a)h(n)n(um)n(b)r(er)d(of)j(serious)g(bugs)g(whic)n(h)2040
1592 y(often)26 b(prev)n(en)n(t)d(it)i(from)g(running)f(our)h(co)r(de.)
35 b(These)26 b(problems)e(in-)2040 1675 y(dicate)i(a)f(pragmatic)h
(\(though)e(w)n(e)i(hop)r(e)f(temp)r(orary!\))34 b(dra)n(wbac)n(k)2040
1758 y(of)25 b(`clev)n(er')h(compilation)f(of)g(other)g(languages)h(to)
f(Ja)n(v)l(a)g(b)n(yteco)r(des)2040 1841 y({)34 b(most)e(Ja)n(v)l(a)i
(compilers)g(pro)r(duce)f(fairly)h(naiv)n(e,)h(st)n(ylised)f(b)n(yte-)
2040 1924 y(co)r(des)g(whereas)g(MLJ)g(pro)r(duces)f(rather)g(more)f
(con)n(torted)h(b)n(yte-)2040 2007 y(co)r(des)j(whic)n(h,)j(whilst)d(p)
r(erfectly)g(legal)h(according)f(to)g(the)f(JVM)2040
2090 y(sp)r(eci\014cation,)42 b(could)37 b(not)g(ha)n(v)n(e)g(b)r(een)g
(pro)r(duced)g(b)n(y)f(an)n(y)h(Ja)n(v)l(a)2040 2173
y(compiler.)42 b(This)29 b(tends)f(to)g(unco)n(v)n(er)g(bugs)g(whic)n
(h)g(ha)n(v)n(e)g(not)g(ha)n(v)n(e)2040 2256 y(b)r(een)40
b(found)g(b)n(y)f(JVM)h(implemen)n(ters)f(who)h(ha)n(v)n(e)g(only)g
(tested)2040 2339 y(against)27 b(the)e(output)g(of)i(existing)f(Ja)n(v)
l(a)g(compilers.)2152 2422 y(In)38 b(general,)43 b(MLJ)c(co)r(de)g(run)
f(with)h(a)f(JIT)i(compiler)e(tends)2040 2505 y(to)h(ha)n(v)n(e)f
(particularly)h(go)r(o)r(d)h(p)r(erformance)f(\(ev)n(en)f(b)r(etter)g
(than)2040 2588 y(SML/NJ\))43 b(on)h(hea)n(vily)e(n)n(umeric)g(b)r(enc)
n(hmarks)g(suc)n(h)h(as)g(N\014b,)2040 2671 y(Mandelbrot)18
b(and)g(FFT.)g(This)g(is)h(unsurprising,)g(as)f(our)g(monomor-)2040
2754 y(phisation)28 b(should)f(allo)n(w)i(suc)n(h)d(co)r(de)i(to)f(b)r
(e)g(easily)h(translated)g(b)n(y)2040 2837 y(a)e(JIT)g(in)n(to)g(m)n
(uc)n(h)e(the)h(same)h(co)r(de)g(as)g(w)n(ould)g(b)r(e)f(generated)i(b)
n(y)d(a)2040 2920 y(naiv)n(e)c(C)g(compiler.)32 b(More)21
b(t)n(ypical)f(functional)g(co)r(de)g(whic)n(h)g(do)r(es)g(a)2040
3003 y(lot)e(of)g(heap)f(allo)r(cation)i(\(e.g.)33 b(Quic)n(ksort,)19
b(Bo)n(y)n(er-Mo)r(ore)f(and)f(Life\))2040 3086 y(tends)24
b(to)h(run)e(rather)i(more)f(slo)n(wly)-6 b(,)26 b(sho)n(wing)f(that)f
(storage)i(man-)2040 3169 y(agemen)n(t)19 b(in)g(JVMs)h(is)f(still)h
(fairly)h(p)r(o)r(or)e(\(w)n(e)h(susp)r(ect)f(that)g(the)g(fact)2040
3252 y(that)e(increasing)i(the)e(initial)h(heap)g(size)g(mak)n(es)e(a)i
(signi\014can)n(t)g(di\013er-)2040 3335 y(ence)25 b(to)g(Quic)n(ksort,)
g(Kn)n(uth-Bendix)e(and)h(Bo)n(y)n(er-Mo)r(ore)j(but)d(not)2040
3418 y(to)g(Life)h(when)f(running)f(on)h(the)g(Sun/Syman)n(tec)d(JVMs)k
(indicates)2040 3501 y(ine\016cien)n(t)d(heap)f(expansion)h(rather)g
(than)f(just)h(slo)n(w)h(garbage)g(col-)2040 3584 y(lection)29
b Fh(p)l(er)i(se)6 b Ft(\).)43 b(The)29 b(comparison)g(with)f(SML/NJ)h
(on)g(the)f(Life)2040 3667 y(b)r(enc)n(hmark)34 b(is)i(particularly)h
(in)n(teresting)f({)g(taking)g(the)g(b)r(enc)n(h-)2040
3750 y(mark)i(as)i(originally)g(written,)j(our)c(whole)h(program)f
(optimisa-)2040 3833 y(tion)33 b(allo)n(ws)i(us)e(to)h(sp)r(ecialise)h
(represen)n(tations,)h(including)d(uses)2040 3916 y(of)c(p)r
(olymorphic)e(equalit)n(y)-6 b(,)28 b(and)g(run)f(up)h(to)g(3)g(times)g
(faster)h(than)2040 3999 y(SML/NJ.)j(Ho)n(w)n(ev)n(er,)h(when)e(the)g
(program)h(is)f(constrained)h(with)2040 4082 y(a)d(minimal)f
(signature,)j(SML/NJ)f(can)f(also)h(sp)r(ecialise)h(and)e(runs)2040
4165 y(nearly)g(4)g(times)f(faster)h(than)f(the)h(b)r(est)f(MLJ)i(can)e
(manage.)43 b(The)2040 4248 y(particularly)20 b(p)r(o)r(or)f(p)r
(erformance)g(of)h(Microsoft's)i(JIT)d(\(and)f(unim-)2040
4332 y(pressiv)n(e)36 b(p)r(erformance)g(of)g(the)f(others\))h(on)g
(the)f(Kn)n(uth-Bendix)2040 4415 y(b)r(enc)n(hmark)21
b(seems)h(to)h(b)r(e)g(due)f(to)h(the)f(fact)h(that)g(as)g(w)n(ell)h
(as)f(doing)2040 4498 y(a)j(go)r(o)r(d)h(deal)f(of)g(allo)r(cation,)j
(it)d(mak)n(es)e(hea)n(vy)h(use)h(of)g(exceptions.)2152
4581 y(The)e(co)r(de)h(pro)r(duced)e(b)n(y)g(MLJ)i(is)f(impressiv)n
(ely)g(compact)f(but)2040 4664 y(not)36 b(quite)g(as)g(small)h(as)f
(that)g(pro)r(duced)f(b)n(y)h(Mosco)n(w)h(ML.)g(Al-)2040
4747 y(though)22 b(Mosco)n(w)i(has)f(the)f(adv)l(an)n(tage)g(of)h(a)g
(b)n(yteco)r(de)f(sp)r(eci\014cally)2040 4830 y(designed)j(for)g(ML,)h
(w)n(e)f(exp)r(ect)f(to)h(b)r(e)f(able)h(to)g(narro)n(w)g(the)g(gap)g
(in)2040 4913 y(future.)45 b(W)-6 b(e)29 b(ha)n(v)n(e)g(already)h(men)n
(tioned)d(ongoing)k(impro)n(v)n(emen)n(ts)2040 4996 y(to)18
b(our)g(bac)n(k)n(end,)h(but)e(just)h(as)h(signi\014can)n(t)g(is)f(the)
g(non-trivial)g(space)2040 5079 y(o)n(v)n(erhead)24 b(asso)r(ciated)i
(with)f(the)f(fairly)h(large)h(n)n(um)n(b)r(er)c(of)j(distinct)2040
5162 y(Ja)n(v)l(a)37 b(classes)i(pro)r(duced)d(b)n(y)g(MLJ.)i(F)-6
b(or)37 b(example,)i(the)e(Kn)n(uth-)2040 5245 y(Bendix)30
b(b)r(enc)n(hmark)f(pro)r(duces)i(a)f(total)i(of)f(42)g(classes)i(and)d
(o)n(v)n(er)1921 5494 y(9)p eop
10 10 bop 160 -148 3562 4 v 160 -65 4 84 v 208 -90 a
Ft(Benc)n(hmark)p 729 -65 V 1185 w(MLJ)p 2971 -65 V 1089
w(Mosco)n(w)p 3329 -65 V 95 w(SML/NJ)p 3718 -65 V 733
-62 2242 4 v 160 184 4 250 v 729 184 V 822 34 a Fs(jview)822
117 y Ft(NT)p 1108 184 V 1201 34 a Fs(java)1201 117 y
Ft(NT)p 1448 184 V 1541 -7 a Fs(java)1541 76 y Ft(NT)1541
159 y(30MB)p 1832 184 V 1925 34 a Fs(kaffe)1925 117 y
Ft(Lin)n(ux)p 2211 184 V 2304 34 a Fs(Java)2304 117 y
Ft(Lin)n(ux)p 2586 184 V 2679 -7 a Fs(Java)2679 76 y
Ft(Lin)n(ux)2679 159 y(30MB)p 2971 184 V 3329 184 V 3718
184 V 160 187 3562 4 v 160 270 4 84 v 208 245 a(N\014b)p
729 270 V 617 w(0.8)242 b(0.9)287 b(0.9)282 b(1.7)d(5.1)284
b(5.1)p 2971 270 V 261 w(8.2)p 3329 270 V 292 w(1.3)p
3718 270 V 160 353 V 208 328 a(Quic)n(ksort)p 729 353
V 401 w Fr(y)p Ft(8.5)170 b Fr(z)p Ft(25.1)214 b Fr(z)p
Ft(17.7)204 b(109.1)241 b(35.7)246 b(18.2)p 2971 353
V 223 w(21.8)p 3329 353 V 293 w(0.9)p 3718 353 V 160
436 V 208 411 a(Life)p 729 436 V 635 w(7.0)c(7.1)287
b(6.3)244 b(16.3)c(32.3)246 b(31.9)p 2971 436 V 223 w(38.3)p
3329 436 V 216 w Fr(\003)p Ft(18.9)p 3718 436 V 160 519
V 208 494 a(Kn)n(uth-Bendix)p 729 519 V 209 w Fr(y)p
Ft(82.1)204 b(37.0)249 b(10.7)205 b(426.8)241 b(63.0)246
b(26.9)p 2971 519 V 223 w(10.0)p 3329 519 V 293 w(2.4)p
3718 519 V 160 602 V 208 577 a(Mandelbrot)p 729 602 V
332 w(32.7)132 b Fr(z)p Ft(217.9)176 b Fr(z)p Ft(217.9)205
b(167.4)e(217.2)208 b(217.4)p 2971 602 V 185 w(322.7)p
3329 602 V 255 w(41.9)p 3718 602 V 160 685 V 208 660
a(Bo)n(y)n(er-Mo)r(ore)p 729 685 V 330 w(4.2)g Fr(z)p
Ft(6.8)286 b(0.9)244 b(37.3)279 b(8.3)284 b(3.3)p 2971
685 V 261 w(2.1)p 3329 685 V 292 w(0.6)p 3718 685 V 160
768 V 208 743 a(FFT)p 729 768 V 567 w(15.5)205 b(11.8)249
b(12.3)244 b(28.8)c(71.3)246 b(71.8)p 2971 768 V 185
w(441.6)p 3329 768 V 216 w Fi(?)p Ft(28.7)p 3718 768
V 160 772 3562 4 v 14 908 a Fr(y)25 b Ft(requires)h(compilation)g(with)
g(MLJ's)h Fs(microsoftbug)h Ft(switc)n(h)f(set)e(to)h(a)n(v)n(oid)g
(bug)f(in)h(the)f(Microsoft)j(JIT)14 1021 y Fr(z)d Ft(program)h
(crashed)g(due)f(to)h(a)g(bug)f(in)g(the)h(Syman)n(tec)e(JIT;)i(timing)
f(is)i(with)e(JIT)i(disabled)14 1134 y Fi(?)f Ft(SML/NJ)g(ga)n(v)n(e)g
(incorrect)h(results)14 1247 y Fr(\003)f Ft(timing)g(impro)n(v)n(es)e
(to)i(1.7)h(seconds)f(when)g(top-lev)n(el)f(structure)g(is)i
(constrained)f(b)n(y)f(minimal)f(signature)1445 1489
y(T)-6 b(able)27 b(3:)35 b(Run)24 b(times)h(\(seconds\))-152
1817 y(6K)34 b(of)g(the)e(total)i(size)h(of)f(24.6K)g(is)g(tak)n(en)e
(up)h(b)n(y)f(the)h(pro)r(duct,)-152 1900 y(sum,)24 b(exception)g(and)g
Fi(F)34 b Ft(classes,)27 b(eac)n(h)d(of)h(whic)n(h)f(con)n(tains)h
(essen-)-152 1983 y(tially)j(no)e(`real')i(co)r(de.)37
b(There)27 b(is)g(certainly)g(scop)r(e)g(for)h(impro)n(ving)-152
2066 y(our)22 b(represen)n(tation)h(c)n(hoices)g(to)f(decrease)h(co)r
(de)g(size)f(still)i(further.)-152 2261 y Fo(9)89 b(Conclusions)31
b(and)f(F)-7 b(urther)30 b(W)-7 b(ork)-152 2418 y Ft(MLJ)34
b(is)f(a)g(v)n(ery)f(useful)h(to)r(ol:)49 b(a)33 b(compiler)g(for)g(a)g
(p)r(opular)g(func-)-152 2501 y(tional)38 b(language)h(whic)n(h)e(pro)r
(duces)g(compact,)j(highly)d(p)r(ortable)-152 2585 y(co)r(de)26
b(with)g(reasonable)h(p)r(erformance)e(and)g(whic)n(h)h(has)f(un)n
(usually)-152 2668 y(p)r(o)n(w)n(erful)k(and)e(straigh)n(tforw)n(ard)j
(access)e(to)g(a)g(large)h(collection)g(of)-152 2751
y(foreign)j(libraries)h(and)d(comp)r(onen)n(ts.)49 b(But)31
b(the)f(reasonable)i(p)r(er-)-152 2834 y(formance)20
b(has)g(only)f(b)r(een)g(ac)n(hiev)n(ed)g(at)h(the)f(price)g(of)h(high)
g(compile)-152 2917 y(times)31 b(and)f(a)h(limitation)g(on)f(the)h
(size)g(of)h(programs)e(whic)n(h)h(ma)n(y)-152 3000 y(reasonably)c(b)r
(e)f(compiled.)35 b(Our)25 b(decision)i(to)f(do)g(whole-program)-152
3083 y(optimisation)20 b(is)f(certainly)h(con)n(tro)n(v)n(ersial,)h(so)
f(it)f(seems)g(w)n(orth)g(try-)-152 3166 y(ing)26 b(to)g(giv)n(e)g
(some)f(explicit)h(justi\014cation:)-66 3308 y Fr(\017)42
b Ft(Most)34 b(imp)r(ortan)n(tly)-6 b(,)34 b(b)r(ecause)g(of)f(the)g
(relativ)n(e)h(ine\016ciency)14 3391 y(of)c(curren)n(t)f(JVMs)h(and)f
(the)f(di\016cult)n(y)h(of)h(mapping)e(ML)i(to)14 3475
y(Ja)n(v)l(a)e(b)n(yteco)r(des,)g(it)f(w)n(as)h(simply)f(the)g(only)g
(w)n(a)n(y)g(to)h(ac)n(hiev)n(e)14 3558 y(what)e(w)n(e)g(considered)h
(to)e(b)r(e)h(adequate)f(p)r(erformance.)-66 3700 y Fr(\017)42
b Ft(The)20 b(limitation)f(on)g(program)g(size)h(is)g(just)f(not)g(a)h
(problem)e(for)14 3783 y(man)n(y)k(real)j(applications.)35
b(The)24 b(n)n(um)n(b)r(er)e(of)i(SML)g(programs)14 3866
y(whic)n(h)k(are)f(more)g(than,)g(sa)n(y)-6 b(,)28 b(15,000)h(lines)f
(long)g(is)f(actually)14 3949 y(rather)i(small,)g(as)g(one)f(can)h(do)f
(an)g(a)n(wful)i(lot)f(in)f(that)g(m)n(uc)n(h)14 4032
y(SML.)h(W)-6 b(e)28 b(ha)n(v)n(e)g(had)g(it)h(suggested)g(to)g(us)f
(that)g(a)h(compiler)14 4115 y(whic)n(h)21 b(cannot)f(compile)g(itself)
i(is)f(useless,)h(but)e(this)g(is)h(clearly)14 4198 y(nonsense.)-66
4341 y Fr(\017)42 b Ft(T)-6 b(rends)57 b(to)n(w)n(ards)h(comp)r(onen)n
(t)d(arc)n(hitectures,)66 b(in)n(terlan-)14 4424 y(guage)39
b(dev)n(elopmen)n(t,)g(dynamic)d(linking)h(and)g(distributed)14
4507 y(systems)29 b(mean)e(that)i(the)f(large)i(monolithic)f
(application)h(is)14 4590 y(b)r(ecoming)d(less)h(common.)36
b(Of)27 b(course,)h(comp)r(onen)n(t)e(b)r(ound-)14 4673
y(aries)h(rein)n(tro)r(duce)e(the)f(problems)h(of)g(separate)h
(compilation)14 4756 y(in)d(a)h(w)n(orse)g(form,)g(but)e(that's)i(all)g
(the)f(more)f(reason)i(to)g(com-)14 4839 y(pile)i(eac)n(h)g(comp)r
(onen)n(t)f(as)h(w)n(ell)h(as)f(p)r(ossible.)-66 4982
y Fr(\017)42 b Ft(Completely)28 b(separate)h(compilation)g(at)f(the)g
(gran)n(ularit)n(y)g(of)14 5065 y(mo)r(dules)i(in)n(tro)r(duced)g(for)h
(soft)n(w)n(are)h(engineering)g(purp)r(oses)14 5148 y(is)h(an)g(anac)n
(hronism)f(for)i(whic)n(h)e(high-lev)n(el)h(languages)h(can)2206
1817 y(pa)n(y)27 b(dearly)-6 b(,)28 b(as)h(the)e(earlier)i(discussion)g
(of)f(SML/NJ's)h(p)r(er-)2206 1900 y(formance)f(on)h(the)e(Life)i(b)r
(enc)n(hmark)e(indicates)i(\(more)e(real-)2206 1983 y(istically)-6
b(,)30 b(w)n(e)f(ha)n(v)n(e)e(ourselv)n(es)i(doubled)e(the)h(sp)r(eed)g
(of)g(parts)2206 2066 y(of)f(MLJ)f(simply)f(b)n(y)f(man)n(ually)h(demo)
r(dularising)h(the)f(co)r(de\).)2206 2149 y(There)38
b(is)g(a)g(whole)g(range)h(of)f(approac)n(hes)g(b)r(et)n(w)n(een)g
(com-)2206 2232 y(pletely)d(naiv)n(e)f(whole-program)h(compilation)g
(and)f(simple-)2206 2315 y(minded)24 b(separate)j(compilation)g(and,)f
(whilst)g(the)g(optim)n(um)2206 2398 y(lies)40 b(somewhere)f(in)f(the)h
(middle,)i(the)d(t)n(w)n(o)h(extremes)f(are)2206 2481
y(m)n(uc)n(h)i(the)g(easiest)j(for)f(the)f(compiler)g(writer.)83
b(As)41 b(MLJ)2206 2564 y(dev)n(elops,)36 b(cac)n(hing)e(more)f
(information)h(ab)r(out)f(eac)n(h)h(mo)r(d-)2206 2647
y(ule)c(and)f(sacri\014cing)i(some)e(rewrites)i(to)f(b)r(e)f(able)h(to)
g(handle)2206 2730 y(larger)38 b(programs,)i(and)c(other)h(compilers)g
(add)f(ev)n(er)g(more)2206 2813 y(complex)22 b(in)n(termo)r(dule)g
(optimisations,)i(w)n(e)f(exp)r(ect)f(them)f(to)2206
2896 y(come)k(m)n(uc)n(h)f(closer)j(together.)2152 3039
y(It)c(is)g(in)n(teresting)h(to)f(compare)g(MLJ)g(with)h(W)-6
b(adler)23 b(and)f(Oder-)2040 3122 y(sky's)37 b(Pizza)h([17)q(].)69
b(W)-6 b(e)37 b(ha)n(v)n(e)f(started)i(with)f(a)g(standard)g(func-)2040
3205 y(tional)c(language)h(and)e(added)g(extensions)h(to)g(supp)r(ort)f
(in)n(terlan-)2040 3288 y(guage)k(w)n(orking)f(with)h(Ja)n(v)l(a,)h
(whereas)f(Pizza)h(starts)e(with)g(Ja)n(v)l(a)2040 3371
y(and)23 b(adds)h(some)g(`functional')h(features,)g(suc)n(h)e(as)i
(pattern)e(matc)n(h-)2040 3454 y(ing)35 b(and)g(parameterised)g(t)n(yp)
r(es.)61 b(W)-6 b(e)34 b(are)i(a)n(w)n(are)g(of)f(t)n(w)n(o)h(other)
2040 3537 y(attempts)c(to)h(compile)g(SML)g(in)n(to)f(Ja)n(v)l(a,)k
(one)d(b)n(y)e(Bertelsen)j([6)q(],)2040 3620 y(based)g(on)g(Mosco)n(w)h
(ML,)f(and)g(the)f(other)h(b)n(y)e(W)-6 b(alton)34 b(at)g(Edin-)2040
3703 y(burgh.)e(Both)19 b(of)h(these)f(use)g(uniform)g(represen)n
(tations)h(and)f(do)g(not)2040 3786 y(p)r(erform)g(an)n(ything)e(lik)n
(e)i(the)f(same)h(lev)n(el)g(of)g(optimisation)g(as)g(MLJ.)2040
3869 y(W)-6 b(ak)n(eling)20 b(has)g(also)h(compiled)e(Hask)n(ell)h(in)n
(to)g(Ja)n(v)l(a)g(b)n(yteco)r(de,)g(with)2040 3952 y(`disapp)r(oin)n
(ting')28 b(results)g(\(large)g(co)r(de)g(and)e(p)r(erformance)i
(consid-)2040 4035 y(erably)e(slo)n(w)n(er)h(than)e(the)g(Hugs)h(in)n
(terpreter\))f([25)q(].)2152 4118 y(The)i(other)g(main)e(attempt)h(to)h
(compile)f(a)h(mainly)f(functional)2040 4201 y(language)e(in)n(to)f(Ja)
n(v)l(a)g(b)n(yteco)r(de)f(is)h(Bothner's)g(Ka)n(w)n(a)g(compiler)g
(for)2040 4284 y(Sc)n(heme)c([8)q(].)33 b(Ka)n(w)n(a)20
b(has)h(an)f(in)n(teractiv)n(e)h(top-lev)n(el)f(lo)r(op)h(and)f(com-)
2040 4367 y(piles)30 b(b)n(yteco)r(des)f(dynamically)-6
b(,)29 b(but)g(has)g(to)h(use)f(uniform)g(repre-)2040
4450 y(sen)n(tations.)k(Some)17 b(informal)i(tests)g(indicate)g(that)f
(Ka)n(w)n(a)h(t)n(ypically)2040 4533 y(runs)g(an)f(order)h(of)h
(magnitude)e(more)g(slo)n(wly)i(than)f(MLJ)g(and)g(tends)2040
4616 y(to)i(run)f(out)g(of)h(memory)e(or)h(stac)n(k)h(space)g(m)n(uc)n
(h)e(earlier)i(than)f(MLJ.)2152 4699 y(W)-6 b(e)29 b(are)g(curren)n
(tly)g(dev)n(eloping)g(concurrency)f(extensions)i(for)2040
4782 y(MLJ)f(whic)n(h)g(are)g(built)f(on)g(top)h(of)g(Ja)n(v)l(a's)g
(built-in)f(threads)h(and,)2040 4865 y(lo)r(oking)e(further)f(in)n(to)g
(the)g(future,)g(are)g(thinking)g(ab)r(out)g(the)g(p)r(os-)2040
4948 y(sibilit)n(y)31 b(of)g(taking)g(adv)l(an)n(tage)f(of)i(Ja)n(v)l
(a's)f(remote)f(metho)r(d)f(in)n(v)n(o-)2040 5031 y(cation)f
(infrastructure)f(to)g(dev)n(elop)g(distributed)g(and)f(mobile)h(ap-)
2040 5114 y(plications)g(in)f(ML.)1902 5494 y(10)p eop
11 11 bop -40 -69 a Ft(W)-6 b(e)27 b(ha)n(v)n(e)g(reason)h(to)g(b)r
(eliev)n(e)f(that)g(JVMs)h(whic)n(h)f(do)h(tail)g(call)-152
14 y(elimination)19 b(ma)n(y)d(app)r(ear)i(so)r(on,)j(whic)n(h)d(w)n
(ould)g(remo)n(v)n(e)f(one)h(of)g(the)-152 97 y(other)30
b(signi\014can)n(t)f(limitations)h(of)g(MLJ)g({)g(although)g(w)n(e)f
(already)-152 180 y(compile)23 b(most)f(simple)g(lo)r(ops)h(in)n(to)g
(jumps,)f(the)g(lac)n(k)h(of)g(more)f(gen-)-152 263 y(eral)h(tail)g
(call)g(optimisation)f(do)r(es)g(mak)n(e)f(some)h(programs)g(run)f(out)
-152 346 y(of)32 b(stac)n(k)f(space)g(on)f(reasonable-sized)j(inputs.)
49 b(If)31 b(tail)g(call)h(opti-)-152 429 y(misation)24
b(is)h(not)e(done)h(for)g(us,)h(then)e(w)n(e)h(will)h(reluctan)n(tly)e
(ha)n(v)n(e)h(to)-152 512 y(consider)i(selectiv)n(e)f(use)g(of)h(t)n(w)
n(o)f(tec)n(hniques:)33 b(placing)26 b(some)e(func-)-152
596 y(tions)33 b(in)f(the)g(same)g(metho)r(d,)h(and)f(the)g(`tin)n(y)f
(in)n(terpreter')i(tec)n(h-)-152 679 y(nique)26 b(used)g(in)g(the)g
(Glasgo)n(w)i(Hask)n(ell)f(compiler)f([10)q(].)37 b(Naiv)n(e)26
b(use)-152 762 y(of)34 b(of)f(these)g(tec)n(hniques)f(w)n(ould)g(cause)
i(a)e(signi\014can)n(t)i(w)n(orsening)-152 845 y(of)26
b(co)r(de)g(size)g(and)f(sp)r(eed,)h(so)g(w)n(e)f(w)n(ould)h(base)f
(our)h(decisions)g(on)f(a)-152 928 y(more)g(sophisticated)i(\015o)n(w)f
(analysis,)h(whic)n(h)f(w)n(ould)g(also)h(allo)n(w)g(us)-152
1011 y(to)f(impro)n(v)n(e)e(most)g(of)i(the)f(other)g(transformations)h
([21)q(,)g(16].)35 b(This)-152 1094 y(w)n(ould)22 b(app)r(ear)f(to)h(p)
r(oin)n(t)f(to)g(ev)n(en)g(longer)h(compilation)g(times,)g(but)-152
1177 y(w)n(e)f(hop)r(e)f(that)h(this)f(can)h(b)r(e)f(a)n(v)n(oided)g(b)
n(y)g(impro)n(ving)f(the)h(represen-)-152 1260 y(tation)i(of)h(our)e
(in)n(termediate)g(language.)34 b(The)22 b(compiler)g(curren)n(tly)-152
1343 y(sp)r(ends)39 b(a)f(v)l(ast)h(amoun)n(t)e(of)i(time)f(\(and)g
(memory\))f(p)r(erforming)-152 1426 y(trivial)d(rewrites)h(on)e(the)g
(MIL)h(term.)56 b(Man)n(y)33 b(of)h(these)g(rewrites)-152
1509 y(are)d(comm)n(uting)d(con)n(v)n(ersions,)k(whic)n(h)f(w)n(ould)f
(simply)f(disapp)r(ear)-152 1592 y(if)h(a)g(suitable)g(graph)f
(represen)n(tation)h(w)n(ere)g(used)f(instead.)46 b(If)29
b(w)n(e)-152 1675 y(w)n(ere)34 b(also)f(to)g(rewrite)h(destructiv)n
(ely)-6 b(,)33 b(then)f(w)n(e)h(should)g(b)r(e)f(able)-152
1758 y(to)g(obtain)g(further)f(compiler)g(sp)r(eedups.)52
b(A)31 b(further)g(minor)g(im-)-152 1841 y(pro)n(v)n(emen)n(t)h(whic)n
(h)h(w)n(e)g(need)g(to)h(mak)n(e)e(is)i(to)f(ensure)g(that)g(MLJ)-152
1924 y(nev)n(er)24 b(generates)i(metho)r(ds)d(whic)n(h)i(exceed)f(the)g
(JVM's)i(64K)f(b)n(yte)-152 2007 y(limit.)44 b(This)29
b(has)g(so)h(far)f(only)g(happ)r(ened)f(to)h(us)g(on)f(one)h(un)n
(usual)-152 2090 y(program,)36 b(and)e(w)n(e)g(do)g(not)g(an)n
(ticipate)h(an)n(y)e(great)i(di\016cult)n(y)e(in)-152
2173 y(mo)r(difying)26 b(the)f(co)r(de)h(generator)h(to)f(prev)n(en)n
(t)e(it)i(happ)r(ening.)-40 2256 y(Our)i(use)h(of)g(a)g(monadic)f(in)n
(termediate)g(language)i(is)f(particu-)-152 2339 y(larly)h(no)n(v)n
(el.)44 b(Whilst)30 b(w)n(e)f(w)n(ould)h(not)f(claim)g(that)g(this)g
(allo)n(ws)i(us)-152 2422 y(to)g(p)r(erform)g(an)n(y)e(optimisations)j
(whic)n(h)e(could)h(not)g(b)r(e)f(ac)n(hiev)n(ed)-152
2505 y(b)n(y)f(more)f(ad)i(ho)r(c)f(metho)r(ds,)h(w)n(e)f(ha)n(v)n(e)g
(found)g(it)g(to)h(b)r(e)f(a)h(p)r(o)n(w)n(er-)-152 2588
y(ful)f(and)g(elegan)n(t)g(framew)n(ork)g(for)h(structuring)e(the)h
(compiler.)43 b(In)-152 2671 y(general,)24 b(w)n(e)d(w)n(ould)h
(strongly)f(adv)n(o)r(cate)h(a)f(principled)h(use)f(of)h(t)n(yp)r(e)
-152 2754 y(theoretic)27 b(and)e(seman)n(tic)g(ideas)i(in)e(compiler)h
(implemen)n(tation.)-40 2837 y(One)33 b(of)i(the)e(go)r(o)r(d)h(things)
g(ab)r(out)f(compiling)h(to)f(Ja)n(v)l(a)h(b)n(yte-)-152
2920 y(co)r(des)22 b(is)g(that)g(there)f(is)h(a)f(large)i(ongoing)g
(e\013ort)e(to)h(dev)n(elop)f(b)r(etter)-152 3003 y(faster)26
b(JVMs)f(whic)n(h)g(w)n(e)g(can)g(tak)n(e)f(adv)l(an)n(tage)h(of)g(for)
g(free.)35 b(Early)-152 3086 y(information)27 b(from)f(Sun)f(ab)r(out)h
(their)h(next)e(generation)i(of)g(JVMs)-152 3169 y(indicates)22
b(that)f(allo)r(cation)i(and)e(collection)h(will)h(b)r(e)e(impro)n(v)n
(ed)e(sig-)-152 3252 y(ni\014can)n(tly)-6 b(,)22 b(p)r(ossibly)h(b)n(y)
e(a)h(factor)i(of)e(4.)34 b(That)22 b(could)g(mak)n(e)f(MLJ's)-152
3335 y(run)n(time)16 b(p)r(erformance)i(comp)r(etitiv)n(e)f(with)h
(nativ)n(e)g(compilers)f(ev)n(en)-152 3418 y(if)27 b(w)n(e)f(made)f(no)
g(further)h(impro)n(v)n(emen)n(ts)d(ourselv)n(es.)-152
3609 y Fo(References)-113 3766 y Ft([1])42 b(A.)36 b(W.)g(App)r(el.)64
b Fh(Compiling)36 b(with)h(Continuations)p Ft(.)65 b(Cam-)9
3849 y(bridge)26 b(Univ)n(ersit)n(y)f(Press,)i(1992.)-113
3979 y([2])42 b(A.)34 b(W.)h(App)r(el)e(and)h(T.)h(Jim.)59
b(Shrinking)34 b(lam)n(b)r(da)f(expres-)9 4062 y(sions)i(in)f(linear)h
(time.)58 b Fh(Journal)36 b(of)f(F)-6 b(unctional)36
b(Pr)l(o)l(gr)l(am-)9 4145 y(ming)p Ft(,)26 b(7\(5\),)g(Septem)n(b)r
(er)e(1997.)-113 4274 y([3])42 b(K.)21 b(Arnold)f(and)g(J.)i(Gosling.)
27 b Fh(The)c(Java)h(Pr)l(o)l(gr)l(amming)g(L)l(an-)9
4357 y(guage)p Ft(.)36 b(Addison-W)-6 b(esley)g(,)25
b(second)h(edition,)g(1998.)-113 4487 y([4])42 b(P)-6
b(.)32 b(N.)g(Ben)n(ton.)53 b Fh(Strictness)35 b(A)n(nalysis)f(of)f(L)l
(azy)h(F)-6 b(unctional)9 4570 y(Pr)l(o)l(gr)l(ams)p
Ft(.)43 b(PhD)27 b(thesis,)i(Univ)n(ersit)n(y)e(of)i(Cam)n(bridge)e
(Com-)9 4653 y(puter)e(Lab)r(oratory)-6 b(,)26 b(August)e(1993.)35
b(T)-6 b(ec)n(hnical)26 b(Rep)r(ort)e(309.)-113 4783
y([5])42 b(P)-6 b(.)28 b(N.)f(Ben)n(ton,)i(G.)f(M.)g(Bierman,)g(and)g
(V.)f(C.)h(V.)g(de)f(P)n(aiv)l(a.)9 4866 y(Computational)g(t)n(yp)r(es)
e(from)h(a)g(logical)j(p)r(ersp)r(ectiv)n(e.)35 b Fh(Jour-)9
4949 y(nal)28 b(of)f(F)-6 b(unctional)28 b(Pr)l(o)l(gr)l(amming)p
Ft(,)f(1998.)36 b(T)-6 b(o)26 b(app)r(ear.)-113 5079
y([6])42 b(P)-6 b(.)29 b(Bertelsen.)43 b(Compiling)28
b(SML)h(to)f(Ja)n(v)l(a)h(b)n(yteco)r(de.)41 b(Mas-)9
5162 y(ter's)21 b(thesis,)h(Dept.)e(of)h(Information)e(T)-6
b(ec)n(hnology)g(,)22 b(T)-6 b(ec)n(hnical)9 5245 y(Univ.)25
b(of)i(Denmark,)d(Jan)n(uary)i(1998.)2078 -69 y([7])43
b(M.)29 b(Blume.)41 b(CM:)29 b(A)e(compilation)i(manager)f(for)h
(SML/NJ.)2201 14 y(T)-6 b(ec)n(hnical)33 b(rep)r(ort,)h(1995.)54
b(P)n(art)32 b(of)h(SML/NJ)f(do)r(cumen)n(ta-)2201 97
y(tion.)2078 240 y([8])43 b(P)-6 b(.)69 b(Bothner.)164
b(Ka)n(w)n(a)70 b({)g(compiling)f(dynamic)f(lan-)2201
323 y(guages)48 b(to)f(the)g(Ja)n(v)l(a)g(VM.)97 b(In)46
b Fh(USENIX)h(Confer)l(enc)l(e)p Ft(,)2201 406 y(June)59
b(1998.)136 b(Compiler)60 b(and)f(pap)r(er)g(a)n(v)l(ailable)i(from)
2201 489 y Fs(http://www.cygnus.com/~bothne)q(r/ka)q(wa.ht)q(ml)p
Ft(.)2078 632 y([9])43 b(F.)31 b(Henglein)g(and)f(J.)h(J\034rgensen.)50
b(F)-6 b(ormally)30 b(optimal)g(b)r(o)n(x-)2201 715 y(ing.)c(In)19
b Fh(A)n(CM)j(Symp)l(osium)h(on)f(Principles)h(of)f(Pr)l(o)l(gr)l
(amming)2201 798 y(L)l(anguages)p Ft(,)28 b(pages)f(213{226,)h(1994.)
2040 941 y([10])43 b(S.)27 b(L.)g(P)n(eyton)f(Jones.)39
b(Implemen)n(ting)25 b(lazy)i(functional)h(lan-)2201
1024 y(guages)44 b(on)e(sto)r(c)n(k)h(hardw)n(are:)68
b(the)42 b(spineless)i(tagless)g(G-)2201 1107 y(mac)n(hine.)64
b Fh(Journal)37 b(of)g(F)-6 b(unctional)37 b(Pr)l(o)l(gr)l(amming)p
Ft(,)j(pages)2201 1190 y(127{202,)29 b(April)c(1992.)2040
1333 y([11])43 b(S.)38 b(L.)f(P)n(eyton)g(Jones,)42 b(J.)c(Launc)n(h)n
(bury)-6 b(,)39 b(M.)f(Shields,)j(and)2201 1416 y(A.)21
b(T)-6 b(olmac)n(h.)26 b(Bridging)c(the)f(gulf:)33 b(a)21
b(common)e(in)n(termediate)2201 1499 y(language)29 b(for)f(ML)f(and)g
(Hask)n(ell.)40 b(In)26 b Fh(A)n(CM)j(Symp)l(osium)g(on)2201
1582 y(Principles)f(of)f(Pr)l(o)l(gr)l(amming)h(L)l(anguages)p
Ft(,)g(Jan)n(uary)e(1998.)2040 1725 y([12])43 b(J.)34
b(J\034rgensen.)57 b(A)32 b(calculus)i(for)g(b)r(o)n(xing)e(analysis)i
(of)g(p)r(oly-)2201 1808 y(morphically)26 b(t)n(yp)r(ed)e(languages.)37
b(T)-6 b(ec)n(hnical)27 b(Rep)r(ort)e(96/28,)2201 1891
y(DIKU,)g(Univ)n(ersit)n(y)f(of)j(Cop)r(enhagen,)f(Ma)n(y)g(1996.)2040
2033 y([13])43 b(X.)35 b(Lero)n(y)-6 b(.)63 b(Un)n(b)r(o)n(xed)33
b(ob)t(jects)k(and)e(p)r(olymorphic)f(t)n(yping.)2201
2116 y(In)22 b Fh(19th)k(A)n(nnual)e(A)n(CM)h(Symp)l(osium)g(on)f
(Principles)h(of)g(Pr)l(o-)2201 2200 y(gr)l(amming)j(L)l(anguages)p
Ft(,)g(pages)e(177{188,)j(1992.)2040 2342 y([14])43 b(R.)37
b(Milner,)42 b(M.)c(T)-6 b(ofte,)42 b(R.)37 b(Harp)r(er,)k(and)d(D.)f
(MacQueen.)2201 2425 y Fh(The)29 b(De\014nition)g(of)f(Standar)l(d)j
(ML)d(\(R)l(evise)l(d\))p Ft(.)40 b(MIT)27 b(Press,)2201
2508 y(Cam)n(bridge,)f(Mass.,)i(1997.)2040 2651 y([15])43
b(E.)26 b(Moggi.)35 b(Notions)25 b(of)h(computation)e(and)h(monads.)32
b Fh(Infor-)2201 2734 y(mation)c(and)g(Computation)p
Ft(,)f(93\(1\),)g(1991.)2040 2877 y([16])43 b(C.)36 b(Mossin.)65
b(Flo)n(w)36 b(analysis)h(of)f(t)n(yp)r(ed)e(higher-order)i(pro-)2201
2960 y(grams.)68 b(T)-6 b(ec)n(hnical)37 b(Rep)r(ort)g(97/1,)k(DIKU,)36
b(Univ)n(ersit)n(y)g(of)2201 3043 y(Cop)r(enhagen,)27
b(1997.)2040 3186 y([17])43 b(Martin)34 b(Odersky)d(and)i(Philip)h(W)-6
b(adler.)56 b(Pizza)34 b(in)n(to)f(Ja)n(v)l(a:)2201 3269
y(T)-6 b(ranslating)47 b(theory)f(in)n(to)g(practice.)95
b(In)45 b Fh(A)n(CM)h(Symp)l(o-)2201 3352 y(sium)39 b(on)g(Principles)g
(of)f(Pr)l(o)l(gr)l(amming)i(L)l(anguages)p Ft(,)k(Jan-)2201
3435 y(uary)25 b(1997.)2040 3578 y([18])43 b(L.)21 b(C.)h(P)n(aulson.)
27 b Fh(ML)c(for)g(the)h(Working)g(Pr)l(o)l(gr)l(ammer)p
Ft(.)k(Cam-)2201 3661 y(bridge)e(Univ)n(ersit)n(y)f(Press,)i(second)e
(edition,)i(1996.)2040 3803 y([19])43 b(Z.)d(Shao.)78
b(An)39 b(o)n(v)n(erview)i(of)g(the)f(FLINT/ML)g(compiler.)2201
3887 y(In)24 b Fh(A)n(CM)i(SIGPLAN)g(International)h(Confer)l(enc)l(e)h
(on)e(F)-6 b(unc-)2201 3970 y(tional)28 b(Pr)l(o)l(gr)l(amming)p
Ft(,)f(pages)f(85{98,)i(June)e(1997.)2040 4112 y([20])43
b(Z.)32 b(Shao.)53 b(T)n(yp)r(ed)32 b(cross-mo)r(dule)f(compilation.)54
b(T)-6 b(ec)n(hnical)2201 4195 y(Rep)r(ort)34 b(Y)-6
b(ALEU/DCS/TR-1126,)36 b(Departmen)n(t)c(of)j(Com-)2201
4278 y(puter)25 b(Science,)h(Y)-6 b(ale)26 b(Univ)n(ersit)n(y)-6
b(,)24 b(July)i(1997.)2040 4421 y([21])43 b(O.)20 b(Shiv)n(ers.)26
b Fh(Contr)l(ol-\015ow)e(A)n(nalysis)f(of)f(Higher-Or)l(der)j(L)l(an-)
2201 4504 y(guages)p Ft(.)49 b(PhD)30 b(thesis,)i(Carnegie)g(Mellon)f
(Univ)n(ersit)n(y)-6 b(,)30 b(Ma)n(y)2201 4587 y(1991.)36
b(CMU-CS-91-145.)2040 4730 y([22])43 b(D.)66 b(T)-6 b(arditi,)77
b(G.)67 b(Morrisett,)78 b(P)-6 b(.)66 b(Cheng,)77 b(C.)67
b(Stone,)2201 4813 y(R.)40 b(Harp)r(er,)k(and)39 b(P)-6
b(.)40 b(Lee.)77 b(TIL:)41 b(A)e(t)n(yp)r(e-directed)g(opti-)2201
4896 y(mizing)31 b(compiler)g(for)i(ML.)51 b(In)31 b
Fh(A)n(CM)h(SIGPLAN)h(Confer-)2201 4979 y(enc)l(e)25
b(on)f(Pr)l(o)l(gr)l(amming)h(L)l(anguage)g(Design)f(and)h(Implemen-)
2201 5062 y(tation)p Ft(,)i(pages)g(181{192,)h(Philadelphia,)f(P)-6
b(A,)26 b(Ma)n(y)g(1996.)1902 5494 y(11)p eop
12 12 bop -152 -69 a Ft([23])43 b(A.)j(T)-6 b(olmac)n(h.)93
b(Optimizing)45 b(ML)h(using)g(a)g(hierarc)n(h)n(y)f(of)9
14 y(monadic)23 b(t)n(yp)r(es.)31 b(In)23 b Fh(Workshop)k(on)f(T)-6
b(yp)l(es)27 b(in)e(Compilation)p Ft(,)9 97 y(Marc)n(h)h(1998.)-152
238 y([24])43 b(P)-6 b(.)24 b(W)-6 b(adler.)32 b(The)24
b(marriage)h(of)f(e\013ects)g(and)g(monads.)31 b(In)23
b Fh(3r)l(d)9 321 y(A)n(CM)38 b(SIGPLAN)h(Confer)l(enc)l(e)h(on)f(F)-6
b(unctional)39 b(Pr)l(o)l(gr)l(am-)9 404 y(ming)p Ft(,)26
b(Septem)n(b)r(er)e(1998.)36 b(\(this)25 b(v)n(olume\).)-152
544 y([25])43 b(D.)f(W)-6 b(ak)n(eling.)82 b(VSD:)41
b(A)g(Hask)n(ell)h(to)g(Ja)n(v)l(a)g(virtual)g(ma-)9
627 y(c)n(hine)37 b(co)r(de)h(compiler.)68 b(In)36 b
Fh(9th)j(International)g(Workshop)9 710 y(on)c(Implementation)f(of)g(F)
-6 b(unctional)35 b(L)l(anguages)p Ft(,)i(Septem-)9 793
y(b)r(er)26 b(1997.)-152 934 y([26])43 b(S.)55 b(W)-6
b(eeks.)119 b(A)54 b(whole-program)h(optimizing)g(compiler)9
1017 y(for)64 b(Standard)e(ML.)145 b(T)-6 b(ec)n(hnical)63
b(rep)r(ort,)73 b(NEC)63 b(Re-)9 1100 y(searc)n(h)51
b(Institute,)56 b(No)n(v)n(em)n(b)r(er)48 b(1997.)109
b(Av)l(ailable)51 b(from:)9 1183 y Fs(http://www.neci.nj.nec.com/h)q
(omep)q(ages/)q(swee)q(ks/s)q(mlc/)p Ft(.)-152 1378 y
Fo(A)88 b(Sample)30 b(output)-152 1535 y Ft(The)e(co)r(de)f(b)r(elo)n
(w)h(implemen)n(ts)e(the)g(quic)n(ksort)h(algorithm)g(for)h(in-)-152
1618 y(teger)f(lists.)-152 1756 y Fs(fun)40 b(quick)h(xs)e(=)-152
1839 y(let)-73 1922 y(fun)h(quicker)h(\(xs,)f(ys\))g(=)-73
2005 y(case)g(xs)g(of)5 2088 y([])g(=>)g(ys)-73 2171
y(|)f([x])h(=>)g(x::ys)-73 2254 y(|)f(a::bs)i(=>)5 2337
y(let)84 2420 y(fun)f(partition)h(\(left,right,[]\))i(=)241
2503 y(quicker)d(\(left,)h(a::quicker)h(\(right,)e(ys\)\))162
2669 y(|)g(partition)h(\(left,right,)h(x::xs\))e(=)241
2752 y(if)f(x)h(<=)f(a)241 2835 y(then)h(partition)h(\(x::left,)g
(right,)g(xs\))241 2918 y(else)f(partition)h(\(left,)g(x::right,)g
(xs\))5 3001 y(in)84 3084 y(partition\([],[],bs\))5 3167
y(end)-152 3250 y(in)-73 3333 y(quicker)g(\(xs,)f([]\))-152
3416 y(end)-152 3546 y Ft(The)i(in)n(ternal)g(function)g
Fs(quicker)i Ft(compiles)e(to)g(the)f(follo)n(wing)-152
3621 y(static)27 b(metho)r(d:)-152 3750 y Fa(Method)37
b(Ra)f(b\(Ra,)h(Ra\))-46 3825 y(0)f(goto)g(31)-46 3900
y(3)g(new)g(#22)g(<Class)h(Ra>)-46 3975 y(6)f(dup)-46
4049 y(7)g(iload_2)-46 4124 y(8)g(aload_0)-46 4199 y(9)g(invokespecial)
j(#38)d(<Method)h(Ra\(int,Ra\)>)-81 4273 y(12)f(astore_0)-81
4348 y(13)g(goto)g(55)-81 4423 y(16)g(new)g(#22)g(<Class)h(Ra>)-81
4498 y(19)f(dup)-81 4572 y(20)g(iload)g(4)-81 4647 y(22)g(aload_3)-81
4722 y(23)g(aload_1)-81 4796 y(24)g(invokestatic)i(#39)f(<Method)g(Ra)f
(b\(Ra,)g(Ra\)>)-81 4871 y(27)g(invokespecial)j(#38)d(<Method)h
(Ra\(int,Ra\)>)-81 4946 y(30)f(astore_1)-81 5021 y(31)g(aload_0)-81
5095 y(32)g(ifnull)h(105)-81 5170 y(35)f(aload_0)-81
5245 y(36)g(getfield)h(#35)f(<Field)h(Ra)f(b>)2111 -69
y(39)g(dup)2111 6 y(40)g(astore)h(5)2111 81 y(42)f(ifnull)h(92)2111
156 y(45)f(aload_0)2111 230 y(46)g(getfield)h(#37)f(<Field)h(int)f(a>)
2111 305 y(49)g(istore)h(4)2111 380 y(51)f(aconst_null)2111
454 y(52)g(astore_3)2111 529 y(53)g(aconst_null)2111
604 y(54)g(astore_0)2111 679 y(55)g(aload)g(5)2111 753
y(57)g(ifnull)h(16)2111 828 y(60)f(aload)g(5)2111 903
y(62)g(getfield)h(#37)f(<Field)h(int)f(a>)2111 977 y(65)g(dup)2111
1052 y(66)g(istore_2)2111 1127 y(67)g(iload)g(4)2111
1202 y(69)g(aload)g(5)2111 1276 y(71)g(getfield)h(#35)f(<Field)h(Ra)f
(b>)2111 1351 y(74)g(astore)h(5)2111 1426 y(76)f(if_icmple)h(3)2111
1500 y(79)f(new)g(#22)g(<Class)h(Ra>)2111 1575 y(82)f(dup)2111
1650 y(83)g(iload_2)2111 1725 y(84)g(aload_3)2111 1799
y(85)g(invokespecial)j(#38)d(<Method)h(Ra\(int,Ra\)>)2111
1874 y(88)f(astore_3)2111 1949 y(89)g(goto)g(55)2111
2023 y(92)g(new)g(#22)g(<Class)h(Ra>)2111 2098 y(95)f(dup)2111
2173 y(96)g(aload_0)2111 2248 y(97)g(getfield)h(#37)f(<Field)h(int)f
(a>)2075 2322 y(100)h(aload_1)2075 2397 y(101)g(invokespecial)i(#38)d
(<Method)h(Ra\(int,Ra\)>)2075 2472 y(104)g(areturn)2075
2547 y(105)g(aload_1)2075 2621 y(106)g(areturn)2040 2839
y Ft(This)32 b(program)f(illustrates)h(some)f(of)h(the)e(co)r(de)i
(transformations)2040 2922 y(p)r(erformed)25 b(b)n(y)g(MLJ.)2152
3005 y(In)n(teger)h(lists)h(ha)n(v)n(e)e(b)r(een)g(represen)n(ted)h(b)n
(y)e(the)i(class)h Fs(Ra)p Ft(,)f(with)2040 3088 y Fs(nil)34
b Ft(represen)n(ted)f(b)n(y)g Fs(null)h Ft(and)f Fs(x::xs)i
Ft(represen)n(ted)e(b)n(y)f(an)h(in-)2040 3171 y(stance)26
b(of)33 b Fs(Ra)26 b Ft(with)f Fs(x)h Ft(stored)g(in)g(\014eld)f
Fs(a)h Ft(and)f Fs(xs)i Ft(in)e(\014eld)h Fs(b)p Ft(.)2152
3254 y(Notice)32 b(ho)n(w)f(the)g(calls)h(to)g Fs(partition)h
Ft(and)e(the)f(\014rst)h(call)h(to)2040 3337 y Fs(quicker)k
Ft(ha)n(v)n(e)d(b)r(een)h(implemen)n(ted)d(b)n(y)j Fs(goto)h
Ft(b)n(yteco)r(des.)59 b(The)2040 3420 y(tuples)31 b(ha)n(v)n(e)f(b)r
(een)g(remo)n(v)n(ed:)43 b(the)30 b(triple)h(passed)g(to)g
Fs(partition)2040 3503 y Ft(has)21 b(v)l(anished,)h(and)f(the)f
(function)h Fs(quicker)i Ft(exp)r(ecting)e(a)g(pair)g(has)2040
3586 y(b)r(een)k(transformed)h(in)n(to)g(a)g(metho)r(d)e(with)i(t)n(w)n
(o)g(argumen)n(ts.)1902 5494 y(12)p eop end
userdict /end-hook known{end-hook}if
